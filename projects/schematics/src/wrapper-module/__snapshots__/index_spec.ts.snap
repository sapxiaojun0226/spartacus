// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Checkout Scheduled Replenishment should create the checkout wrapper module and import Checkout features 1`] = `
"import { NgModule } from '@angular/core';
import { checkoutB2BTranslationChunksConfig, checkoutB2BTranslations } from \\"@spartacus/checkout/b2b/assets\\";
import { CheckoutB2BRootModule } from \\"@spartacus/checkout/b2b/root\\";
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule, CHECKOUT_FEATURE } from \\"@spartacus/checkout/base/root\\";
import { checkoutScheduledReplenishmentTranslationChunksConfig, checkoutScheduledReplenishmentTranslations } from \\"@spartacus/checkout/scheduled-replenishment/assets\\";
import { CheckoutScheduledReplenishmentRootModule } from \\"@spartacus/checkout/scheduled-replenishment/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutRootModule,
        CheckoutB2BRootModule,
        CheckoutScheduledReplenishmentRootModule
    ],
    providers: [provideConfig(<CmsConfig>{
            featureModules: {
                [CHECKOUT_FEATURE]: {
                    module: () => import('./checkout-wrapper.module').then((m) => m.CheckoutWrapperModule),
                },
            }
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutTranslations,
                chunks: checkoutTranslationChunksConfig,
            },
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutB2BTranslations,
                chunks: checkoutB2BTranslationChunksConfig,
            },
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutScheduledReplenishmentTranslations,
                chunks: checkoutScheduledReplenishmentTranslationChunksConfig,
            },
        })
    ]
})
export class CheckoutFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Checkout Scheduled Replenishment should create the checkout wrapper module and import Checkout features 2`] = `
"import { NgModule } from '@angular/core';
import { CheckoutB2BModule } from \\"@spartacus/checkout/b2b\\";
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
import { CheckoutScheduledReplenishmentModule } from \\"@spartacus/checkout/scheduled-replenishment\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutModule,
        CheckoutB2BModule,
        CheckoutScheduledReplenishmentModule
    ]
})
export class CheckoutWrapperModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Checkout and DP Should order the imports in the wrapper and Spartacus features modules 1`] = `
"import { NgModule } from '@angular/core';
import { AnonymousConsentsModule, AuthModule, CostCenterOccModule, ExternalRoutesModule, ProductModule, ProductOccModule, UserModule, UserOccModule } from \\"@spartacus/core\\";
import { AddressBookModule, AnonymousConsentManagementBannerModule, AnonymousConsentsDialogModule, BannerCarouselModule, BannerModule, BreadcrumbModule, CategoryNavigationModule, CmsParagraphModule, ConsentManagementModule, FooterNavigationModule, HamburgerMenuModule, HomePageEventModule, LinkModule, LoginRouteModule, LogoutModule, MyCouponsModule, MyInterestsModule, NavigationEventModule, NavigationModule, NotificationPreferenceModule, PageTitleModule, PaymentMethodsModule, ProductCarouselModule, ProductDetailsPageModule, ProductFacetNavigationModule, ProductImagesModule, ProductIntroModule, ProductListingPageModule, ProductListModule, ProductPageEventModule, ProductReferencesModule, ProductSummaryModule, ProductTabsModule, ScrollToTopModule, SearchBoxModule, SiteContextSelectorModule, StockNotificationModule, TabParagraphContainerModule } from \\"@spartacus/storefront\\";
import { UserFeatureModule } from './features/user/user-feature.module';
import { CartBaseFeatureModule } from './features/cart/cart-base-feature.module';
import { OrderFeatureModule } from './features/order/order-feature.module';
import { CheckoutFeatureModule } from './features/checkout/checkout-feature.module';
import { DigitalPaymentsFeatureModule } from './features/digital-payments/digital-payments-feature.module';
@NgModule({
    declarations: [],
    imports: [
        AuthModule.forRoot(),
        LogoutModule,
        LoginRouteModule,
        HamburgerMenuModule,
        SiteContextSelectorModule,
        LinkModule,
        BannerModule,
        CmsParagraphModule,
        TabParagraphContainerModule,
        BannerCarouselModule,
        CategoryNavigationModule,
        NavigationModule,
        FooterNavigationModule,
        BreadcrumbModule,
        ScrollToTopModule,
        PageTitleModule,
        UserModule,
        UserOccModule,
        AddressBookModule,
        PaymentMethodsModule,
        NotificationPreferenceModule,
        MyInterestsModule,
        StockNotificationModule,
        ConsentManagementModule,
        MyCouponsModule,
        AnonymousConsentsModule.forRoot(),
        AnonymousConsentsDialogModule,
        AnonymousConsentManagementBannerModule,
        ProductModule.forRoot(),
        ProductOccModule,
        ProductDetailsPageModule,
        ProductListingPageModule,
        ProductListModule,
        SearchBoxModule,
        ProductFacetNavigationModule,
        ProductTabsModule,
        ProductCarouselModule,
        ProductReferencesModule,
        ProductImagesModule,
        ProductSummaryModule,
        ProductIntroModule,
        CostCenterOccModule,
        NavigationEventModule,
        HomePageEventModule,
        ProductPageEventModule,
        ExternalRoutesModule.forRoot(),
        UserFeatureModule,
        CartBaseFeatureModule,
        OrderFeatureModule,
        CheckoutFeatureModule,
        DigitalPaymentsFeatureModule
    ]
})
export class SpartacusFeaturesModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Checkout and DP Should order the imports in the wrapper and Spartacus features modules 2`] = `
"import { NgModule } from '@angular/core';
import { checkoutB2BTranslationChunksConfig, checkoutB2BTranslations } from \\"@spartacus/checkout/b2b/assets\\";
import { CheckoutB2BRootModule } from \\"@spartacus/checkout/b2b/root\\";
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule, CHECKOUT_FEATURE } from \\"@spartacus/checkout/base/root\\";
import { checkoutScheduledReplenishmentTranslationChunksConfig, checkoutScheduledReplenishmentTranslations } from \\"@spartacus/checkout/scheduled-replenishment/assets\\";
import { CheckoutScheduledReplenishmentRootModule } from \\"@spartacus/checkout/scheduled-replenishment/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutRootModule,
        CheckoutB2BRootModule,
        CheckoutScheduledReplenishmentRootModule
    ],
    providers: [provideConfig(<CmsConfig>{
            featureModules: {
                [CHECKOUT_FEATURE]: {
                    module: () => import('./checkout-wrapper.module').then((m) => m.CheckoutWrapperModule),
                },
            }
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutTranslations,
                chunks: checkoutTranslationChunksConfig,
            },
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutB2BTranslations,
                chunks: checkoutB2BTranslationChunksConfig,
            },
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutScheduledReplenishmentTranslations,
                chunks: checkoutScheduledReplenishmentTranslationChunksConfig,
            },
        })
    ]
})
export class CheckoutFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Checkout and DP Should order the imports in the wrapper and Spartacus features modules 3`] = `
"import { NgModule } from '@angular/core';
import { CheckoutB2BModule } from \\"@spartacus/checkout/b2b\\";
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
import { CheckoutScheduledReplenishmentModule } from \\"@spartacus/checkout/scheduled-replenishment\\";
import { DigitalPaymentsModule } from \\"@spartacus/digital-payments\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutModule,
        CheckoutB2BModule,
        CheckoutScheduledReplenishmentModule,
        DigitalPaymentsModule
    ]
})
export class CheckoutWrapperModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Checkout and DP Should order the imports in the wrapper and Spartacus features modules 4`] = `
"import { NgModule } from '@angular/core';
import { I18nConfig, provideConfig } from \\"@spartacus/core\\";
import { dpTranslationChunksConfig, dpTranslations } from \\"@spartacus/digital-payments/assets\\";
@NgModule({
    declarations: [],
    imports: [],
    providers: [provideConfig(<I18nConfig>{
            i18n: {
                resources: dpTranslations,
                chunks: dpTranslationChunksConfig,
            },
        })
    ]
})
export class DigitalPaymentsFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Digital Payments should create the checkout wrapper module and import Base Checkout and DP 1`] = `
"import { NgModule } from '@angular/core';
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
import { DigitalPaymentsModule } from \\"@spartacus/digital-payments\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutModule,
        DigitalPaymentsModule
    ]
})
export class CheckoutWrapperModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Digital Payments should create the checkout wrapper module and import Base Checkout and DP 2`] = `
"import { NgModule } from '@angular/core';
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule, CHECKOUT_FEATURE } from \\"@spartacus/checkout/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutRootModule
    ],
    providers: [provideConfig(<CmsConfig>{
            featureModules: {
                [CHECKOUT_FEATURE]: {
                    module: () => import('./checkout-wrapper.module').then((m) => m.CheckoutWrapperModule),
                },
            }
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutTranslations,
                chunks: checkoutTranslationChunksConfig,
            },
        })
    ]
})
export class CheckoutFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Digital Payments should create the checkout wrapper module and import Base Checkout and DP 3`] = `
"import { NgModule } from '@angular/core';
import { I18nConfig, provideConfig } from \\"@spartacus/core\\";
import { dpTranslationChunksConfig, dpTranslations } from \\"@spartacus/digital-payments/assets\\";
@NgModule({
    declarations: [],
    imports: [],
    providers: [provideConfig(<I18nConfig>{
            i18n: {
                resources: dpTranslations,
                chunks: dpTranslationChunksConfig,
            },
        })
    ]
})
export class DigitalPaymentsFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Double execution should not change anything 1`] = `
"import { NgModule } from '@angular/core';
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule, CHECKOUT_FEATURE } from \\"@spartacus/checkout/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutRootModule
    ],
    providers: [provideConfig(<CmsConfig>{
            featureModules: {
                [CHECKOUT_FEATURE]: {
                    module: () => import('./checkout-wrapper.module').then((m) => m.CheckoutWrapperModule),
                },
            }
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutTranslations,
                chunks: checkoutTranslationChunksConfig,
            },
        })
    ]
})
export class CheckoutFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Double execution should not change anything 2`] = `
"import { NgModule } from '@angular/core';
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutModule
    ]
})
export class CheckoutWrapperModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Multiple dynamic imports in the file should generate appropriate feature module 1`] = `
"import { NgModule } from '@angular/core';
import { cartBaseTranslationChunksConfig, cartBaseTranslations } from \\"@spartacus/cart/base/assets\\";
import { ADD_TO_CART_FEATURE, CartBaseRootModule, CART_BASE_FEATURE, MINI_CART_FEATURE } from \\"@spartacus/cart/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CartBaseRootModule
    ],
    providers: [provideConfig(<CmsConfig>{
            featureModules: {
                [CART_BASE_FEATURE]: {
                    module: () => import('./cart-base-wrapper.module').then((m) => m.CartBaseWrapperModule),
                },
            }
        }),
        provideConfig(<CmsConfig>{
            featureModules: {
                [MINI_CART_FEATURE]: {
                    module: () => import('@spartacus/cart/base/components/mini-cart').then((m) => m.MiniCartModule),
                },
            }
        }),
        provideConfig(<CmsConfig>{
            featureModules: {
                [ADD_TO_CART_FEATURE]: {
                    module: () => import('@spartacus/cart/base/components/add-to-cart').then((m) => m.AddToCartModule),
                },
            }
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: cartBaseTranslations,
                chunks: cartBaseTranslationChunksConfig,
            },
        })
    ]
})
export class CartBaseFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module Multiple dynamic imports in the file should generate appropriate feature module 2`] = `
"import { NgModule } from '@angular/core';
import { CartBaseModule } from \\"@spartacus/cart/base\\";
@NgModule({
    declarations: [],
    imports: [
        CartBaseModule
    ]
})
export class CartBaseWrapperModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module One dynamic import in the file should generate appropriate feature module 1`] = `
"import { NgModule } from '@angular/core';
import { checkoutB2BTranslationChunksConfig, checkoutB2BTranslations } from \\"@spartacus/checkout/b2b/assets\\";
import { CheckoutB2BRootModule } from \\"@spartacus/checkout/b2b/root\\";
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule, CHECKOUT_FEATURE } from \\"@spartacus/checkout/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutRootModule,
        CheckoutB2BRootModule
    ],
    providers: [provideConfig(<CmsConfig>{
            featureModules: {
                [CHECKOUT_FEATURE]: {
                    module: () => import('./checkout-wrapper.module').then((m) => m.CheckoutWrapperModule),
                },
            }
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutTranslations,
                chunks: checkoutTranslationChunksConfig,
            },
        }),
        provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutB2BTranslations,
                chunks: checkoutB2BTranslationChunksConfig,
            },
        })
    ]
})
export class CheckoutFeatureModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module One dynamic import in the file should generate appropriate feature module 2`] = `
"import { NgModule } from '@angular/core';
import { CheckoutB2BModule } from \\"@spartacus/checkout/b2b\\";
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutModule,
        CheckoutB2BModule
    ]
})
export class CheckoutWrapperModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module wrapper module already exists should append the feature module after it, and not add a dynamic import to the feature module 1`] = `
"import { NgModule } from '@angular/core';
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
import { AnonymousConsentsModule, AuthModule, CostCenterOccModule, ExternalRoutesModule, ProductModule, ProductOccModule, UserModule, UserOccModule } from \\"@spartacus/core\\";
import { DigitalPaymentsModule } from \\"@spartacus/digital-payments\\";
import { AddressBookModule, AnonymousConsentManagementBannerModule, AnonymousConsentsDialogModule, BannerCarouselModule, BannerModule, BreadcrumbModule, CategoryNavigationModule, CmsParagraphModule, ConsentManagementModule, FooterNavigationModule, HamburgerMenuModule, HomePageEventModule, LinkModule, LoginRouteModule, LogoutModule, MyCouponsModule, MyInterestsModule, NavigationEventModule, NavigationModule, NotificationPreferenceModule, PageTitleModule, PaymentMethodsModule, ProductCarouselModule, ProductDetailsPageModule, ProductFacetNavigationModule, ProductImagesModule, ProductIntroModule, ProductListingPageModule, ProductListModule, ProductPageEventModule, ProductReferencesModule, ProductSummaryModule, ProductTabsModule, ScrollToTopModule, SearchBoxModule, SiteContextSelectorModule, StockNotificationModule, TabParagraphContainerModule } from \\"@spartacus/storefront\\";
import { CartBaseFeatureModule } from './features/cart/cart-base-feature.module';
import { CheckoutFeatureModule } from './features/checkout/checkout-feature.module';
import { DigitalPaymentsFeatureModule } from './features/digital-payments/digital-payments-feature.module';
import { OrderFeatureModule } from './features/order/order-feature.module';
import { UserFeatureModule } from './features/user/user-feature.module';
@NgModule({
    declarations: [],
    imports: [
        AuthModule.forRoot(),
        LogoutModule,
        LoginRouteModule,
        HamburgerMenuModule,
        SiteContextSelectorModule,
        LinkModule,
        BannerModule,
        CmsParagraphModule,
        TabParagraphContainerModule,
        BannerCarouselModule,
        CategoryNavigationModule,
        NavigationModule,
        FooterNavigationModule,
        BreadcrumbModule,
        ScrollToTopModule,
        PageTitleModule,
        UserModule,
        UserOccModule,
        AddressBookModule,
        PaymentMethodsModule,
        NotificationPreferenceModule,
        MyInterestsModule,
        StockNotificationModule,
        ConsentManagementModule,
        MyCouponsModule,
        AnonymousConsentsModule.forRoot(),
        AnonymousConsentsDialogModule,
        AnonymousConsentManagementBannerModule,
        ProductModule.forRoot(),
        ProductOccModule,
        ProductDetailsPageModule,
        ProductListingPageModule,
        ProductListModule,
        SearchBoxModule,
        ProductFacetNavigationModule,
        ProductTabsModule,
        ProductCarouselModule,
        ProductReferencesModule,
        ProductImagesModule,
        ProductSummaryModule,
        ProductIntroModule,
        CostCenterOccModule,
        NavigationEventModule,
        HomePageEventModule,
        ProductPageEventModule,
        ExternalRoutesModule.forRoot(),
        UserFeatureModule,
        CartBaseFeatureModule,
        OrderFeatureModule,
        CheckoutFeatureModule,
        CheckoutModule,
        DigitalPaymentsFeatureModule,
        DigitalPaymentsModule
    ]
})
export class SpartacusFeaturesModule {
}
"
`;

exports[`Spartacus Wrapper Module Schematics: ng g @spartacus/schematics:wrapper-module wrapper module already exists should append the feature module after it, and not add a dynamic import to the feature module 2`] = `
"import { NgModule } from '@angular/core';
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule } from \\"@spartacus/checkout/base/root\\";
import { I18nConfig, provideConfig } from \\"@spartacus/core\\";
@NgModule({
    declarations: [],
    imports: [
        CheckoutRootModule
    ],
    providers: [provideConfig(<I18nConfig>{
            i18n: {
                resources: checkoutTranslations,
                chunks: checkoutTranslationChunksConfig,
            },
        })
    ]
})
export class CheckoutFeatureModule {
}
"
`;
