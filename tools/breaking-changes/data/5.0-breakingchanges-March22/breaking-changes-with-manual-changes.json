[
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "CartQuickOrderFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/cart_quick-order_components!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "applyQuickOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "buildForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartEventsSubscription",
        "type": "Subscription"
      },
      {
        "kind": "Property",
        "name": "cartIsLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      { "kind": "Property", "name": "formBuilder", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getValidCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "min", "type": "number" },
      { "kind": "Property", "name": "minQuantityValue", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "quickOrderForm", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "resetForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "watchAddEntryFailEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchAddEntrySuccessEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchQuantityChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  eventService: EventService\n  formBuilder: FormBuilder\n  globalMessageService: GlobalMessageService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  eventService: EventService\n  formBuilder: FormBuilder\n  globalMessageService: GlobalMessageService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_quick-order_components!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "formBuilder",
              "type": "FormBuilder",
              "canonicalReference": "@angular/forms!FormBuilder:class",
              "shortType": "FormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_quick-order_components!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "formBuilder",
              "type": "FormBuilder",
              "canonicalReference": "@angular/forms!FormBuilder:class",
              "shortType": "FormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "component",
            "type": "CmsComponentData<CmsQuickOrderComponent>",
            "canonicalReference": "@spartacus/cart_quick-order_components!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "quickOrderStatePersistenceService",
            "type": "QuickOrderStatePersistenceService",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderStatePersistenceService:class",
            "shortType": "QuickOrderStatePersistenceService",
            "importPath": "@spartacus/cart/quick-order/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderEntries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "addToCartInformation$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "canAddProduct",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "cartErrors$",
        "type": "BehaviorSubject<QuickOrderAddEntryEvent[]>"
      },
      { "kind": "Property", "name": "cartId$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "cartSuccesses$",
        "type": "BehaviorSubject<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "cartWarnings$",
        "type": "BehaviorSubject<QuickOrderAddEntryEvent[]>"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearAddToCartInformation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearDeletion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearErrors",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearNonPurchasableError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearStatuses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSuccesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearWarnings",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsQuickOrderComponent>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "errors$",
        "type": "Observable<QuickOrderAddEntryEvent[]>"
      },
      {
        "kind": "Method",
        "name": "extractErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "extractSuccesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": ""
          },
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "extractWarnings",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "globalMessageType",
        "type": "typeof GlobalMessageType"
      },
      {
        "kind": "Property",
        "name": "isCartStable$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "listLimitReached$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "nonPurchasableError$",
        "type": "Observable<Product | null>"
      },
      {
        "kind": "Property",
        "name": "nonPurchasableProductError$",
        "type": "BehaviorSubject<Product | null>"
      },
      {
        "kind": "Property",
        "name": "quickOrderForm",
        "type": "QuickOrderFormComponent"
      },
      {
        "kind": "Property",
        "name": "quickOrderListLimit$",
        "type": "Observable<number | undefined>"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      {
        "kind": "Property",
        "name": "quickOrderStatePersistenceService",
        "type": "QuickOrderStatePersistenceService"
      },
      {
        "kind": "Method",
        "name": "setErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSuccesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setWarnings",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "warnings",
            "type": "QuickOrderAddEntryEvent[]",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showAddedToCartSuccessMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "showAddToCartInformation$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "softDeletedEntries$",
        "type": "Observable<Record<string, OrderEntry>>"
      },
      {
        "kind": "Property",
        "name": "successes$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "undoDeletion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "warnings$",
        "type": "Observable<QuickOrderAddEntryEvent[]>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  component: CmsComponentData<CmsQuickOrderComponent>\n  globalMessageService: GlobalMessageService\n  quickOrderService: QuickOrderFacade\n  quickOrderStatePersistenceService: QuickOrderStatePersistenceService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  component: CmsComponentData<CmsQuickOrderComponent>\n  globalMessageService: GlobalMessageService\n  quickOrderService: QuickOrderFacade\n  quickOrderStatePersistenceService: QuickOrderStatePersistenceService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsQuickOrderComponent>",
              "canonicalReference": "@spartacus/cart_quick-order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "quickOrderStatePersistenceService",
              "type": "QuickOrderStatePersistenceService",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderStatePersistenceService:class",
              "shortType": "QuickOrderStatePersistenceService",
              "importPath": "@spartacus/cart/quick-order/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsQuickOrderComponent>",
              "canonicalReference": "@spartacus/cart_quick-order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "quickOrderStatePersistenceService",
              "type": "QuickOrderStatePersistenceService",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderStatePersistenceService:class",
              "shortType": "QuickOrderStatePersistenceService",
              "importPath": "@spartacus/cart/quick-order/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_components!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "event",
            "type": "Event",
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "blurSuggestionBox",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "buildForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "canAddProduct",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "cd",
        "type": "ChangeDetectorRef | undefined"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "Config | undefined" },
      {
        "kind": "Method",
        "name": "focusNextChild",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "focusPreviousChild",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getFocusedElement",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "HTMLElement | any"
      },
      {
        "kind": "Method",
        "name": "getFocusedIndex",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getResultElements",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "HTMLElement[]"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "string",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isResultsBoxOpen",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "isSearching", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isSuggestionFocused",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "noResults", "type": "boolean" },
      {
        "kind": "Method",
        "name": "onBlur",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      {
        "kind": "Method",
        "name": "resetSearchSubscription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "results", "type": "Product[]" },
      {
        "kind": "Method",
        "name": "searchProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "searchSubscription",
        "type": "Subscription"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "toggleBodyClass",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "className",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "add",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchProductAdd",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subscription"
      },
      {
        "kind": "Method",
        "name": "watchQueryChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subscription"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef | undefined" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  globalMessageService: GlobalMessageService\n  quickOrderService: QuickOrderFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  config: Config\n  cd: ChangeDetectorRef\n  quickOrderService: QuickOrderFacade\n  winRef: WindowRef\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            }
          ],
          "newParams": [
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_components!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/cart_quick-order_components!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_components!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/cart_quick-order_components!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  globalMessageService: GlobalMessageService\n  quickOrderService: QuickOrderFacade\n  config: Config\n  cd: ChangeDetectorRef\n  winRef: WindowRef\n)\n",
        "currentStateDoc": "\nconstructor(\n  config: Config\n  cd: ChangeDetectorRef\n  quickOrderService: QuickOrderFacade\n  winRef: WindowRef\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_components!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/cart_quick-order_components!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_components!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/cart_quick-order_components!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "cd",
        "changeDesc": true,
        "oldType": "ChangeDetectorRef | undefined",
        "newType": "ChangeDetectorRef",
        "previousStateDoc": "cd: ChangeDetectorRef | undefined",
        "currentStateDoc": "cd: ChangeDetectorRef"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "config",
        "changeDesc": true,
        "oldType": "Config | undefined",
        "newType": "Config",
        "previousStateDoc": "config: Config | undefined",
        "currentStateDoc": "config: Config"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "globalMessageService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        "apiElementName": "QuickOrderFormComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/components",
        "deletedComment": "// TODO:Spartacus - Property 'globalMessageService' was removed from Class 'QuickOrderFormComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "winRef",
        "changeDesc": true,
        "oldType": "WindowRef | undefined",
        "newType": "WindowRef",
        "previousStateDoc": "winRef: WindowRef | undefined",
        "currentStateDoc": "winRef: WindowRef"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/core",
    "kind": "Class",
    "name": "QuickOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productAdapter",
            "type": "ProductAdapter",
            "canonicalReference": "@spartacus/cart_quick-order_core!ProductAdapter:class",
            "shortType": "ProductAdapter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/cart_quick-order_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addSoftEntryDeletion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          },
          {
            "name": "clearTimeout",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<[OrderEntry[], QuickOrderAddEntryEvent[]]>"
      },
      {
        "kind": "Method",
        "name": "canAdd",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "clearDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearDeleteTimeout",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "clearDeleteTimeouts",
        "type": "Record<string, Subscription>"
      },
      {
        "kind": "Method",
        "name": "clearList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "BehaviorSubject<OrderEntry[]>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "generateOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "OrderEntry"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "BehaviorSubject<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Product | null>"
      },
      {
        "kind": "Method",
        "name": "getProductAdded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subject<string>"
      },
      {
        "kind": "Method",
        "name": "getSoftDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Record<string, OrderEntry>>"
      },
      {
        "kind": "Method",
        "name": "getSoftDeletedEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "OrderEntry"
      },
      {
        "kind": "Method",
        "name": "hardDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "hardDeleteTimeout", "type": "number" },
      {
        "kind": "Method",
        "name": "isLimitExceeded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isProductOnTheList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "loadEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "nonPurchasableProductError$",
        "type": "BehaviorSubject<Product | null>"
      },
      {
        "kind": "Property",
        "name": "productAdapter",
        "type": "ProductAdapter"
      },
      {
        "kind": "Property",
        "name": "productAdded$",
        "type": "Subject<string>"
      },
      {
        "kind": "Property",
        "name": "productSearchConnector",
        "type": "ProductSearchConnector | undefined"
      },
      { "kind": "Property", "name": "quickOrderListLimit", "type": "number" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSoftDeletedEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "searchProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxProducts",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product[]>"
      },
      {
        "kind": "Method",
        "name": "setListLimit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "limit",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setProductAdded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "softDeletedEntries$",
        "type": "BehaviorSubject<Record<string, OrderEntry>>"
      },
      {
        "kind": "Method",
        "name": "softDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateEntryQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryIndex",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  productAdapter: ProductAdapter\n  eventService: EventService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  config: Config\n  eventService: EventService\n  productSearchConnector: ProductSearchConnector\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productAdapter",
              "type": "ProductAdapter",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductAdapter:class",
              "shortType": "ProductAdapter",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_quick-order_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_core!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_quick-order_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productSearchConnector",
              "type": "ProductSearchConnector",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductSearchConnector:class",
              "shortType": "ProductSearchConnector",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productAdapter",
              "type": "ProductAdapter",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductAdapter:class",
              "shortType": "ProductAdapter",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_core!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productSearchConnector",
              "type": "ProductSearchConnector",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductSearchConnector:class",
              "shortType": "ProductSearchConnector",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  config: Config\n  eventService: EventService\n  productSearchConnector: ProductSearchConnector\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  config: Config\n  eventService: EventService\n  productSearchConnector: ProductSearchConnector\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productAdapter",
              "type": "ProductAdapter",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductAdapter:class",
              "shortType": "ProductAdapter",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_quick-order_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productSearchConnector",
              "type": "ProductSearchConnector",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductSearchConnector:class",
              "shortType": "ProductSearchConnector",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "config",
              "type": "Config",
              "canonicalReference": "@spartacus/cart_quick-order_core!Config:class",
              "shortType": "Config",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_quick-order_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productSearchConnector",
              "type": "ProductSearchConnector",
              "canonicalReference": "@spartacus/cart_quick-order_core!ProductSearchConnector:class",
              "shortType": "ProductSearchConnector",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "productAdapter",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "productAdapter",
          "type": "ProductAdapter"
        },
        "apiElementName": "QuickOrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/core",
        "deletedComment": "// TODO:Spartacus - Property 'productAdapter' was removed from Class 'QuickOrderService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "productSearchConnector",
        "changeDesc": true,
        "oldType": "ProductSearchConnector | undefined",
        "newType": "ProductSearchConnector",
        "previousStateDoc": "productSearchConnector: ProductSearchConnector | undefined",
        "currentStateDoc": "productSearchConnector: ProductSearchConnector"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "removeEntry",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "removeEntry",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "QuickOrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/core",
        "deletedComment": "// TODO:Spartacus - Method 'removeEntry' was removed from Class 'QuickOrderService'.",
        "migrationComment": "Use 'softDeleteEntry' instead."
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "search",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "search",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "productCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Product>"
        },
        "apiElementName": "QuickOrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/core",
        "deletedComment": "// TODO:Spartacus - Method 'search' was removed from Class 'QuickOrderService'.",
        "migrationComment": "Use 'searchProducts' instead."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderConfig",
    "members": [
      {
        "kind": "Property",
        "name": "quickOrder",
        "type": "{\n        searchForm?: {\n            displayProductImages: boolean;\n            maxProducts: number;\n            minCharactersBeforeRequest: number;\n        };\n    }"
      }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "quickOrder",
        "changeDesc": true,
        "oldType": "{\n        searchForm?: {\n            displayProductImages: boolean;\n            maxProducts: number;\n            minCharactersBeforeRequest: number;\n        };\n    }",
        "newType": "{\n        searchForm?: {\n            displayProductImages: boolean;\n            maxProducts: number;\n            minCharactersBeforeRequest: number;\n        };\n        list?: {\n            hardDeleteTimeout: number;\n        };\n    }",
        "previousStateDoc": "quickOrder: {\n        searchForm?: {\n            displayProductImages: boolean;\n            maxProducts: number;\n            minCharactersBeforeRequest: number;\n        };\n    }",
        "currentStateDoc": "quickOrder: {\n        searchForm?: {\n            displayProductImages: boolean;\n            maxProducts: number;\n            minCharactersBeforeRequest: number;\n        };\n        list?: {\n            hardDeleteTimeout: number;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderFacade",
    "members": [
      {
        "kind": "Method",
        "name": "addProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_root!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<[OrderEntry[], QuickOrderAddEntryEvent[]]>"
      },
      {
        "kind": "Method",
        "name": "canAdd",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "clearDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "BehaviorSubject<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Product | null>"
      },
      {
        "kind": "Method",
        "name": "getProductAdded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subject<string>"
      },
      {
        "kind": "Method",
        "name": "getSoftDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Record<string, OrderEntry>>"
      },
      {
        "kind": "Method",
        "name": "hardDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/cart_quick-order_root!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSoftDeletedEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "searchProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxProducts",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product[]>"
      },
      {
        "kind": "Method",
        "name": "setListLimit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "limit",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_root!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setProductAdded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "softDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateEntryQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryIndex",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "removeEntry",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "removeEntry",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "QuickOrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/root",
        "deletedComment": "// TODO:Spartacus - Method 'removeEntry' was removed from Class 'QuickOrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "search",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "search",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "productCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Product>"
        },
        "apiElementName": "QuickOrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/root",
        "deletedComment": "// TODO:Spartacus - Method 'search' was removed from Class 'QuickOrderFacade'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "canonicalReference": "@spartacus/cart_quick-order_root!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "productConnector",
            "type": "ProductConnector",
            "canonicalReference": "@spartacus/cart_quick-order_root!ProductConnector:class",
            "shortType": "ProductConnector",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productsData",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/cart_quick-order_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "handleErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "results$",
            "type": "Subject<ProductImportInfo>",
            "canonicalReference": "rxjs!Subject:class",
            "shortType": "Subject",
            "importPath": "rxjs"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/cart_quick-order_root!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productData",
            "type": "ProductData",
            "canonicalReference": "@spartacus/cart_quick-order_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          },
          {
            "name": "results$",
            "type": "Subject<ProductImportInfo>",
            "canonicalReference": "rxjs!Subject:class",
            "shortType": "Subject",
            "importPath": "rxjs"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "productConnector",
        "type": "ProductConnector"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/quick-order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "QuickOrderOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/quick-order/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "AddToSavedCartComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/cart_saved-cart_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/cart_saved-cart_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "loggedIn", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  authService: AuthService\n  routingService: RoutingService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n  authService: AuthService\n  routingService: RoutingService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "AddToSavedCartComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'AddToSavedCartComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "String",
            "canonicalReference": "!String:interface",
            "shortType": "String",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "String",
            "canonicalReference": "!String:interface",
            "shortType": "String",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "saveCart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "saveCart",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartName",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartDescription",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Cart>"
        },
        "apiElementName": "SavedCartAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/core",
        "deletedComment": "// TODO:Spartacus - Method 'saveCart' was removed from Class 'SavedCartAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "SavedCartAdapter",
            "canonicalReference": "@spartacus/cart_saved-cart_core!SavedCartAdapter:class",
            "shortType": "SavedCartAdapter",
            "importPath": "@spartacus/cart/saved-cart/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "SavedCartAdapter" },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "saveCart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "saveCart",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartName",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartDescription",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Cart>"
        },
        "apiElementName": "SavedCartConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/core",
        "deletedComment": "// TODO:Spartacus - Method 'saveCart' was removed from Class 'SavedCartConnector'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "stateEventService",
            "type": "StateEventService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!StateEventService:class",
            "shortType": "StateEventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "buildRestoreSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "canonicalReference": "@spartacus/cart_saved-cart_core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      },
      {
        "kind": "Method",
        "name": "buildSaveCartSuccessEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "canonicalReference": "@spartacus/cart_saved-cart_core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionType",
            "type": "string | string[]",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{\n        type: string;\n        payload?: any;\n    }>"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerCloneSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerDeleteSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerEditSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerRestoreSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerSaveCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "stateEventService",
        "type": "StateEventService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  eventService: EventService\n  stateEventService: StateEventService\n  multiCartService: MultiCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  eventService: EventService\n  stateEventService: StateEventService\n  multiCartService: MultiCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "stateEventService",
              "type": "StateEventService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!StateEventService:class",
              "shortType": "StateEventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "stateEventService",
              "type": "StateEventService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!StateEventService:class",
              "shortType": "StateEventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "oldType": "MultiCartService",
        "newType": "MultiCartFacade",
        "previousStateDoc": "multiCartService: MultiCartService",
        "currentStateDoc": "multiCartService: MultiCartFacade"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "registerDeleteSavedCartEvents",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "registerDeleteSavedCartEvents",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "SavedCartEventBuilder",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/core",
        "deletedComment": "// TODO:Spartacus - Method 'registerDeleteSavedCartEvents' was removed from Class 'SavedCartEventBuilder'.",
        "migrationComment": "It was moved to 'CartEventBuilder', and was renamed to 'registerDeleteCart'."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart | StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userService",
            "type": "UserService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearCloneSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearRestoreSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSaveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart | undefined>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StateUtils.ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<any>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithMultiCart | StateWithProcess<void>>\n  userIdService: UserIdService\n  userService: UserService\n  multiCartService: MultiCartService\n  eventService: EventService\n)\n",
        "currentStateDoc": "\nconstructor(\n  store: Store<StateWithMultiCart | StateWithProcess<void>>\n  userIdService: UserIdService\n  userService: UserService\n  multiCartService: MultiCartFacade\n  eventService: EventService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart | StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userService",
              "type": "UserService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!UserService:class",
              "shortType": "UserService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart | StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userService",
              "type": "UserService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!UserService:class",
              "shortType": "UserService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getSavedCart",
        "changeDesc": true,
        "previousStateDoc": "\ngetSavedCart(\n  cartId: string\n): Observable<StateUtils.ProcessesLoaderState<Cart>>\n",
        "currentStateDoc": "\ngetSavedCart(\n  cartId: string\n): Observable<StateUtils.ProcessesLoaderState<Cart | undefined>>\n"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "oldType": "MultiCartService",
        "newType": "MultiCartFacade",
        "previousStateDoc": "multiCartService: MultiCartService",
        "currentStateDoc": "multiCartService: MultiCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/occ",
    "kind": "Class",
    "name": "OccSavedCartAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/cart_saved-cart_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/cart_saved-cart_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getCloneSavedCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSaveCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSavedCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getSaveCartEndpoint",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getSaveCartEndpoint",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartName",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartDescription",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "string"
        },
        "apiElementName": "OccSavedCartAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/occ",
        "deletedComment": "// TODO:Spartacus - Method 'getSaveCartEndpoint' was removed from Class 'OccSavedCartAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "saveCart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "saveCart",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartName",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "saveCartDescription",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Cart>"
        },
        "apiElementName": "OccSavedCartAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/occ",
        "deletedComment": "// TODO:Spartacus - Method 'saveCart' was removed from Class 'OccSavedCartAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "DeleteSavedCartEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isDeleted": true,
    "deletedComment": "Class DeleteSavedCartEvent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "DeleteSavedCartEvent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "DeleteSavedCartFailEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isDeleted": true,
    "deletedComment": "Class DeleteSavedCartFailEvent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "DeleteSavedCartFailEvent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "DeleteSavedCartSuccessEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isDeleted": true,
    "deletedComment": "Class DeleteSavedCartSuccessEvent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "DeleteSavedCartSuccessEvent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "NewSavedCartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/cart_saved-cart_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "canonicalReference": "@spartacus/cart_saved-cart_root!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/cart_saved-cart_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          },
          {
            "name": "savedCartInfo",
            "type": "{\n        name: string;\n        description: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/cart_saved-cart_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          },
          {
            "name": "savedCartInfo",
            "type": "{\n        name: string;\n        description: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/saved-cart/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "NewSavedCartOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/saved-cart/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  userIdService: UserIdService\n  multiCartService: MultiCartService\n  savedCartService: SavedCartFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  importInfoService: ProductImportInfoService\n  userIdService: UserIdService\n  multiCartService: MultiCartFacade\n  savedCartService: SavedCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "savedCartService",
              "type": "SavedCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_root!SavedCartFacade:class",
              "shortType": "SavedCartFacade",
              "importPath": "@spartacus/cart/saved-cart/root"
            }
          ],
          "newParams": [
            {
              "name": "importInfoService",
              "type": "ProductImportInfoService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ProductImportInfoService:class",
              "shortType": "ProductImportInfoService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "savedCartService",
              "type": "SavedCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFacade:class",
              "shortType": "SavedCartFacade",
              "importPath": "@spartacus/cart/saved-cart/root"
            }
          ],
          "removedParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "importInfoService",
              "type": "ProductImportInfoService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ProductImportInfoService:class",
              "shortType": "ProductImportInfoService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "actionsSubject",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "actionsSubject",
          "type": "ActionsSubject"
        },
        "apiElementName": "NewSavedCartOrderEntriesContext",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/root",
        "deletedComment": "// TODO:Spartacus - Property 'actionsSubject' was removed from Class 'NewSavedCartOrderEntriesContext'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "oldType": "MultiCartService",
        "newType": "MultiCartFacade",
        "previousStateDoc": "multiCartService: MultiCartService",
        "currentStateDoc": "multiCartService: MultiCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SavedCartFacade",
    "members": [
      {
        "kind": "Method",
        "name": "clearCloneSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearRestoreSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSaveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart | undefined>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StateUtils.ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<any>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getSavedCart",
        "changeDesc": true,
        "previousStateDoc": "\ngetSavedCart(\n  cartId: string\n): Observable<StateUtils.ProcessesLoaderState<Cart>>\n",
        "currentStateDoc": "\ngetSavedCart(\n  cartId: string\n): Observable<StateUtils.ProcessesLoaderState<Cart | undefined>>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SavedCartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/cart_saved-cart_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "canonicalReference": "@spartacus/cart_saved-cart_root!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/cart_saved-cart_root!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/cart_saved-cart_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "savedCartId$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/saved-cart/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "SavedCartOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/saved-cart/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  userIdService: UserIdService\n  multiCartService: MultiCartService\n  savedCartService: SavedCartFacade\n  routingService: RoutingService\n)\n",
        "currentStateDoc": "\nconstructor(\n  importInfoService: ProductImportInfoService\n  userIdService: UserIdService\n  multiCartService: MultiCartFacade\n  savedCartService: SavedCartFacade\n  routingService: RoutingService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "savedCartService",
              "type": "SavedCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_root!SavedCartFacade:class",
              "shortType": "SavedCartFacade",
              "importPath": "@spartacus/cart/saved-cart/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "importInfoService",
              "type": "ProductImportInfoService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ProductImportInfoService:class",
              "shortType": "ProductImportInfoService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "savedCartService",
              "type": "SavedCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFacade:class",
              "shortType": "SavedCartFacade",
              "importPath": "@spartacus/cart/saved-cart/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "importInfoService",
              "type": "ProductImportInfoService",
              "canonicalReference": "@spartacus/cart_saved-cart_components!ProductImportInfoService:class",
              "shortType": "ProductImportInfoService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_saved-cart_components!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "actionsSubject",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "actionsSubject",
          "type": "ActionsSubject"
        },
        "apiElementName": "SavedCartOrderEntriesContext",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/cart/saved-cart/root",
        "deletedComment": "// TODO:Spartacus - Property 'actionsSubject' was removed from Class 'SavedCartOrderEntriesContext'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "oldType": "MultiCartService",
        "newType": "MultiCartFacade",
        "previousStateDoc": "multiCartService: MultiCartService",
        "currentStateDoc": "multiCartService: MultiCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsMerchandisingUserContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/cds!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "canonicalReference": "@spartacus/cds!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/cds!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "profileTagEventService",
            "type": "ProfileTagEventService",
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getUserContext",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<MerchandisingUserContext>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routingService: RoutingService\n  productSearchService: ProductSearchService\n  converterService: ConverterService\n  profileTagEventService: ProfileTagEventService\n)\n",
        "currentStateDoc": "\nconstructor(\n  routingService: RoutingService\n  productSearchService: ProductSearchService\n  converterService: ConverterService\n  profileTagEventService: ProfileTagEventService\n  profileTagLifecycleService: ProfileTagLifecycleService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cds!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productSearchService",
              "type": "ProductSearchService",
              "canonicalReference": "@spartacus/cds!ProductSearchService:class",
              "shortType": "ProductSearchService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "converterService",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/cds!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "profileTagEventService",
              "type": "ProfileTagEventService",
              "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
              "shortType": "ProfileTagEventService",
              "importPath": "@spartacus/cds"
            }
          ],
          "newParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cds!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productSearchService",
              "type": "ProductSearchService",
              "canonicalReference": "@spartacus/cds!ProductSearchService:class",
              "shortType": "ProductSearchService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "converterService",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/cds!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "profileTagEventService",
              "type": "ProfileTagEventService",
              "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
              "shortType": "ProfileTagEventService",
              "importPath": "@spartacus/cds"
            },
            {
              "name": "profileTagLifecycleService",
              "type": "ProfileTagLifecycleService",
              "canonicalReference": "@spartacus/cds!ProfileTagLifecycleService:class",
              "shortType": "ProfileTagLifecycleService",
              "importPath": "@spartacus/cds"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "profileTagLifecycleService",
              "type": "ProfileTagLifecycleService",
              "canonicalReference": "@spartacus/cds!ProfileTagLifecycleService:class",
              "shortType": "ProfileTagLifecycleService",
              "importPath": "@spartacus/cds"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/assets",
    "kind": "Variable",
    "name": "checkoutTranslationChunksConfig",
    "type": "TranslationChunksConfig",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/assets",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "checkoutTranslationChunksConfig",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/assets",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/assets",
    "kind": "Variable",
    "name": "checkoutTranslations",
    "type": "TranslationResources",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/assets",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "checkoutTranslations",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/assets",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Interface",
    "name": "CardWithAddress",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      { "kind": "PropertySignature", "name": "card", "type": "Card" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CardWithAddress",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/b2b/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CartNotEmptyGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartNotEmptyGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  semanticPathService: SemanticPathService\n  router: Router\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n  semanticPathService: SemanticPathService\n  router: Router\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_base_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CartNotEmptyGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CartNotEmptyGuard'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutAuthGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/checkout_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "canonicalReference": "@spartacus/checkout_components!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "userService",
            "type": "UserAccountFacade",
            "canonicalReference": "@spartacus/checkout_components!UserAccountFacade:class",
            "shortType": "UserAccountFacade",
            "importPath": "@spartacus/user/account/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleAnonymousUser",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartUser",
            "type": "User",
            "canonicalReference": "@spartacus/checkout_components!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean | UrlTree"
      },
      {
        "kind": "Method",
        "name": "handleUserRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "User",
            "canonicalReference": "@spartacus/checkout_components!~User:interface",
            "shortType": "User"
          }
        ],
        "returnType": "boolean | UrlTree"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      },
      { "kind": "Property", "name": "userService", "type": "UserAccountFacade" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutAuthGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  authService: AuthService\n  authRedirectService: AuthRedirectService\n  checkoutConfigService: CheckoutConfigService\n  activeCartService: ActiveCartService\n  semanticPathService: SemanticPathService\n  router: Router\n  userService: UserAccountFacade\n  globalMessageService: GlobalMessageService\n)\n",
        "currentStateDoc": "\nconstructor(\n  authService: AuthService\n  authRedirectService: AuthRedirectService\n  checkoutConfigService: CheckoutConfigService\n  activeCartFacade: ActiveCartFacade\n  semanticPathService: SemanticPathService\n  router: Router\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/checkout_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService",
              "canonicalReference": "@spartacus/checkout_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "userService",
              "type": "UserAccountFacade",
              "canonicalReference": "@spartacus/checkout_components!UserAccountFacade:class",
              "shortType": "UserAccountFacade",
              "importPath": "@spartacus/user/account/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/checkout_base_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService",
              "canonicalReference": "@spartacus/checkout_base_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_base_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userService",
              "type": "UserAccountFacade",
              "canonicalReference": "@spartacus/checkout_components!UserAccountFacade:class",
              "shortType": "UserAccountFacade",
              "importPath": "@spartacus/user/account/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutAuthGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutAuthGuard'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "globalMessageService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        "apiElementName": "CheckoutAuthGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'globalMessageService' was removed from Class 'CheckoutAuthGuard'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "handleAnonymousUser",
        "changeDesc": true,
        "previousStateDoc": "\nhandleAnonymousUser(\n  cartUser: User\n): boolean | UrlTree\n",
        "currentStateDoc": "\nhandleAnonymousUser(): boolean | UrlTree\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "handleUserRole",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "handleUserRole",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "user",
              "type": "User",
              "canonicalReference": "@spartacus/checkout_components!~User:interface",
              "shortType": "User"
            }
          ],
          "returnType": "boolean | UrlTree"
        },
        "apiElementName": "CheckoutAuthGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Method 'handleUserRole' was removed from Class 'CheckoutAuthGuard'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userService",
          "type": "UserAccountFacade"
        },
        "apiElementName": "CheckoutAuthGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'userService' was removed from Class 'CheckoutAuthGuard'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutComponentsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutComponentsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutConfig",
            "type": "CheckoutConfig",
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfig:class",
            "shortType": "CheckoutConfig",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "compareDeliveryCost",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode1",
            "type": "DeliveryMode",
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "deliveryMode2",
            "type": "DeliveryMode",
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "findMatchingDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryModes",
            "type": "DeliveryMode[]",
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getPreferredDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryModes",
            "type": "DeliveryMode[]",
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "isExpressCheckout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGuestCheckout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutConfigService",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cartId$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "getCheckoutDetailsLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getPaymentDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryModeCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutDetailsService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutDetailsService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "expressCheckoutService",
            "type": "ExpressCheckoutService",
            "canonicalReference": "@spartacus/checkout_components!ExpressCheckoutService:class",
            "shortType": "ExpressCheckoutService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "expressCheckoutService",
        "type": "ExpressCheckoutService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  router: Router\n  routingConfigService: RoutingConfigService\n  checkoutConfigService: CheckoutConfigService\n  expressCheckoutService: ExpressCheckoutService\n  activeCartService: ActiveCartService\n  checkoutStepService: CheckoutStepService\n)\n",
        "currentStateDoc": "\nconstructor(\n  router: Router\n  routingConfigService: RoutingConfigService\n  checkoutConfigService: CheckoutConfigService\n  expressCheckoutService: ExpressCheckoutService\n  activeCartFacade: ActiveCartFacade\n  checkoutStepService: CheckoutStepService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "expressCheckoutService",
              "type": "ExpressCheckoutService",
              "canonicalReference": "@spartacus/checkout_components!ExpressCheckoutService:class",
              "shortType": "ExpressCheckoutService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/components"
            }
          ],
          "newParams": [
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "canonicalReference": "@spartacus/checkout_base_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "expressCheckoutService",
              "type": "ExpressCheckoutService",
              "canonicalReference": "@spartacus/checkout_base_components!ExpressCheckoutService:class",
              "shortType": "ExpressCheckoutService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutGuard'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutLoginComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "canonicalReference": "@spartacus/checkout_components!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "checkoutLoginForm", "type": "FormGroup" },
      { "kind": "Property", "name": "formBuilder", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sub", "type": "Subscription" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutLoginComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  formBuilder: FormBuilder\n  authRedirectService: AuthRedirectService\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  formBuilder: FormBuilder\n  authRedirectService: AuthRedirectService\n  activeCartFacade: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "formBuilder",
              "type": "FormBuilder",
              "canonicalReference": "@angular/forms!FormBuilder:class",
              "shortType": "FormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService",
              "canonicalReference": "@spartacus/checkout_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "formBuilder",
              "type": "FormBuilder",
              "canonicalReference": "@angular/forms!FormBuilder:class",
              "shortType": "FormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService",
              "canonicalReference": "@spartacus/checkout_base_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutLoginComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutLoginComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutLoginModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutLoginModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrchestratorComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutOrchestratorComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrchestratorModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutOrchestratorModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrderSummaryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutOrderSummaryComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutOrderSummaryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutOrderSummaryComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrderSummaryModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutOrderSummaryModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      { "kind": "Property", "name": "activeStepIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "getTabIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepIndex",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDisabled",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutProgressComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileBottomComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      { "kind": "Property", "name": "activeStepIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutProgressMobileBottomComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileBottomModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutProgressMobileBottomModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileTopComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "activeStepIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutProgressMobileTopComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  checkoutStepService: CheckoutStepService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n  checkoutStepService: CheckoutStepService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/components"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutProgressMobileTopComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutProgressMobileTopComponent'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnInit",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutProgressMobileTopComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Method 'ngOnInit' was removed from Class 'CheckoutProgressMobileTopComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileTopModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutProgressMobileTopModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutProgressModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutReplenishmentFormService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Property",
        "name": "defaultFormData",
        "type": "ScheduleReplenishmentForm"
      },
      {
        "kind": "Method",
        "name": "getScheduleReplenishmentFormData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ScheduleReplenishmentForm>"
      },
      {
        "kind": "Method",
        "name": "resetScheduleReplenishmentFormData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setScheduleReplenishmentFormData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formData",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_components!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/scheduled-replenishment/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutReplenishmentFormService",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/scheduled-replenishment/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor()\n",
        "currentStateDoc": "\nconstructor(\n  eventService: EventService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [],
          "newParams": [
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/checkout_scheduled-replenishment_components!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/checkout_scheduled-replenishment_components!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutStepService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/checkout_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutConfig",
            "type": "CheckoutConfig",
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfig:class",
            "shortType": "CheckoutConfig",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      { "kind": "Property", "name": "allSteps", "type": "CheckoutStep[]" },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutConfig",
        "type": "CheckoutConfig"
      },
      {
        "kind": "Method",
        "name": "disableEnableStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentStepType",
            "type": "CheckoutStepType",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getBackBntText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentStepType",
            "type": "CheckoutStepType",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "CheckoutStep | undefined"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStepRoute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentStepType",
            "type": "CheckoutStepType",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getCurrentStepIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "number | null"
      },
      {
        "kind": "Method",
        "name": "getFirstCheckoutStepRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getNextCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "getPreviousCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "goToStepWithIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepIndex",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSteps",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "BehaviorSubject<CheckoutStep[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutStepService",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "disableEnableStep",
        "changeDesc": true,
        "previousStateDoc": "\ndisableEnableStep(\n  currentStepType: CheckoutStepType\n  disabled: boolean\n): void\n",
        "currentStateDoc": "\ndisableEnableStep(\n  currentStepType: CheckoutStepType | string\n  disabled: boolean\n): void\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutStepsSetGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade",
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "checkoutDetailsService",
            "type": "CheckoutDetailsService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
            "shortType": "CheckoutDetailsService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutCostCenterService",
            "type": "CheckoutCostCenterFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          },
          {
            "name": "_",
            "type": "RouterStateSnapshot",
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutCostCenterService",
        "type": "CheckoutCostCenterFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDetailsService",
        "type": "CheckoutDetailsService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "isDeliveryModeSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isPaymentDetailsSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isPaymentTypeSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isShippingAddressAndCostCenterSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep"
          },
          {
            "name": "isAccountPayment",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isStepSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "isAccountPayment",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutStepsSetGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  paymentTypeService: PaymentTypeFacade\n  checkoutStepService: CheckoutStepService\n  checkoutDetailsService: CheckoutDetailsService\n  routingConfigService: RoutingConfigService\n  checkoutCostCenterService: CheckoutCostCenterFacade\n  router: Router\n)\n",
        "currentStateDoc": "\nconstructor(\n  checkoutStepService: CheckoutStepService\n  routingConfigService: RoutingConfigService\n  checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade\n  checkoutPaymentFacade: CheckoutPaymentFacade\n  checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade\n  router: Router\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "paymentTypeService",
              "type": "PaymentTypeFacade",
              "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
              "shortType": "PaymentTypeFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "checkoutDetailsService",
              "type": "CheckoutDetailsService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
              "shortType": "CheckoutDetailsService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutCostCenterService",
              "type": "CheckoutCostCenterFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
              "shortType": "CheckoutCostCenterFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "newParams": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "canonicalReference": "@spartacus/checkout_base_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "removedParams": [
            {
              "name": "paymentTypeService",
              "type": "PaymentTypeFacade",
              "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
              "shortType": "PaymentTypeFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "checkoutDetailsService",
              "type": "CheckoutDetailsService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
              "shortType": "CheckoutDetailsService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "checkoutCostCenterService",
              "type": "CheckoutCostCenterFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
              "shortType": "CheckoutCostCenterFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "addedParams": [
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "canActivate",
        "changeDesc": true,
        "previousStateDoc": "\ncanActivate(\n  route: ActivatedRouteSnapshot\n  _: RouterStateSnapshot\n): Observable<boolean | UrlTree>\n",
        "currentStateDoc": "\ncanActivate(\n  route: ActivatedRouteSnapshot\n): Observable<boolean | UrlTree>\n"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutCostCenterService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutCostCenterService",
          "type": "CheckoutCostCenterFacade"
        },
        "apiElementName": "CheckoutStepsSetGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutCostCenterService' was removed from Class 'CheckoutStepsSetGuard'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutDetailsService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutDetailsService",
          "type": "CheckoutDetailsService"
        },
        "apiElementName": "CheckoutStepsSetGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutDetailsService' was removed from Class 'CheckoutStepsSetGuard'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isPaymentTypeSet",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isPaymentTypeSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
              "shortType": "CheckoutStep"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        "apiElementName": "CheckoutStepsSetGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Method 'isPaymentTypeSet' was removed from Class 'CheckoutStepsSetGuard'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isShippingAddressAndCostCenterSet",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isShippingAddressAndCostCenterSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
              "shortType": "CheckoutStep"
            },
            {
              "name": "isAccountPayment",
              "type": "boolean",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        "apiElementName": "CheckoutStepsSetGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Method 'isShippingAddressAndCostCenterSet' was removed from Class 'CheckoutStepsSetGuard'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "isStepSet",
        "changeDesc": true,
        "previousStateDoc": "\nisStepSet(\n  step: CheckoutStep\n  isAccountPayment: boolean\n): Observable<boolean | UrlTree>\n",
        "currentStateDoc": "\nisStepSet(\n  step: CheckoutStep\n): Observable<boolean | UrlTree>\n"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "paymentTypeService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "paymentTypeService",
          "type": "PaymentTypeFacade"
        },
        "apiElementName": "CheckoutStepsSetGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'paymentTypeService' was removed from Class 'CheckoutStepsSetGuard'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "DeliveryModeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Method",
        "name": "changeMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "continueButtonPressed",
        "type": "boolean"
      },
      { "kind": "Property", "name": "deliveryModeInvalid", "type": "boolean" },
      { "kind": "Property", "name": "deliveryModeSub", "type": "Subscription" },
      { "kind": "Property", "name": "mode", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedDeliveryMode$",
        "type": "Observable<DeliveryMode>"
      },
      {
        "kind": "Property",
        "name": "supportedDeliveryModes$",
        "type": "Observable<DeliveryMode[]>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class DeliveryModeComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "DeliveryModeComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "DeliveryModeModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class DeliveryModeModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "DeliveryModeModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ExpressCheckoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutDetailsService",
            "type": "CheckoutDetailsService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
            "shortType": "CheckoutDetailsService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "clearCheckoutService",
            "type": "ClearCheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!ClearCheckoutFacade:class",
            "shortType": "ClearCheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDetailsService",
        "type": "CheckoutDetailsService"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "clearCheckoutService",
        "type": "ClearCheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "setDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentMethod",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setShippingAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "trySetDefaultCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ExpressCheckoutService",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userAddressService: UserAddressService\n  userPaymentService: UserPaymentService\n  checkoutDeliveryService: CheckoutDeliveryFacade\n  checkoutPaymentService: CheckoutPaymentFacade\n  checkoutDetailsService: CheckoutDetailsService\n  checkoutConfigService: CheckoutConfigService\n  clearCheckoutService: ClearCheckoutFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  userAddressService: UserAddressService\n  userPaymentService: UserPaymentService\n  checkoutDeliveryAddressFacade: CheckoutDeliveryAddressFacade\n  checkoutPaymentFacade: CheckoutPaymentFacade\n  checkoutConfigService: CheckoutConfigService\n  checkoutDeliveryModesFacade: CheckoutDeliveryModesFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userPaymentService",
              "type": "UserPaymentService",
              "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
              "shortType": "UserPaymentService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryService",
              "type": "CheckoutDeliveryFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
              "shortType": "CheckoutDeliveryFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "checkoutPaymentService",
              "type": "CheckoutPaymentFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "checkoutDetailsService",
              "type": "CheckoutDetailsService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
              "shortType": "CheckoutDetailsService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "clearCheckoutService",
              "type": "ClearCheckoutFacade",
              "canonicalReference": "@spartacus/checkout_components!ClearCheckoutFacade:class",
              "shortType": "ClearCheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "newParams": [
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userPaymentService",
              "type": "UserPaymentService",
              "canonicalReference": "@spartacus/checkout_base_components!UserPaymentService:class",
              "shortType": "UserPaymentService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "checkoutDeliveryService",
              "type": "CheckoutDeliveryFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
              "shortType": "CheckoutDeliveryFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "checkoutPaymentService",
              "type": "CheckoutPaymentFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "checkoutDetailsService",
              "type": "CheckoutDetailsService",
              "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
              "shortType": "CheckoutDetailsService",
              "importPath": "@spartacus/checkout/components"
            },
            {
              "name": "clearCheckoutService",
              "type": "ClearCheckoutFacade",
              "canonicalReference": "@spartacus/checkout_components!ClearCheckoutFacade:class",
              "shortType": "ClearCheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "addedParams": [
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutDeliveryService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutDeliveryService",
          "type": "CheckoutDeliveryFacade"
        },
        "apiElementName": "ExpressCheckoutService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutDeliveryService' was removed from Class 'ExpressCheckoutService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutDetailsService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutDetailsService",
          "type": "CheckoutDetailsService"
        },
        "apiElementName": "ExpressCheckoutService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutDetailsService' was removed from Class 'ExpressCheckoutService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutPaymentService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutPaymentService",
          "type": "CheckoutPaymentFacade"
        },
        "apiElementName": "ExpressCheckoutService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutPaymentService' was removed from Class 'ExpressCheckoutService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "clearCheckoutService",
          "type": "ClearCheckoutFacade"
        },
        "apiElementName": "ExpressCheckoutService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'clearCheckoutService' was removed from Class 'ExpressCheckoutService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "setShippingAddress",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "setShippingAddress",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "ExpressCheckoutService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Method 'setShippingAddress' was removed from Class 'ExpressCheckoutService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "GuestRegisterFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userRegisterFacade",
            "type": "UserRegisterFacade",
            "canonicalReference": "@spartacus/checkout_components!UserRegisterFacade:class",
            "shortType": "UserRegisterFacade"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/checkout_components!RoutingService:class",
            "shortType": "RoutingService"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/checkout_components!AuthService:class",
            "shortType": "AuthService"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "email", "type": "string" },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      { "kind": "Property", "name": "guestRegisterForm", "type": "FormGroup" },
      { "kind": "Property", "name": "guid", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "userRegisterFacade",
        "type": "UserRegisterFacade"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class GuestRegisterFormComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "GuestRegisterFormComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "NotCheckoutAuthGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/checkout_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "NotCheckoutAuthGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/checkout/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  authService: AuthService\n  activeCartService: ActiveCartService\n  semanticPathService: SemanticPathService\n  router: Router\n)\n",
        "currentStateDoc": "\nconstructor(\n  authService: AuthService\n  activeCartFacade: ActiveCartFacade\n  semanticPathService: SemanticPathService\n  router: Router\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/checkout_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "newParams": [
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/checkout_base_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_base_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "NotCheckoutAuthGuard",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/components",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'NotCheckoutAuthGuard'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderConfirmationGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  checkoutService: CheckoutFacade\n  router: Router\n  semanticPathService: SemanticPathService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderFacade: OrderFacade\n  router: Router\n  semanticPathService: SemanticPathService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "checkoutService",
              "type": "CheckoutFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
              "shortType": "CheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "orderFacade",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/order_components!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "checkoutService",
              "type": "CheckoutFacade",
              "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
              "shortType": "CheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderFacade",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OrderConfirmationItemsComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderConfirmationItemsComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class OrderConfirmationModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderConfirmationModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" }
    ],
    "isDeleted": true,
    "deletedComment": "Class OrderConfirmationOverviewComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderConfirmationOverviewComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationThankYouMessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      { "kind": "Property", "name": "isGuestCustomer", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isReplenishmentOrderType$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      { "kind": "Property", "name": "orderGuid", "type": "string" }
    ],
    "isDeleted": true,
    "deletedComment": "Class OrderConfirmationThankYouMessageComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderConfirmationThankYouMessageComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" }
    ],
    "isDeleted": true,
    "deletedComment": "Class OrderConfirmationTotalsComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderConfirmationTotalsComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
            "shortType": "UserPaymentService"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "canonicalReference": "@spartacus/checkout_components!ModalService:class",
            "shortType": "ModalService"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "billingAddressForm", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "cardTypes$",
        "type": "Observable<CardType[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "closeForm", "type": "EventEmitter<any>" },
      {
        "kind": "Property",
        "name": "countries$",
        "type": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "countrySelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "country",
            "type": "Country",
            "canonicalReference": "@spartacus/checkout_components!Country:interface",
            "shortType": "Country"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "expMonthAndYear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "Card"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "goBack", "type": "EventEmitter<any>" },
      {
        "kind": "Method",
        "name": "handleAddressVerificationResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "canonicalReference": "@spartacus/checkout_components!AddressValidation:interface",
            "shortType": "AddressValidation"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "Observable<StateUtils.LoaderState<void>>"
      },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      { "kind": "Property", "name": "months", "type": "string[]" },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openSuggestedAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "canonicalReference": "@spartacus/checkout_components!AddressValidation:interface",
            "shortType": "AddressValidation"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "paymentForm", "type": "FormGroup" },
      { "kind": "Property", "name": "paymentMethodsCount", "type": "number" },
      {
        "kind": "Property",
        "name": "regions$",
        "type": "Observable<Region[]>"
      },
      {
        "kind": "Property",
        "name": "sameAsShippingAddress",
        "type": "boolean"
      },
      {
        "kind": "Property",
        "name": "selectedCountry$",
        "type": "BehaviorSubject<string>"
      },
      { "kind": "Property", "name": "setAsDefaultField", "type": "boolean" },
      {
        "kind": "Property",
        "name": "setPaymentDetails",
        "type": "EventEmitter<any>"
      },
      {
        "kind": "Property",
        "name": "shippingAddress$",
        "type": "Observable<Address>"
      },
      {
        "kind": "Property",
        "name": "showSameAsShippingAddressCheckbox$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "suggestedAddressModalRef",
        "type": "ModalRef | null"
      },
      {
        "kind": "Method",
        "name": "toggleDefaultPaymentMethod",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleSameAsShippingAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      },
      {
        "kind": "Method",
        "name": "verifyAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "years", "type": "number[]" }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentFormComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentFormComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentFormModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class PaymentFormModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentFormModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentMethodComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
            "shortType": "UserPaymentService"
          },
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/checkout_components!TranslationService:class",
            "shortType": "TranslationService"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Property",
        "name": "cards$",
        "type": "Observable<{\n        content: Card;\n        paymentMethod: PaymentDetails;\n    }[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "createCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          },
          {
            "name": "cardLabels",
            "type": "{\n        textDefaultPaymentMethod: string;\n        textExpires: string;\n        textUseThisPayment: string;\n        textSelected: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "selected",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ],
        "returnType": "Card"
      },
      { "kind": "Property", "name": "deliveryAddress", "type": "Address" },
      {
        "kind": "Property",
        "name": "existingPaymentMethods$",
        "type": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Method",
        "name": "getCardIcon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "hideNewPaymentForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isGuestCheckout", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "newPaymentFormManuallyOpened",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedMethod$",
        "type": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "selectPaymentMethod",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sendPaymentMethodFailGlobalMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "field",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ paymentDetails, billingAddress, }",
            "type": "{\n        paymentDetails: PaymentDetails;\n        billingAddress?: Address;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "shouldRedirect", "type": "boolean" },
      {
        "kind": "Method",
        "name": "showNewPaymentForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentMethodComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentMethodComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentMethodModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class PaymentMethodModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentMethodModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentTypeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade",
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cartPoNumber", "type": "string" },
      {
        "kind": "Property",
        "name": "cartPoNumber$",
        "type": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "changeType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "paymentTypes$",
        "type": "Observable<PaymentType[]>"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade"
      },
      { "kind": "Property", "name": "typeSelected", "type": "string" },
      {
        "kind": "Property",
        "name": "typeSelected$",
        "type": "Observable<string>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentTypeComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypeComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentTypeModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class PaymentTypeModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypeModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PlaceOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/checkout_components!RoutingService:class",
            "shortType": "RoutingService"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder"
          },
          {
            "name": "checkoutReplenishmentFormService",
            "type": "CheckoutReplenishmentFormService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutReplenishmentFormService:class",
            "shortType": "CheckoutReplenishmentFormService"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/checkout_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutReplenishmentFormService",
        "type": "CheckoutReplenishmentFormService"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      { "kind": "Property", "name": "checkoutSubmitForm", "type": "FormGroup" },
      { "kind": "Property", "name": "currentOrderType", "type": "ORDER_TYPE" },
      {
        "kind": "Property",
        "name": "daysOfWeekNotChecked$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "placedOrder",
        "type": "void | Observable<ComponentRef<any> | undefined>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "scheduleReplenishmentFormData",
        "type": "ScheduleReplenishmentForm"
      },
      {
        "kind": "Method",
        "name": "submitForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "termsAndConditionInvalid",
        "type": "Boolean"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ],
    "isDeleted": true,
    "deletedComment": "Class PlaceOrderComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PlaceOrderComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PlaceOrderModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class PlaceOrderModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PlaceOrderModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ReplenishmentOrderConfirmationModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class ReplenishmentOrderConfirmationModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReplenishmentOrderConfirmationModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ReviewSubmitComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/checkout_components!TranslationService:class",
            "shortType": "TranslationService"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService"
          },
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade",
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade"
          },
          {
            "name": "checkoutCostCenterService",
            "type": "CheckoutCostCenterFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade"
          },
          {
            "name": "userCostCenterService",
            "type": "UserCostCenterService",
            "canonicalReference": "@spartacus/checkout_components!UserCostCenterService:class",
            "shortType": "UserCostCenterService"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "checkoutCostCenterService",
        "type": "CheckoutCostCenterFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepType",
        "type": "typeof CheckoutStepType"
      },
      {
        "kind": "Property",
        "name": "costCenter$",
        "type": "Observable<CostCenter | undefined>"
      },
      {
        "kind": "Property",
        "name": "countryName$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "deliveryAddress$",
        "type": "Observable<Address>"
      },
      {
        "kind": "Property",
        "name": "deliveryMode$",
        "type": "Observable<DeliveryMode | null | undefined>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepType",
            "type": "CheckoutStepType",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getCostCenterCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenter",
            "type": "CostCenter",
            "canonicalReference": "@spartacus/checkout_components!CostCenter:interface",
            "shortType": "CostCenter"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode",
            "type": "DeliveryMode",
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentMethodCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentTypeCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentType",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPoNumberCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "poNumber",
            "type": "string | null",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getShippingAddressCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryAddress",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          },
          {
            "name": "countryName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "isAccountPayment$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "paymentDetails$",
        "type": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "paymentSteps",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "steps",
            "type": "CheckoutStep[]",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep"
          }
        ],
        "returnType": "CheckoutStep[]"
      },
      {
        "kind": "Property",
        "name": "paymentType$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade"
      },
      {
        "kind": "Property",
        "name": "poNumber$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "kind": "Method",
        "name": "shippingSteps",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "steps",
            "type": "CheckoutStep[]",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep"
          }
        ],
        "returnType": "CheckoutStep[]"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userCostCenterService",
        "type": "UserCostCenterService"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ReviewSubmitComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReviewSubmitComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ReviewSubmitModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class ReviewSubmitModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReviewSubmitModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade"
          },
          {
            "name": "checkoutReplenishmentFormService",
            "type": "CheckoutReplenishmentFormService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutReplenishmentFormService:class",
            "shortType": "CheckoutReplenishmentFormService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeDayOfTheMonth",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dayOfMonth",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeNumberOfDays",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nDays",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeNumberOfWeeks",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nWeeks",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeOrderType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderType",
            "type": "ORDER_TYPE",
            "canonicalReference": "@spartacus/checkout_components!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeRecurrencePeriodType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeRepeatDays",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "day",
            "type": "DaysOfWeek",
            "canonicalReference": "@spartacus/checkout_components!DaysOfWeek:enum",
            "shortType": "DaysOfWeek"
          },
          {
            "name": "isChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeReplenishmentStartDate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutReplenishmentFormService",
        "type": "CheckoutReplenishmentFormService"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "currentDate",
        "type": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentDaysOfWeek",
        "type": "DaysOfWeek[]"
      },
      { "kind": "Property", "name": "daysOfWeek", "type": "DaysOfWeek[]" },
      {
        "kind": "Method",
        "name": "hasDaysOfWeekChecked",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "day",
            "type": "DaysOfWeek",
            "canonicalReference": "@spartacus/checkout_components!DaysOfWeek:enum",
            "shortType": "DaysOfWeek"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isMonthly", "type": "Boolean" },
      { "kind": "Property", "name": "isWeekly", "type": "Boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "numberOfDays", "type": "string[]" },
      { "kind": "Property", "name": "numberOfWeeks", "type": "string[]" },
      { "kind": "Property", "name": "orderTypes", "type": "typeof ORDER_TYPE" },
      {
        "kind": "Property",
        "name": "recurrencePeriodType",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "scheduleReplenishmentFormData",
        "type": "ScheduleReplenishmentForm"
      },
      {
        "kind": "Property",
        "name": "selectedOrderType$",
        "type": "Observable<ORDER_TYPE>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ScheduleReplenishmentOrderComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ScheduleReplenishmentOrderComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class ScheduleReplenishmentOrderModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ScheduleReplenishmentOrderModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ShippingAddressComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/checkout_components!TranslationService:class",
            "shortType": "TranslationService"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService"
          },
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade | undefined",
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade"
          },
          {
            "name": "userCostCenterService",
            "type": "UserCostCenterService | undefined",
            "canonicalReference": "@spartacus/checkout_components!UserCostCenterService:class",
            "shortType": "UserCostCenterService"
          },
          {
            "name": "checkoutCostCenterService",
            "type": "CheckoutCostCenterFacade | undefined",
            "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "addressFormOpened", "type": "boolean" },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Property",
        "name": "cards$",
        "type": "Observable<CardWithAddress[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutCostCenterService",
        "type": "CheckoutCostCenterFacade | undefined"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      { "kind": "Property", "name": "doneAutoSelect", "type": "boolean" },
      { "kind": "Property", "name": "forceLoader", "type": "boolean" },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          },
          {
            "name": "selected",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "textDefaultShippingAddress",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "textShipToThisAddress",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "textSelected",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Card"
      },
      {
        "kind": "Method",
        "name": "getSupportedAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "hideNewAddressForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "goPrevious",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isAccountPayment", "type": "boolean" },
      { "kind": "Property", "name": "isGuestCheckout", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade | undefined"
      },
      {
        "kind": "Method",
        "name": "selectAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "selectDefaultAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addresses",
            "type": "Address[]",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          },
          {
            "name": "selected",
            "type": "Address | undefined",
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "selectedAddress", "type": "Address" },
      {
        "kind": "Property",
        "name": "selectedAddress$",
        "type": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "showNewAddressForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userCostCenterService",
        "type": "UserCostCenterService | undefined"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ShippingAddressComponent has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ShippingAddressComponent",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ShippingAddressModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class ShippingAddressModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ShippingAddressModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CARD_TYPE_NORMALIZER",
    "type": "InjectionToken<Converter<any, CardType>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CARD_TYPE_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "CardTypesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "{\n        [code: string]: CardType;\n    }"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Interface CardTypesState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Interface",
        "changeLabel": "deleted",
        "changeElementName": "CardTypesState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CHECKOUT_DETAILS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CHECKOUT_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CHECKOUT_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CHECKOUT_FEATURE",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CHECKOUT_FEATURE",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "ADD_DELIVERY_ADDRESS_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.ADD_DELIVERY_ADDRESS_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "ADD_DELIVERY_ADDRESS_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "ADD_DELIVERY_ADDRESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.ADD_DELIVERY_ADDRESS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "ADD_DELIVERY_ADDRESS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "ADD_DELIVERY_ADDRESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.ADD_DELIVERY_ADDRESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "ADD_DELIVERY_ADDRESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "AddDeliveryAddress",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.AddDeliveryAddress has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "AddDeliveryAddress",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "AddDeliveryAddressFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.AddDeliveryAddressFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "AddDeliveryAddressFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "AddDeliveryAddressSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.AddDeliveryAddressSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "AddDeliveryAddressSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "CardTypesAction",
    "namespace": "CheckoutActions",
    "members": [
      "LoadCardTypes",
      " | ",
      "LoadCardTypesFail",
      " | ",
      "LoadCardTypesSuccess"
    ],
    "isDeleted": true,
    "deletedComment": "TypeAlias CheckoutActions.CardTypesAction has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_DELETED",
        "changeType": "DELETED",
        "changeKind": "TypeAlias",
        "changeLabel": "deleted",
        "changeElementName": "CardTypesAction",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CHECKOUT_CLEAR_MISCS_DATA",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CHECKOUT_CLEAR_MISCS_DATA has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CHECKOUT_CLEAR_MISCS_DATA",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "CheckoutAction",
    "namespace": "CheckoutActions",
    "members": [
      "AddDeliveryAddress",
      " | ",
      "AddDeliveryAddressFail",
      " | ",
      "AddDeliveryAddressSuccess",
      " | ",
      "SetDeliveryAddress",
      " | ",
      "SetDeliveryAddressFail",
      " | ",
      "SetDeliveryAddressSuccess",
      " | ",
      "ResetSetDeliveryAddressProcess",
      " | ",
      "LoadSupportedDeliveryModes",
      " | ",
      "LoadSupportedDeliveryModesFail",
      " | ",
      "LoadSupportedDeliveryModesSuccess",
      " | ",
      "SetDeliveryMode",
      " | ",
      "SetDeliveryModeFail",
      " | ",
      "SetDeliveryModeSuccess",
      " | ",
      "ResetSetDeliveryModeProcess",
      " | ",
      "ClearSupportedDeliveryModes",
      " | ",
      "CreatePaymentDetails",
      " | ",
      "CreatePaymentDetailsFail",
      " | ",
      "CreatePaymentDetailsSuccess",
      " | ",
      "SetPaymentDetails",
      " | ",
      "SetPaymentDetailsFail",
      " | ",
      "SetPaymentDetailsSuccess",
      " | ",
      "ResetSetPaymentDetailsProcess",
      " | ",
      "PlaceOrder",
      " | ",
      "PlaceOrderFail",
      " | ",
      "PlaceOrderSuccess",
      " | ",
      "ClearCheckoutStep",
      " | ",
      "ClearCheckoutData",
      " | ",
      "ClearCheckoutDeliveryAddress",
      " | ",
      "ClearCheckoutDeliveryAddressFail",
      " | ",
      "ClearCheckoutDeliveryAddressSuccess",
      " | ",
      "ClearCheckoutDeliveryMode",
      " | ",
      "ClearCheckoutDeliveryModeFail",
      " | ",
      "ClearCheckoutDeliveryModeSuccess",
      " | ",
      "LoadCheckoutDetails",
      " | ",
      "LoadCheckoutDetailsFail",
      " | ",
      "LoadCheckoutDetailsSuccess",
      " | ",
      "CheckoutClearMiscsData",
      " | ",
      "SetCostCenter",
      " | ",
      "SetCostCenterFail",
      " | ",
      "SetCostCenterSuccess",
      " | ",
      "ResetSetCostCenterProcess"
    ],
    "isDeleted": true,
    "deletedComment": "TypeAlias CheckoutActions.CheckoutAction has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_DELETED",
        "changeType": "DELETED",
        "changeKind": "TypeAlias",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutAction",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutClearMiscsData",
    "namespace": "CheckoutActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.CheckoutClearMiscsData has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutClearMiscsData",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DATA",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DATA has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DATA",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_ADDRESS_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DELIVERY_ADDRESS_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DELIVERY_ADDRESS_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_ADDRESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DELIVERY_ADDRESS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DELIVERY_ADDRESS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_ADDRESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DELIVERY_ADDRESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DELIVERY_ADDRESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_MODE_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DELIVERY_MODE_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_MODE",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_DELIVERY_MODE",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_STEP",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_CHECKOUT_STEP has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_CHECKOUT_STEP",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_PLACE_ORDER",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_PLACE_ORDER has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_PLACE_ORDER",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_SCHEDULE_REPLENISHMENT_ORDER",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_SCHEDULE_REPLENISHMENT_ORDER has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_SCHEDULE_REPLENISHMENT_ORDER",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_SUPPORTED_DELIVERY_MODES",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CLEAR_SUPPORTED_DELIVERY_MODES has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CLEAR_SUPPORTED_DELIVERY_MODES",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutData",
    "namespace": "CheckoutActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutData has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutData",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryAddress",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutDeliveryAddress has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutDeliveryAddress",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryAddressFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutDeliveryAddressFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutDeliveryAddressFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryAddressSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutDeliveryAddressSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutDeliveryAddressSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryMode",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutDeliveryMode has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutDeliveryMode",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryModeFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutDeliveryModeFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutDeliveryModeFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryModeSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutDeliveryModeSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutDeliveryModeSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutStep",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearCheckoutStep has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutStep",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearPlaceOrder",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearPlaceOrder has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearPlaceOrder",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearScheduleReplenishmentOrderAction",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearScheduleReplenishmentOrderAction has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearScheduleReplenishmentOrderAction",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearSupportedDeliveryModes",
    "namespace": "CheckoutActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ClearSupportedDeliveryModes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearSupportedDeliveryModes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CREATE_PAYMENT_DETAILS_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CREATE_PAYMENT_DETAILS_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CREATE_PAYMENT_DETAILS_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CREATE_PAYMENT_DETAILS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CREATE_PAYMENT_DETAILS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CREATE_PAYMENT_DETAILS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CREATE_PAYMENT_DETAILS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.CREATE_PAYMENT_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "CREATE_PAYMENT_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CreatePaymentDetails",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.CreatePaymentDetails has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CreatePaymentDetails",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CreatePaymentDetailsFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.CreatePaymentDetailsFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CreatePaymentDetailsFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CreatePaymentDetailsSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentDetails" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.CreatePaymentDetailsSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CreatePaymentDetailsSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CARD_TYPES_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_CARD_TYPES_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_CARD_TYPES_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CARD_TYPES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_CARD_TYPES_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_CARD_TYPES_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CARD_TYPES",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_CARD_TYPES has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_CARD_TYPES",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CHECKOUT_DETAILS_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_CHECKOUT_DETAILS_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_CHECKOUT_DETAILS_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CHECKOUT_DETAILS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_CHECKOUT_DETAILS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_CHECKOUT_DETAILS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CHECKOUT_DETAILS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_CHECKOUT_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_CHECKOUT_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_PAYMENT_TYPES_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_PAYMENT_TYPES_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_PAYMENT_TYPES_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_PAYMENT_TYPES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_PAYMENT_TYPES_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_PAYMENT_TYPES_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_PAYMENT_TYPES",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_PAYMENT_TYPES has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_PAYMENT_TYPES",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_SUPPORTED_DELIVERY_MODES_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_SUPPORTED_DELIVERY_MODES_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_SUPPORTED_DELIVERY_MODES",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "LOAD_SUPPORTED_DELIVERY_MODES",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCardTypes",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadCardTypes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadCardTypes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCardTypesFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadCardTypesFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadCardTypesFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCardTypesSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CardType[]",
            "canonicalReference": "@spartacus/checkout_core!CardType:interface",
            "shortType": "CardType"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CardType[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadCardTypesSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadCardTypesSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCheckoutDetails",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadCheckoutDetails has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadCheckoutDetails",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCheckoutDetailsFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadCheckoutDetailsFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadCheckoutDetailsFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCheckoutDetailsSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CheckoutDetails",
            "canonicalReference": "@spartacus/checkout_core!CheckoutDetails:type",
            "shortType": "CheckoutDetails"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CheckoutDetails" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadCheckoutDetailsSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadCheckoutDetailsSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadPaymentTypes",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadPaymentTypes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadPaymentTypes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadPaymentTypesFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadPaymentTypesFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadPaymentTypesFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadPaymentTypesSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentType[]",
            "canonicalReference": "@spartacus/checkout_core!PaymentType:interface",
            "shortType": "PaymentType"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentType[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadPaymentTypesSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadPaymentTypesSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadSupportedDeliveryModes",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadSupportedDeliveryModes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadSupportedDeliveryModes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadSupportedDeliveryModesFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadSupportedDeliveryModesFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadSupportedDeliveryModesFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadSupportedDeliveryModesSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "DeliveryMode[]",
            "canonicalReference": "@spartacus/checkout_core!DeliveryMode:interface",
            "shortType": "DeliveryMode"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "DeliveryMode[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.LoadSupportedDeliveryModesSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "LoadSupportedDeliveryModesSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "OrderTypesActions",
    "namespace": "CheckoutActions",
    "members": ["SetOrderType"],
    "isDeleted": true,
    "deletedComment": "TypeAlias CheckoutActions.OrderTypesActions has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_DELETED",
        "changeType": "DELETED",
        "changeKind": "TypeAlias",
        "changeLabel": "deleted",
        "changeElementName": "OrderTypesActions",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PAYMENT_PROCESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.PAYMENT_PROCESS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "PAYMENT_PROCESS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentProcessSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.PaymentProcessSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentProcessSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "PaymentTypesAction",
    "namespace": "CheckoutActions",
    "members": [
      "LoadPaymentTypes",
      " | ",
      "LoadPaymentTypesFail",
      " | ",
      "LoadPaymentTypesSuccess",
      " | ",
      "ResetLoadPaymentTypesProcess",
      " | ",
      "SetPaymentType",
      " | ",
      "SetPaymentTypeFail",
      " | ",
      "SetPaymentTypeSuccess"
    ],
    "isDeleted": true,
    "deletedComment": "TypeAlias CheckoutActions.PaymentTypesAction has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_DELETED",
        "changeType": "DELETED",
        "changeKind": "TypeAlias",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypesAction",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACE_ORDER_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.PLACE_ORDER_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "PLACE_ORDER_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACE_ORDER_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.PLACE_ORDER_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "PLACE_ORDER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACE_ORDER",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.PLACE_ORDER has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "PLACE_ORDER",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PlaceOrder",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        termsChecked: boolean;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        termsChecked: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.PlaceOrder has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PlaceOrder",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PlaceOrderFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.PlaceOrderFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PlaceOrderFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PlaceOrderSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Order",
            "canonicalReference": "@spartacus/checkout_core!Order:interface",
            "shortType": "Order"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Order" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.PlaceOrderSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PlaceOrderSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "ReplenishmentOrderActions",
    "namespace": "CheckoutActions",
    "members": [
      "ScheduleReplenishmentOrder",
      " | ",
      "ScheduleReplenishmentOrderSuccess",
      " | ",
      "ScheduleReplenishmentOrderFail",
      " | ",
      "ClearScheduleReplenishmentOrderAction"
    ],
    "isDeleted": true,
    "deletedComment": "TypeAlias CheckoutActions.ReplenishmentOrderActions has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_DELETED",
        "changeType": "DELETED",
        "changeKind": "TypeAlias",
        "changeLabel": "deleted",
        "changeElementName": "ReplenishmentOrderActions",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_LOAD_PAYMENT_TYPES_PROCESS_ID",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.RESET_LOAD_PAYMENT_TYPES_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_LOAD_PAYMENT_TYPES_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_COST_CENTER_PROCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.RESET_SET_COST_CENTER_PROCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_SET_COST_CENTER_PROCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_DELIVERY_ADDRESS_PROCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.RESET_SET_DELIVERY_ADDRESS_PROCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_SET_DELIVERY_ADDRESS_PROCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_DELIVERY_MODE_PROCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.RESET_SET_DELIVERY_MODE_PROCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_SET_DELIVERY_MODE_PROCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_PAYMENT_DETAILS_PROCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.RESET_SET_PAYMENT_DETAILS_PROCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_SET_PAYMENT_DETAILS_PROCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SUPPORTED_SET_DELIVERY_MODES_PROCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.RESET_SUPPORTED_SET_DELIVERY_MODES_PROCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_SUPPORTED_SET_DELIVERY_MODES_PROCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetLoadPaymentTypesProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ResetLoadPaymentTypesProcess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ResetLoadPaymentTypesProcess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetLoadSupportedDeliveryModesProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ResetLoadSupportedDeliveryModesProcess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ResetLoadSupportedDeliveryModesProcess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetCostCenterProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ResetSetCostCenterProcess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ResetSetCostCenterProcess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetDeliveryAddressProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ResetSetDeliveryAddressProcess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ResetSetDeliveryAddressProcess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetDeliveryModeProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ResetSetDeliveryModeProcess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ResetSetDeliveryModeProcess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetPaymentDetailsProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ResetSetPaymentDetailsProcess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ResetSetPaymentDetailsProcess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SCHEDULE_REPLENISHMENT_ORDER_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SCHEDULE_REPLENISHMENT_ORDER_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SCHEDULE_REPLENISHMENT_ORDER_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SCHEDULE_REPLENISHMENT_ORDER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SCHEDULE_REPLENISHMENT_ORDER",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SCHEDULE_REPLENISHMENT_ORDER",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrder",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        scheduleReplenishmentForm: ScheduleReplenishmentForm;\n        termsChecked: boolean;\n        userId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        scheduleReplenishmentForm: ScheduleReplenishmentForm;\n        termsChecked: boolean;\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ScheduleReplenishmentOrder has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ScheduleReplenishmentOrder",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ScheduleReplenishmentOrderFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ScheduleReplenishmentOrderFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "canonicalReference": "@spartacus/checkout_core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.ScheduleReplenishmentOrderSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ScheduleReplenishmentOrderSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_COST_CENTER_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_COST_CENTER_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_COST_CENTER_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_COST_CENTER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_COST_CENTER has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_COST_CENTER",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_DELIVERY_ADDRESS_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_ADDRESS_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_DELIVERY_ADDRESS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_ADDRESS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_DELIVERY_ADDRESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_ADDRESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_DELIVERY_MODE_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_MODE_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_DELIVERY_MODE_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_MODE_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_DELIVERY_MODE has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_MODE",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_ORDER_TYPE",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_ORDER_TYPE has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_ORDER_TYPE",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_PAYMENT_DETAILS_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_DETAILS_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_PAYMENT_DETAILS_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_DETAILS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_PAYMENT_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_TYPE_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_PAYMENT_TYPE_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_TYPE_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_TYPE_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_PAYMENT_TYPE_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_TYPE_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_TYPE",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_PAYMENT_TYPE has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_TYPE",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODES_FAIL",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_SUPPORTED_DELIVERY_MODES_FAIL has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_SUPPORTED_DELIVERY_MODES_FAIL",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_SUPPORTED_DELIVERY_MODES_SUCCESS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_SUPPORTED_DELIVERY_MODES_SUCCESS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODES",
    "namespace": "CheckoutActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutActions.SET_SUPPORTED_DELIVERY_MODES has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_SUPPORTED_DELIVERY_MODES",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetCostCenter",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        costCenterId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        costCenterId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetCostCenter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetCostCenter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetCostCenterFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetCostCenterFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetCostCenterFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetCostCenterSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetCostCenterSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetCostCenterSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryAddress",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetDeliveryAddress has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetDeliveryAddress",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryAddressFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetDeliveryAddressFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetDeliveryAddressFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryAddressSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetDeliveryAddressSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetDeliveryAddressSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryMode",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        selectedModeId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        selectedModeId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetDeliveryMode has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetDeliveryMode",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryModeFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetDeliveryModeFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetDeliveryModeFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryModeSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetDeliveryModeSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetDeliveryModeSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetOrderType",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ORDER_TYPE",
            "canonicalReference": "@spartacus/checkout_core!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ORDER_TYPE" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetOrderType has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetOrderType",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentDetails",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetPaymentDetails has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetPaymentDetails",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentDetailsFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetPaymentDetailsFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetPaymentDetailsFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentDetailsSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentDetails" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetPaymentDetailsSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetPaymentDetailsSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentType",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        typeCode: string;\n        poNumber?: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        typeCode: string;\n        poNumber?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetPaymentType has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetPaymentType",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentTypeFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetPaymentTypeFail has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetPaymentTypeFail",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentTypeSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Cart",
            "canonicalReference": "@spartacus/checkout_core!Cart:interface",
            "shortType": "Cart"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Cart" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutActions.SetPaymentTypeSuccess has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetPaymentTypeSuccess",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<CheckoutDetails>"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutDeliveryAddress",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearCheckoutDeliveryAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "CheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearCheckoutDeliveryAddress' was removed from Class 'CheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutDeliveryMode",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearCheckoutDeliveryMode",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "CheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearCheckoutDeliveryMode' was removed from Class 'CheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadCheckoutDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadCheckoutDetails",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<CheckoutDetails>"
        },
        "apiElementName": "CheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadCheckoutDetails' was removed from Class 'CheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "placeOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "placeOrder",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "termsChecked",
              "type": "boolean",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Order>"
        },
        "apiElementName": "CheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'placeOrder' was removed from Class 'CheckoutAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutAdapter",
            "canonicalReference": "@spartacus/checkout_core!CheckoutAdapter:class",
            "shortType": "CheckoutAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CheckoutAdapter" },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<CheckoutDetails>"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutDeliveryAddress",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearCheckoutDeliveryAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "CheckoutConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearCheckoutDeliveryAddress' was removed from Class 'CheckoutConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutDeliveryMode",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearCheckoutDeliveryMode",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "CheckoutConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearCheckoutDeliveryMode' was removed from Class 'CheckoutConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadCheckoutDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadCheckoutDetails",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<CheckoutDetails>"
        },
        "apiElementName": "CheckoutConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadCheckoutDetails' was removed from Class 'CheckoutConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "placeOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "placeOrder",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "termsChecked",
              "type": "boolean",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Order>"
        },
        "apiElementName": "CheckoutConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'placeOrder' was removed from Class 'CheckoutConnector'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCoreModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutCoreModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCostCenterAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutCostCenterAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCostCenterConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutCostCenterAdapter",
            "canonicalReference": "@spartacus/checkout_core!CheckoutCostCenterAdapter:class",
            "shortType": "CheckoutCostCenterAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutCostCenterAdapter"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutCostCenterConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCostCenterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "getCostCenter",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutCostCenterService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  checkoutStore: Store<StateWithCheckout>\n  activeCartService: ActiveCartService\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n  userIdService: UserIdService\n  commandService: CommandService\n  checkoutCostCenterConnector: CheckoutCostCenterConnector\n  checkoutQueryFacade: CheckoutQueryFacade\n  eventService: EventService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "checkoutStore",
              "type": "Store<StateWithCheckout>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_b2b_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/checkout_b2b_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "commandService",
              "type": "CommandService",
              "canonicalReference": "@spartacus/checkout_b2b_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutCostCenterConnector",
              "type": "CheckoutCostCenterConnector",
              "canonicalReference": "@spartacus/checkout_b2b_core!CheckoutCostCenterConnector:class",
              "shortType": "CheckoutCostCenterConnector",
              "importPath": "@spartacus/checkout/b2b/core"
            },
            {
              "name": "checkoutQueryFacade",
              "type": "CheckoutQueryFacade",
              "canonicalReference": "@spartacus/checkout_b2b_core!CheckoutQueryFacade:class",
              "shortType": "CheckoutQueryFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/checkout_b2b_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "checkoutStore",
              "type": "Store<StateWithCheckout>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_b2b_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "commandService",
              "type": "CommandService",
              "canonicalReference": "@spartacus/checkout_b2b_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutCostCenterConnector",
              "type": "CheckoutCostCenterConnector",
              "canonicalReference": "@spartacus/checkout_b2b_core!CheckoutCostCenterConnector:class",
              "shortType": "CheckoutCostCenterConnector",
              "importPath": "@spartacus/checkout/b2b/core"
            },
            {
              "name": "checkoutQueryFacade",
              "type": "CheckoutQueryFacade",
              "canonicalReference": "@spartacus/checkout_b2b_core!CheckoutQueryFacade:class",
              "shortType": "CheckoutQueryFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/checkout_b2b_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutCostCenterService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutCostCenterService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutStore",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutStore",
          "type": "Store<StateWithCheckout>"
        },
        "apiElementName": "CheckoutCostCenterService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutStore' was removed from Class 'CheckoutCostCenterService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCostCenter",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getCostCenter",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<string | undefined>"
        },
        "apiElementName": "CheckoutCostCenterService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'getCostCenter' was removed from Class 'CheckoutCostCenterService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "setCostCenter",
        "changeDesc": true,
        "previousStateDoc": "\nsetCostCenter(\n  costCenterId: string\n): void\n",
        "currentStateDoc": "\nsetCostCenter(\n  costCenterId: string\n): Observable<Cart>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutDeliveryAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<DeliveryMode>"
      },
      {
        "kind": "Method",
        "name": "getSupportedModes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "setMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutDeliveryAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutDeliveryAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutDeliveryConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutDeliveryAdapter",
            "canonicalReference": "@spartacus/checkout_core!CheckoutDeliveryAdapter:class",
            "shortType": "CheckoutDeliveryAdapter"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutDeliveryAdapter"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<DeliveryMode>"
      },
      {
        "kind": "Method",
        "name": "getSupportedModes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "setMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutDeliveryConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutDeliveryConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutDeliveryService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "actionAllowed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAndSetAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getLoadSupportedDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode | undefined | null>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryModeCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetLoadSupportedDeliveryModesProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutDeliveryService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutDeliveryService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "CheckoutDetails",
    "members": [
      "{\n    deliveryAddress: ",
      "Address",
      ";\n    deliveryMode: ",
      "DeliveryMode",
      ";\n    paymentInfo: ",
      "PaymentDetails",
      ";\n}"
    ],
    "isDeleted": true,
    "deletedComment": "TypeAlias CheckoutDetails has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_DELETED",
        "changeType": "DELETED",
        "changeKind": "TypeAlias",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutDetails",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stateEventService",
            "type": "StateEventService",
            "canonicalReference": "@spartacus/checkout_core!StateEventService:class",
            "shortType": "StateEventService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "orderPlacedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "stateEventService",
        "type": "StateEventService"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutEventBuilder has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutEventBuilder",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutEventListener",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryFacade",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_core!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "clearCheckoutFacade",
            "type": "ClearCheckoutFacade",
            "canonicalReference": "@spartacus/checkout_core!ClearCheckoutFacade:class",
            "shortType": "ClearCheckoutFacade"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/checkout_core!EventService:class",
            "shortType": "EventService"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryFacade",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "clearCheckoutFacade",
        "type": "ClearCheckoutFacade"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSavedCartChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onUserAddressChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutEventListener has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutEventListener",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_checkoutEventBuilder",
            "type": "CheckoutEventBuilder",
            "canonicalReference": "@spartacus/checkout_core!CheckoutEventBuilder:class",
            "shortType": "CheckoutEventBuilder",
            "importPath": "@spartacus/checkout/core"
          },
          {
            "name": "_checkoutEventListener",
            "type": "CheckoutEventListener",
            "canonicalReference": "@spartacus/checkout_core!CheckoutEventListener:class",
            "shortType": "CheckoutEventListener",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutEventModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  _checkoutEventBuilder: CheckoutEventBuilder\n  _checkoutEventListener: CheckoutEventListener\n)\n",
        "currentStateDoc": "\nconstructor(\n  _checkoutDeliveryAddressEventListener: CheckoutDeliveryAddressEventListener\n  _checkoutDeliveryModeEventListener: CheckoutDeliveryModeEventListener\n  _checkoutPaymentEventListener: CheckoutPaymentEventListener\n  _checkoutLegacyStoreEventListener: CheckoutLegacyStoreEventListener\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "_checkoutEventBuilder",
              "type": "CheckoutEventBuilder",
              "canonicalReference": "@spartacus/checkout_core!CheckoutEventBuilder:class",
              "shortType": "CheckoutEventBuilder",
              "importPath": "@spartacus/checkout/core"
            },
            {
              "name": "_checkoutEventListener",
              "type": "CheckoutEventListener",
              "canonicalReference": "@spartacus/checkout_core!CheckoutEventListener:class",
              "shortType": "CheckoutEventListener",
              "importPath": "@spartacus/checkout/core"
            }
          ],
          "newParams": [
            {
              "name": "_checkoutDeliveryAddressEventListener",
              "type": "CheckoutDeliveryAddressEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutDeliveryAddressEventListener:class",
              "shortType": "CheckoutDeliveryAddressEventListener",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "_checkoutDeliveryModeEventListener",
              "type": "CheckoutDeliveryModeEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutDeliveryModeEventListener:class",
              "shortType": "CheckoutDeliveryModeEventListener",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "_checkoutPaymentEventListener",
              "type": "CheckoutPaymentEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutPaymentEventListener:class",
              "shortType": "CheckoutPaymentEventListener",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "_checkoutLegacyStoreEventListener",
              "type": "CheckoutLegacyStoreEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutLegacyStoreEventListener:class",
              "shortType": "CheckoutLegacyStoreEventListener",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "_checkoutEventBuilder",
              "type": "CheckoutEventBuilder",
              "canonicalReference": "@spartacus/checkout_core!CheckoutEventBuilder:class",
              "shortType": "CheckoutEventBuilder",
              "importPath": "@spartacus/checkout/core"
            },
            {
              "name": "_checkoutEventListener",
              "type": "CheckoutEventListener",
              "canonicalReference": "@spartacus/checkout_core!CheckoutEventListener:class",
              "shortType": "CheckoutEventListener",
              "importPath": "@spartacus/checkout/core"
            }
          ],
          "addedParams": [
            {
              "name": "_checkoutDeliveryAddressEventListener",
              "type": "CheckoutDeliveryAddressEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutDeliveryAddressEventListener:class",
              "shortType": "CheckoutDeliveryAddressEventListener",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "_checkoutDeliveryModeEventListener",
              "type": "CheckoutDeliveryModeEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutDeliveryModeEventListener:class",
              "shortType": "CheckoutDeliveryModeEventListener",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "_checkoutPaymentEventListener",
              "type": "CheckoutPaymentEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutPaymentEventListener:class",
              "shortType": "CheckoutPaymentEventListener",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "_checkoutLegacyStoreEventListener",
              "type": "CheckoutLegacyStoreEventListener",
              "canonicalReference": "@spartacus/checkout_base_root!CheckoutLegacyStoreEventListener:class",
              "shortType": "CheckoutLegacyStoreEventListener",
              "importPath": ""
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/checkout_core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "basePageMetaResolver",
            "type": "BasePageMetaResolver",
            "canonicalReference": "@spartacus/checkout_core!BasePageMetaResolver:class",
            "shortType": "BasePageMetaResolver",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "basePageMetaResolver",
        "type": "BasePageMetaResolver"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Method",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutPageMetaResolver",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  translation: TranslationService\n  activeCartService: ActiveCartService\n  basePageMetaResolver: BasePageMetaResolver\n)\n",
        "currentStateDoc": "\nconstructor(\n  translationService: TranslationService\n  activeCartFacade: ActiveCartFacade\n  basePageMetaResolver: BasePageMetaResolver\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/checkout_core!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "basePageMetaResolver",
              "type": "BasePageMetaResolver",
              "canonicalReference": "@spartacus/checkout_core!BasePageMetaResolver:class",
              "shortType": "BasePageMetaResolver",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "translationService",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/checkout_base_core!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "basePageMetaResolver",
              "type": "BasePageMetaResolver",
              "canonicalReference": "@spartacus/checkout_base_core!BasePageMetaResolver:class",
              "shortType": "BasePageMetaResolver",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/checkout_core!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "translationService",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/checkout_base_core!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutPageMetaResolver",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutPageMetaResolver'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cart$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cart$",
          "type": "Observable<Cart>"
        },
        "apiElementName": "CheckoutPageMetaResolver",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'cart$' was removed from Class 'CheckoutPageMetaResolver'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "resolveTitle",
        "changeDesc": true,
        "previousStateDoc": "\nresolveTitle(): Observable<string>\n",
        "currentStateDoc": "\nresolveTitle(): Observable<string | undefined>\n"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "translation",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        },
        "apiElementName": "CheckoutPageMetaResolver",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'translation' was removed from Class 'CheckoutPageMetaResolver'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPaymentAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "loadCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "set",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutPaymentAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "create",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "create",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "paymentDetails",
              "type": "PaymentDetails",
              "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
              "shortType": "PaymentDetails"
            }
          ],
          "returnType": "Observable<PaymentDetails>"
        },
        "apiElementName": "CheckoutPaymentAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'create' was removed from Class 'CheckoutPaymentAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadCardTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadCardTypes",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CardType[]>"
        },
        "apiElementName": "CheckoutPaymentAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadCardTypes' was removed from Class 'CheckoutPaymentAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "set",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "set",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "paymentDetailsId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "CheckoutPaymentAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'set' was removed from Class 'CheckoutPaymentAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPaymentConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutPaymentAdapter",
            "canonicalReference": "@spartacus/checkout_core!CheckoutPaymentAdapter:class",
            "shortType": "CheckoutPaymentAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutPaymentAdapter"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "set",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutPaymentConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "create",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "create",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "paymentDetails",
              "type": "PaymentDetails",
              "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
              "shortType": "PaymentDetails"
            }
          ],
          "returnType": "Observable<PaymentDetails>"
        },
        "apiElementName": "CheckoutPaymentConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'create' was removed from Class 'CheckoutPaymentConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "set",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "set",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "paymentDetailsId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "CheckoutPaymentConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'set' was removed from Class 'CheckoutPaymentConnector'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPaymentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "actionAllowed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "createPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "getPaymentDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getSetPaymentDetailsResultProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "paymentProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetSetPaymentDetailsProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutPaymentService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  checkoutStore: Store<StateWithCheckout>\n  processStateStore: Store<StateWithProcess<void>>\n  activeCartService: ActiveCartService\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n  userIdService: UserIdService\n  queryService: QueryService\n  commandService: CommandService\n  eventService: EventService\n  checkoutPaymentConnector: CheckoutPaymentConnector\n  checkoutQueryFacade: CheckoutQueryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "checkoutStore",
              "type": "Store<StateWithCheckout>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/checkout_base_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "queryService",
              "type": "QueryService",
              "canonicalReference": "@spartacus/checkout_base_core!QueryService:class",
              "shortType": "QueryService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "commandService",
              "type": "CommandService",
              "canonicalReference": "@spartacus/checkout_base_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/checkout_base_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutPaymentConnector",
              "type": "CheckoutPaymentConnector",
              "canonicalReference": "@spartacus/checkout_base_core!CheckoutPaymentConnector:class",
              "shortType": "CheckoutPaymentConnector",
              "importPath": "@spartacus/checkout/base/core"
            },
            {
              "name": "checkoutQueryFacade",
              "type": "CheckoutQueryFacade",
              "canonicalReference": "@spartacus/checkout_base_core!CheckoutQueryFacade:class",
              "shortType": "CheckoutQueryFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "checkoutStore",
              "type": "Store<StateWithCheckout>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/checkout_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "queryService",
              "type": "QueryService",
              "canonicalReference": "@spartacus/checkout_base_core!QueryService:class",
              "shortType": "QueryService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "commandService",
              "type": "CommandService",
              "canonicalReference": "@spartacus/checkout_base_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/checkout_base_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutPaymentConnector",
              "type": "CheckoutPaymentConnector",
              "canonicalReference": "@spartacus/checkout_base_core!CheckoutPaymentConnector:class",
              "shortType": "CheckoutPaymentConnector",
              "importPath": "@spartacus/checkout/base/core"
            },
            {
              "name": "checkoutQueryFacade",
              "type": "CheckoutQueryFacade",
              "canonicalReference": "@spartacus/checkout_base_core!CheckoutQueryFacade:class",
              "shortType": "CheckoutQueryFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "actionAllowed",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "actionAllowed",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'actionAllowed' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutStore",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutStore",
          "type": "Store<StateWithCheckout>"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutStore' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "createPaymentDetails",
        "changeDesc": true,
        "previousStateDoc": "\ncreatePaymentDetails(\n  paymentDetails: PaymentDetails\n): void\n",
        "currentStateDoc": "\ncreatePaymentDetails(\n  paymentDetails: PaymentDetails\n): Observable<unknown>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getPaymentDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getPaymentDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<PaymentDetails>"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'getPaymentDetails' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getSetPaymentDetailsResultProcess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getSetPaymentDetailsResultProcess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<StateUtils.LoaderState<void>>"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'getSetPaymentDetailsResultProcess' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadSupportedCardTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadSupportedCardTypes",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadSupportedCardTypes' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "paymentProcessSuccess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "paymentProcessSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'paymentProcessSuccess' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "processStateStore",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "processStateStore",
          "type": "Store<StateWithProcess<void>>"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Property 'processStateStore' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "resetSetPaymentDetailsProcess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "resetSetPaymentDetailsProcess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutPaymentService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - Method 'resetSetPaymentDetailsProcess' was removed from Class 'CheckoutPaymentService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "setPaymentDetails",
        "changeDesc": true,
        "previousStateDoc": "\nsetPaymentDetails(\n  paymentDetails: PaymentDetails\n): void\n",
        "currentStateDoc": "\nsetPaymentDetails(\n  paymentDetails: PaymentDetails\n): Observable<unknown>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_core!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutReplenishmentOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutReplenishmentOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutReplenishmentOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutReplenishmentOrderAdapter",
            "canonicalReference": "@spartacus/checkout_core!CheckoutReplenishmentOrderAdapter:class",
            "shortType": "CheckoutReplenishmentOrderAdapter"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutReplenishmentOrderAdapter"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_core!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutReplenishmentOrderConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutReplenishmentOrderConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getAllCardTypes",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CardType[]>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getAllCardTypes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getAllCardTypes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getAllPaymentTypes",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, PaymentType[]>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getAllPaymentTypes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getAllPaymentTypes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCardTypesEntites",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, {\n    [code: string]: CardType;\n}>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCardTypesEntites has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCardTypesEntites",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCardTypesState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CardTypesState>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCardTypesState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCardTypesState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutDetailsLoaded",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, boolean>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCheckoutDetailsLoaded has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCheckoutDetailsLoaded",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutLoading",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, boolean>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCheckoutLoading has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCheckoutLoading",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutOrderDetails",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, Order | ReplenishmentOrder>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCheckoutOrderDetails has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCheckoutOrderDetails",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CheckoutState>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCheckoutState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCheckoutState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutSteps",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CheckoutStepsState>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCheckoutSteps has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCheckoutSteps",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutStepsState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, StateUtils.LoaderState<CheckoutStepsState>>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getCheckoutStepsState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getCheckoutStepsState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCostCenter",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string | undefined>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/organization/administration/core",
    "newNamespace": "CostCenterSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCostCenter",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/organization/administration/core",
          "namespace": "CostCenterSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getCostCenter",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithCheckout, string | undefined>",
        "newType": "(costCenterCode: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<CostCenter>>",
        "previousStateDoc": "getCostCenter: MemoizedSelector<StateWithCheckout, string | undefined>",
        "currentStateDoc": "getCostCenter: (costCenterCode: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<CostCenter>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getDeliveryAddress",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, Address>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getDeliveryAddress has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getDeliveryAddress",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getDeliveryMode",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, {\n    supported: {\n        [code: string]: DeliveryMode;\n    };\n    selected: string;\n}>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getDeliveryMode has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getDeliveryMode",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getOrderTypesState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, OrderTypesState>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getOrderTypesState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getOrderTypesState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPaymentDetails",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, PaymentDetails>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getPaymentDetails has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getPaymentDetails",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPaymentTypesEntites",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, {\n    [code: string]: PaymentType;\n}>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getPaymentTypesEntites has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getPaymentTypesEntites",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPaymentTypesState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, PaymentTypesState>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getPaymentTypesState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getPaymentTypesState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPoNumer",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string | undefined>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getPoNumer has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getPoNumer",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedDeliveryMode",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, DeliveryMode | undefined | null>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getSelectedDeliveryMode has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getSelectedDeliveryMode",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedDeliveryModeCode",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getSelectedDeliveryModeCode has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getSelectedDeliveryModeCode",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedOrderType",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, ORDER_TYPE>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getSelectedOrderType has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getSelectedOrderType",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedOrderTypeSelector",
    "namespace": "CheckoutSelectors",
    "type": "(state: OrderTypesState) => ORDER_TYPE",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getSelectedOrderTypeSelector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getSelectedOrderTypeSelector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedPaymentType",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string | undefined>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getSelectedPaymentType has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getSelectedPaymentType",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSupportedDeliveryModes",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, DeliveryMode[]>",
    "isDeleted": true,
    "deletedComment": "Variable CheckoutSelectors.getSupportedDeliveryModes has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getSupportedDeliveryModes",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "actionAllowed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepNumber",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearPlaceOrderState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCheckoutDetailsLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCurrentOrderType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ORDER_TYPE>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order | ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_core!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setOrderType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderType",
            "type": "ORDER_TYPE",
            "canonicalReference": "@spartacus/checkout_core!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "CheckoutState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cardTypes",
        "type": "CardTypesState"
      },
      {
        "kind": "PropertySignature",
        "name": "orderType",
        "type": "OrderTypesState"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentTypes",
        "type": "PaymentTypesState"
      },
      {
        "kind": "PropertySignature",
        "name": "steps",
        "type": "StateUtils.LoaderState<CheckoutStepsState>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CheckoutState",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "cardTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "cardTypes",
          "type": "CardTypesState"
        },
        "apiElementName": "CheckoutState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'cardTypes' was removed from Interface 'CheckoutState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderType",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderType",
          "type": "OrderTypesState"
        },
        "apiElementName": "CheckoutState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderType' was removed from Interface 'CheckoutState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "paymentTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "paymentTypes",
          "type": "PaymentTypesState"
        },
        "apiElementName": "CheckoutState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'paymentTypes' was removed from Interface 'CheckoutState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "steps",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "steps",
          "type": "StateUtils.LoaderState<CheckoutStepsState>"
        },
        "apiElementName": "CheckoutState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'steps' was removed from Interface 'CheckoutState'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "CheckoutStepsState",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "{\n        supported: {\n            [code: string]: DeliveryMode;\n        };\n        selected: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "orderDetails",
        "type": "Order | ReplenishmentOrder"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentDetails",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "poNumber",
        "type": "{\n        po?: string;\n        costCenter?: string;\n    }"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Interface CheckoutStepsState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Interface",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutStepsState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryFacade",
            "type": "CheckoutDeliveryFacade",
            "canonicalReference": "@spartacus/checkout_core!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade"
          },
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "canonicalReference": "@spartacus/checkout_core!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryFacade",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentFacade",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Method",
        "name": "resetCheckoutProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ClearCheckoutService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "DELIVERY_MODE_NORMALIZER",
    "type": "InjectionToken<Converter<any, DeliveryMode>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "DELIVERY_MODE_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "GET_PAYMENT_TYPES_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable GET_PAYMENT_TYPES_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "GET_PAYMENT_TYPES_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "OrderTypesState",
    "members": [
      { "kind": "PropertySignature", "name": "selected", "type": "ORDER_TYPE" }
    ],
    "isDeleted": true,
    "deletedComment": "Interface OrderTypesState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Interface",
        "changeLabel": "deleted",
        "changeElementName": "OrderTypesState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PAYMENT_DETAILS_SERIALIZER",
    "type": "InjectionToken<Converter<PaymentDetails, any>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "PAYMENT_DETAILS_SERIALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PAYMENT_TYPE_NORMALIZER",
    "type": "InjectionToken<Converter<any, PaymentType>>",
    "isDeleted": true,
    "deletedComment": "Variable PAYMENT_TYPE_NORMALIZER has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "PAYMENT_TYPE_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentTypeAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "typeCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentTypeAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypeAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentTypeConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "PaymentTypeAdapter",
            "canonicalReference": "@spartacus/checkout_core!PaymentTypeAdapter:class",
            "shortType": "PaymentTypeAdapter"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "PaymentTypeAdapter" },
      {
        "kind": "Method",
        "name": "getPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "typeCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentTypeConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypeConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentTypeService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "getPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "getPoNumber",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "getSelectedPaymentType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "isAccountPayment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "typeCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentTypeService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypeService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "PaymentTypesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "{\n        [code: string]: PaymentType;\n    }"
      },
      { "kind": "PropertySignature", "name": "selected", "type": "string" }
    ],
    "isDeleted": true,
    "deletedComment": "Interface PaymentTypesState has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Interface",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypesState",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACED_ORDER_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable PLACED_ORDER_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "PLACED_ORDER_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_FORM_SERIALIZER",
    "type": "InjectionToken<Converter<ScheduleReplenishmentForm, any>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "REPLENISHMENT_ORDER_FORM_SERIALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable SET_COST_CENTER_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_COST_CENTER_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable SET_DELIVERY_ADDRESS_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_ADDRESS_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable SET_DELIVERY_MODE_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_DELIVERY_MODE_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable SET_PAYMENT_DETAILS_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_PAYMENT_DETAILS_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "StateWithCheckout",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "checkout",
        "type": "CheckoutState"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Interface StateWithCheckout has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Interface",
        "changeLabel": "deleted",
        "changeElementName": "StateWithCheckout",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Interface",
    "name": "CheckoutOccEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cardTypes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "clearDeliveryMode",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createDeliveryAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createPaymentDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryModes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "loadCheckoutDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentProviderSubInfo",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentTypes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "placeOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "removeDeliveryAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setCartCostCenter",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setCartPaymentDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setCartPaymentType",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setDeliveryAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setDeliveryMode",
        "type": "string | OccEndpoint"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CheckoutOccEndpoints",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/occ", "namespace": "" }
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "loadCheckoutDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "loadCheckoutDetails",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "CheckoutOccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'loadCheckoutDetails' was removed from Interface 'CheckoutOccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "paymentTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "paymentTypes",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "CheckoutOccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'paymentTypes' was removed from Interface 'CheckoutOccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "placeOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "placeOrder",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "CheckoutOccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'placeOrder' was removed from Interface 'CheckoutOccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "setCartCostCenter",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "setCartCostCenter",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "CheckoutOccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'setCartCostCenter' was removed from Interface 'CheckoutOccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "setCartPaymentType",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "setCartPaymentType",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "CheckoutOccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'setCartPaymentType' was removed from Interface 'CheckoutOccEndpoints'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "CheckoutOccModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutOccModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/occ", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getClearDeliveryModeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLoadCheckoutDetailsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "termsChecked",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRemoveDeliveryAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<CheckoutDetails>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCheckoutAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/occ", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutDeliveryAddress",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearCheckoutDeliveryAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'clearCheckoutDeliveryAddress' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearCheckoutDeliveryMode",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearCheckoutDeliveryMode",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'clearCheckoutDeliveryMode' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getClearDeliveryModeEndpoint",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getClearDeliveryModeEndpoint",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "string"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'getClearDeliveryModeEndpoint' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getLoadCheckoutDetailsEndpoint",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getLoadCheckoutDetailsEndpoint",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "string"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'getLoadCheckoutDetailsEndpoint' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getPlaceOrderEndpoint",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getPlaceOrderEndpoint",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "termsChecked",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "string"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'getPlaceOrderEndpoint' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getRemoveDeliveryAddressEndpoint",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getRemoveDeliveryAddressEndpoint",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "string"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'getRemoveDeliveryAddressEndpoint' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadCheckoutDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadCheckoutDetails",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<CheckoutDetails>"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'loadCheckoutDetails' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "placeOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "placeOrder",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "termsChecked",
              "type": "boolean",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Order>"
        },
        "apiElementName": "OccCheckoutAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'placeOrder' was removed from Class 'OccCheckoutAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutCostCenterAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getSetCartCostCenterEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCheckoutCostCenterAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/occ", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutDeliveryAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_occ!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getCreateDeliveryAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModesEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryModeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSupportedModes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<DeliveryMode[]>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "setMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OccCheckoutDeliveryAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OccCheckoutDeliveryAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutPaymentAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_occ!PaymentDetails:interface",
            "shortType": "PaymentDetails"
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "createDetailsWithParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parameters",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "createSubWithProvider",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "postUrl",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parameters",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getCardTypesEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCreatePaymentDetailsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPaymentProviderSubInfoEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getProviderSubInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getSetPaymentDetailsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "set",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCheckoutPaymentAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/occ", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "create",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "create",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "paymentDetails",
              "type": "PaymentDetails",
              "canonicalReference": "@spartacus/checkout_occ!PaymentDetails:interface",
              "shortType": "PaymentDetails"
            }
          ],
          "returnType": "Observable<PaymentDetails>"
        },
        "apiElementName": "OccCheckoutPaymentAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'create' was removed from Class 'OccCheckoutPaymentAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadCardTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadCardTypes",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CardType[]>"
        },
        "apiElementName": "OccCheckoutPaymentAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'loadCardTypes' was removed from Class 'OccCheckoutPaymentAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "set",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "set",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cartId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "paymentDetailsId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<any>"
        },
        "apiElementName": "OccCheckoutPaymentAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'set' was removed from Class 'OccCheckoutPaymentAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutPaymentTypeAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getPaymentTypesEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSetCartPaymentTypeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentType",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "purchaseOrderNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentType",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "purchaseOrderNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCheckoutPaymentTypeAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/occ", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadPaymentTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadPaymentTypes",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<PaymentType[]>"
        },
        "apiElementName": "OccCheckoutPaymentTypeAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/occ",
        "deletedComment": "// TODO:Spartacus - Method 'loadPaymentTypes' was removed from Class 'OccCheckoutPaymentTypeAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getScheduleReplenishmentOrderEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "termsChecked",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_occ!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OccCheckoutReplenishmentOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OccCheckoutReplenishmentOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccReplenishmentOrderFormSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_occ!Occ.ScheduleReplenishmentForm:interface",
            "shortType": "Occ.ScheduleReplenishmentForm"
          },
          {
            "name": "target",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_occ!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm"
          }
        ],
        "returnType": "ScheduleReplenishmentForm"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OccReplenishmentOrderFormSerializer has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OccReplenishmentOrderFormSerializer",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "CHECKOUT_CORE_FEATURE",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CHECKOUT_CORE_FEATURE",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "CHECKOUT_FEATURE",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CHECKOUT_FEATURE",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutConfig",
    "members": [
      {
        "kind": "Property",
        "name": "checkout",
        "type": "{\n        steps?: Array<CheckoutStep>;\n        express?: boolean;\n        defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n        guest?: boolean;\n    }"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutConfig",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutCostCenterFacade",
    "members": [
      {
        "kind": "Method",
        "name": "getCostCenter",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutCostCenterFacade",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/root", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCostCenter",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getCostCenter",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<string | undefined>"
        },
        "apiElementName": "CheckoutCostCenterFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Method 'getCostCenter' was removed from Class 'CheckoutCostCenterFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "setCostCenter",
        "changeDesc": true,
        "previousStateDoc": "\nsetCostCenter(\n  costCenterId: string\n): void\n",
        "currentStateDoc": "\nsetCostCenter(\n  costCenterId: string\n): Observable<Cart>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutDeliveryFacade",
    "members": [
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAndSetAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_root!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getLoadSupportedDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode | undefined | null>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryModeCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetLoadSupportedDeliveryModesProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/checkout_root!Address:interface",
            "shortType": "Address"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutDeliveryFacade has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutDeliveryFacade",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutFacade",
    "members": [
      {
        "kind": "Method",
        "name": "clearCheckoutData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepNumber",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearPlaceOrderState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCheckoutDetailsLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCurrentOrderType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ORDER_TYPE>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order | ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "canonicalReference": "@spartacus/checkout_root!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setOrderType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderType",
            "type": "ORDER_TYPE",
            "canonicalReference": "@spartacus/checkout_root!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE"
          }
        ],
        "returnType": "void"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CheckoutFacade has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CheckoutFacade",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutPaymentFacade",
    "members": [
      {
        "kind": "Method",
        "name": "createPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_root!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "getPaymentDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getSetPaymentDetailsResultProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "paymentProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetPaymentDetailsProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/checkout_root!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutPaymentFacade",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "createPaymentDetails",
        "changeDesc": true,
        "previousStateDoc": "\ncreatePaymentDetails(\n  paymentDetails: PaymentDetails\n): void\n",
        "currentStateDoc": "\ncreatePaymentDetails(\n  paymentDetails: PaymentDetails\n): Observable<unknown>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getPaymentDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getPaymentDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<PaymentDetails>"
        },
        "apiElementName": "CheckoutPaymentFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Method 'getPaymentDetails' was removed from Class 'CheckoutPaymentFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getSetPaymentDetailsResultProcess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getSetPaymentDetailsResultProcess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<StateUtils.LoaderState<void>>"
        },
        "apiElementName": "CheckoutPaymentFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Method 'getSetPaymentDetailsResultProcess' was removed from Class 'CheckoutPaymentFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadSupportedCardTypes",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadSupportedCardTypes",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutPaymentFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Method 'loadSupportedCardTypes' was removed from Class 'CheckoutPaymentFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "paymentProcessSuccess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "paymentProcessSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutPaymentFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Method 'paymentProcessSuccess' was removed from Class 'CheckoutPaymentFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "resetSetPaymentDetailsProcess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "resetSetPaymentDetailsProcess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CheckoutPaymentFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Method 'resetSetPaymentDetailsProcess' was removed from Class 'CheckoutPaymentFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "setPaymentDetails",
        "changeDesc": true,
        "previousStateDoc": "\nsetPaymentDetails(\n  paymentDetails: PaymentDetails\n): void\n",
        "currentStateDoc": "\nsetPaymentDetails(\n  paymentDetails: PaymentDetails\n): Observable<unknown>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "checkoutPaymentSteps",
    "type": "CheckoutStepType[]",
    "isDeleted": true,
    "deletedComment": "Variable checkoutPaymentSteps has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "checkoutPaymentSteps",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutRootModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutRootModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "checkoutShippingSteps",
    "type": "CheckoutStepType[]",
    "isDeleted": true,
    "deletedComment": "Variable checkoutShippingSteps has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "checkoutShippingSteps",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Interface",
    "name": "CheckoutStep",
    "members": [
      { "kind": "PropertySignature", "name": "disabled", "type": "boolean" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "routeName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "Array<CheckoutStepType>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CheckoutStep",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Enum",
    "name": "CheckoutStepType",
    "members": [
      "DELIVERY_MODE",
      "PAYMENT_DETAILS",
      "PAYMENT_TYPE",
      "REVIEW_ORDER",
      "SHIPPING_ADDRESS"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "CheckoutStepType",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      },
      {
        "change": "ENUM_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Enum",
        "changeLabel": "changed",
        "changeElementName": "CheckoutStepType",
        "changeDesc": true,
        "previousStateDoc": "DELIVERY_MODE,\nPAYMENT_DETAILS,\nPAYMENT_TYPE,\nREVIEW_ORDER,\nSHIPPING_ADDRESS",
        "currentStateDoc": "DELIVERY_ADDRESS,\nDELIVERY_MODE,\nPAYMENT_DETAILS,\nREVIEW_ORDER",
        "new": [
          "DELIVERY_ADDRESS",
          "DELIVERY_MODE",
          "PAYMENT_DETAILS",
          "REVIEW_ORDER"
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "ClearCheckoutFacade",
    "members": [
      {
        "kind": "Method",
        "name": "resetCheckoutProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ClearCheckoutFacade has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ClearCheckoutFacade",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Function",
    "name": "defaultCheckoutComponentsConfig",
    "parameters": [],
    "returnType": "{\n    featureModules: {\n        checkout: {\n            cmsComponents: string[];\n        };\n        checkoutCore: string;\n    };\n}",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_MOVED",
        "changeType": "MOVED",
        "changeKind": "Function",
        "changeLabel": "moved",
        "changeElementName": "defaultCheckoutComponentsConfig",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/root", "namespace": "" }
      },
      {
        "change": "FUNCTION_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Function",
        "changeLabel": "changed",
        "changeElementName": "defaultCheckoutComponentsConfig",
        "changeDesc": true,
        "previousStateDoc": "\ndefaultCheckoutComponentsConfig(): {\n    featureModules: {\n        checkout: {\n            cmsComponents: string[];\n        };\n        checkoutCore: string;\n    };\n}\n",
        "currentStateDoc": "\ndefaultCheckoutComponentsConfig(): CmsConfig\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Enum",
    "name": "DeliveryModePreferences",
    "members": ["FREE", "LEAST_EXPENSIVE", "MOST_EXPENSIVE"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "DeliveryModePreferences",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "OrderConfirmationOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/checkout_root!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderConfirmationOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  checkoutService: CheckoutFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderFacade: OrderFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "checkoutService",
              "type": "CheckoutFacade",
              "canonicalReference": "@spartacus/checkout_root!CheckoutFacade:class",
              "shortType": "CheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "newParams": [
            {
              "name": "orderFacade",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "checkoutService",
              "type": "CheckoutFacade",
              "canonicalReference": "@spartacus/checkout_root!CheckoutFacade:class",
              "shortType": "CheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderFacade",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutService",
          "type": "CheckoutFacade"
        },
        "apiElementName": "OrderConfirmationOrderEntriesContext",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutService' was removed from Class 'OrderConfirmationOrderEntriesContext'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "OrderPlacedEvent",
    "members": [
      { "kind": "Property", "name": "code", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderPlacedEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "code",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "code",
          "type": "string"
        },
        "apiElementName": "OrderPlacedEvent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/root",
        "deletedComment": "// TODO:Spartacus - Property 'code' was removed from Class 'OrderPlacedEvent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "PaymentTypeFacade",
    "members": [
      {
        "kind": "Method",
        "name": "getPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "getPoNumber",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "getSelectedPaymentType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "isAccountPayment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "typeCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class PaymentTypeFacade has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "PaymentTypeFacade",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout",
    "kind": "Class",
    "name": "CheckoutModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/base",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CheckoutModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/base", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ActiveCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "activeCart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "activeCartId$",
        "type": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "email",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartEntries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntriesGuestMerge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartEntries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "cartSelector$",
        "type": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getActiveCartId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getAssignedUser",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "getLastEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "getLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "guestCartMerge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initActiveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isCartCreating",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartState",
            "type": "ProcessesLoaderState<Cart>",
            "canonicalReference": "@spartacus/core!ProcessesLoaderState:interface",
            "shortType": "ProcessesLoaderState",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "str",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGuestCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isJustLoggedIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "previousUserId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrMerge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "previousUserId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reloadActiveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requireLoadedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customCartSelector$",
            "type": "Observable<ProcessesLoaderState<Cart>>",
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "requireLoadedCartForGuestMerge",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "updateEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryNumber",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ActiveCartService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithMultiCart>\n  multiCartService: MultiCartService\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  multiCartFacade: MultiCartFacade\n  userIdService: UserIdService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "multiCartFacade",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_base_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "multiCartFacade",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartSelector$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartSelector$",
          "type": "Observable<ProcessesLoaderState<Cart>>"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'cartSelector$' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getEntry",
        "changeDesc": true,
        "previousStateDoc": "\ngetEntry(\n  productCode: string\n): Observable<OrderEntry>\n",
        "currentStateDoc": "\ngetEntry(\n  productCode: string\n): Observable<OrderEntry | undefined>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getLastEntry",
        "changeDesc": true,
        "previousStateDoc": "\ngetLastEntry(\n  productCode: string\n): Observable<OrderEntry>\n",
        "currentStateDoc": "\ngetLastEntry(\n  productCode: string\n): Observable<OrderEntry | undefined>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "isCartCreating",
        "changeDesc": true,
        "previousStateDoc": "\nisCartCreating(\n  cartState: ProcessesLoaderState<Cart>\n  cartId: string\n): boolean\n",
        "currentStateDoc": "\nisCartCreating(\n  cartState: StateUtils.ProcessesLoaderState<Cart | undefined>\n  cartId: string\n): boolean | undefined\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isEmail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isEmail",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "str",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "boolean"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isEmail' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isEmpty",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isEmpty",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cart",
              "type": "Cart",
              "canonicalReference": "@spartacus/core!Cart:interface",
              "shortType": "Cart"
            }
          ],
          "returnType": "boolean"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isEmpty' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "isGuestCart",
        "changeDesc": true,
        "previousStateDoc": "\nisGuestCart(\n  cart: Cart\n): boolean\n",
        "currentStateDoc": "\nisGuestCart(\n  cart: Cart\n): Observable<boolean>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isJustLoggedIn",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isJustLoggedIn",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "previousUserId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "boolean"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isJustLoggedIn' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "multiCartService",
          "type": "MultiCartService"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'multiCartService' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "requireLoadedCart",
        "changeDesc": true,
        "previousStateDoc": "\nrequireLoadedCart(\n  customCartSelector$: Observable<ProcessesLoaderState<Cart>>\n): Observable<ProcessesLoaderState<Cart>>\n",
        "currentStateDoc": "\nrequireLoadedCart(\n  forGuestMerge: boolean\n): Observable<Cart>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "requireLoadedCartForGuestMerge",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "requireLoadedCartForGuestMerge",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<ProcessesLoaderState<Cart>>"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'requireLoadedCartForGuestMerge' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "store",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "store",
          "type": "Store<StateWithMultiCart>"
        },
        "apiElementName": "ActiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'store' was removed from Class 'ActiveCartService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_VOUCHER_PROCESS_ID",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ADD_VOUCHER_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddUserAddressEvent",
    "members": [
      { "kind": "Property", "name": "address", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userId",
          "type": "string"
        },
        "apiElementName": "AddUserAddressEvent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'userId' was removed from Class 'AddUserAddressEvent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthHttpHeaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AuthStorageService",
            "canonicalReference": "@spartacus/core!AuthStorageService:class",
            "shortType": "AuthStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "oAuthLibWrapperService",
            "type": "OAuthLibWrapperService",
            "canonicalReference": "@spartacus/core!OAuthLibWrapperService:class",
            "shortType": "OAuthLibWrapperService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "canonicalReference": "@spartacus/core!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "alterRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "token",
            "type": "AuthToken",
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AuthStorageService"
      },
      {
        "kind": "Method",
        "name": "createAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "AuthToken",
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        Authorization: string;\n    } | {}"
      },
      {
        "kind": "Method",
        "name": "createNewRequestWithNewToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "token",
            "type": "AuthToken",
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Method",
        "name": "getAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "getStableToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Method",
        "name": "getValidToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "requestToken",
            "type": "AuthToken",
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleExpiredAccessToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          },
          {
            "name": "initialToken",
            "type": "AuthToken",
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<HttpEvent<AuthToken>>"
      },
      {
        "kind": "Method",
        "name": "handleExpiredRefreshToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleExpiredToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Method",
        "name": "isOccUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "oAuthLibWrapperService",
        "type": "OAuthLibWrapperService"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      { "kind": "Property", "name": "refreshInProgress", "type": "boolean" },
      {
        "kind": "Property",
        "name": "refreshToken$",
        "type": "Observable<[AuthToken, boolean, boolean]>"
      },
      {
        "kind": "Property",
        "name": "refreshTokenTrigger$",
        "type": "Subject<AuthToken>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "shouldAddAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "shouldCatchError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "stopProgress$",
        "type": "Observable<[AuthToken, AuthToken]>"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "token$",
        "type": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Property",
        "name": "tokenToRetryRequest$",
        "type": "Observable<AuthToken>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "handleExpiredToken",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "handleExpiredToken",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<AuthToken | undefined>"
        },
        "apiElementName": "AuthHttpHeaderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'handleExpiredToken' was removed from Class 'AuthHttpHeaderService'.",
        "migrationComment": "Use 'getValidToken' instead."
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "refreshInProgress",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "refreshInProgress",
          "type": "boolean"
        },
        "apiElementName": "AuthHttpHeaderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'refreshInProgress' was removed from Class 'AuthHttpHeaderService'.",
        "migrationComment": "Use 'refreshInProgress$' Observable instead."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "B2BPaymentTypeEnum",
    "members": ["ACCOUNT_PAYMENT", "CARD_PAYMENT"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/checkout/b2b/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "B2BPaymentTypeEnum",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/checkout/b2b/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BadRequestHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "ErrorModel[]"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleBadCartRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleBadLoginResponse",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleBadPassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleGuestDuplicateEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleValidationError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleVoucherOperationError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "handleBadCartRequest",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "handleBadCartRequest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "_request",
              "type": "HttpRequest<any>",
              "canonicalReference": "@angular/common/http!HttpRequest:class",
              "shortType": "HttpRequest"
            },
            {
              "name": "response",
              "type": "HttpErrorResponse",
              "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
              "shortType": "HttpErrorResponse"
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "BadRequestHandler",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'handleBadCartRequest' was removed from Class 'BadRequestHandler'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "handleVoucherOperationError",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "handleVoucherOperationError",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "_request",
              "type": "HttpRequest<any>",
              "canonicalReference": "@angular/common/http!HttpRequest:class",
              "shortType": "HttpRequest"
            },
            {
              "name": "response",
              "type": "HttpErrorResponse",
              "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
              "shortType": "HttpErrorResponse"
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "BadRequestHandler",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'handleVoucherOperationError' was removed from Class 'BadRequestHandler'.",
        "migrationComment": "Please use new methods in BadVoucherRequestHandler."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_PROCESS_ID",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_PROCESS_ID",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_REPLENISHMENT_ORDER_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_RETURN_PROCESS_ID",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_RETURN_PROCESS_ID",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CancellationRequestEntryInputList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cancellationRequestEntryInputs",
        "type": "CancelOrReturnRequestEntryInput[]"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CancellationRequestEntryInputList",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CancelOrReturnRequestEntryInput",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntryNumber",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CancelOrReturnRequestEntryInput",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Carrier",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "Carrier",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_MODIFICATION_NORMALIZER",
    "type": "InjectionToken<Converter<any, CartModification>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_MODIFICATION_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_NORMALIZER",
    "type": "InjectionToken<Converter<any, Cart>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_VALIDATION_NORMALIZER",
    "type": "InjectionToken<Converter<any, CartModificationList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_VALIDATION_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_VOUCHER_NORMALIZER",
    "type": "InjectionToken<Converter<any, Voucher>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_VOUCHER_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Cart",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "expirationTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentType",
        "type": "PaymentType"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "savedBy", "type": "Principal" },
      { "kind": "PropertySignature", "name": "saveTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalUnitCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "Cart",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_EMAIL_TO_CART_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ADD_EMAIL_TO_CART_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_EMAIL_TO_CART_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ADD_EMAIL_TO_CART_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_EMAIL_TO_CART",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ADD_EMAIL_TO_CART",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddEmailToCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddEmailToCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddEmailToCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n        email: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n        email: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddEmailToCartFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddEmailToCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddEmailToCartSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_ENTRY_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_ADD_ENTRY_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_ENTRY_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_ADD_ENTRY_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_ENTRY",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_ADD_ENTRY",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_VOUCHER_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_ADD_VOUCHER_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_VOUCHER_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_ADD_VOUCHER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_VOUCHER",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_ADD_VOUCHER",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_PROCESSES_DECREMENT",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_PROCESSES_DECREMENT",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_PROCESSES_INCREMENT",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_PROCESSES_INCREMENT",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_ENTRY_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_REMOVE_ENTRY_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_ENTRY_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_REMOVE_ENTRY_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_ENTRY",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_REMOVE_ENTRY",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_VOUCHER_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_REMOVE_VOUCHER_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_VOUCHER_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_REMOVE_VOUCHER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_VOUCHER",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_REMOVE_VOUCHER",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_RESET_ADD_VOUCHER",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_RESET_ADD_VOUCHER",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_UPDATE_ENTRY_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_UPDATE_ENTRY_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_UPDATE_ENTRY_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_UPDATE_ENTRY_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_UPDATE_ENTRY",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CART_UPDATE_ENTRY",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CartAction",
    "namespace": "CartActions",
    "members": [
      "CreateCart",
      " | ",
      "CreateCartFail",
      " | ",
      "CreateCartSuccess",
      " | ",
      "LoadCart",
      " | ",
      "LoadCartFail",
      " | ",
      "LoadCartSuccess",
      " | ",
      "LoadCartsSuccess",
      " | ",
      "MergeCart",
      " | ",
      "MergeCartSuccess",
      " | ",
      "ResetCartDetails",
      " | ",
      "AddEmailToCart",
      " | ",
      "AddEmailToCartFail",
      " | ",
      "AddEmailToCartSuccess",
      " | ",
      "DeleteCart",
      " | ",
      "DeleteCartSuccess",
      " | ",
      "DeleteCartFail",
      " | ",
      "RemoveCart"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "CartAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddEntry",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddEntryFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddEntrySuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddVoucher",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddVoucher",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddVoucherFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n        error: any;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddVoucherFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddVoucherSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddVoucherSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CartEntryAction",
    "namespace": "CartActions",
    "members": [
      "CartAddEntry",
      " | ",
      "CartAddEntrySuccess",
      " | ",
      "CartAddEntryFail",
      " | ",
      "CartRemoveEntry",
      " | ",
      "CartRemoveEntrySuccess",
      " | ",
      "CartRemoveEntryFail",
      " | ",
      "CartUpdateEntry",
      " | ",
      "CartUpdateEntrySuccess",
      " | ",
      "CartUpdateEntryFail"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "CartEntryAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartProcessesDecrement",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartProcessesDecrement",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartProcessesIncrement",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartProcessesIncrement",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveEntry",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveEntryFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveEntrySuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveVoucher",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveVoucher",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveVoucherFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        voucherId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveVoucherFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveVoucherSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveVoucherSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartResetAddVoucher",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartResetAddVoucher",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartUpdateEntry",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartUpdateEntryFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartUpdateEntrySuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CartVoucherAction",
    "namespace": "CartActions",
    "members": [
      "CartAddVoucher",
      " | ",
      "CartAddVoucherFail",
      " | ",
      "CartAddVoucherSuccess",
      " | ",
      "CartResetAddVoucher",
      " | ",
      "CartRemoveVoucher",
      " | ",
      "CartRemoveVoucherFail",
      " | ",
      "CartRemoveVoucherSuccess"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "CartVoucherAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_CART_STATE",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_CART_STATE",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearCartState",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearCartState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_CART_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_CART_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_CART_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_CART_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_CART",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_CART",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_WISH_LIST_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_WISH_LIST_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_WISH_LIST_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_WISH_LIST_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_WISH_LIST",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_WISH_LIST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CreateCartPayload",
            "canonicalReference": "@spartacus/core!~CreateCartPayload:interface",
            "shortType": "CreateCartPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CreateCartPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CreateCartFailPayload",
            "canonicalReference": "@spartacus/core!~CreateCartFailPayload:interface",
            "shortType": "CreateCartFailPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CreateCartFailPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateCartFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CreateCartSuccessPayload",
            "canonicalReference": "@spartacus/core!~CreateCartSuccessPayload:interface",
            "shortType": "CreateCartSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CreateCartSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateCartSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateWishList",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateWishList",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "skipSchematics": "true",
        "previousStateDoc": "\nconstructor(\n  payload: {\n        userId: string;\n        name: string;\n        description?: string;\n    }\n)\n",
        "currentStateDoc": "\nconstructor(\n  payload: {\n        userId: string;\n        name?: string;\n        description?: string;\n    }\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "newParams": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        name?: string;\n        description?: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "removedParams": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "addedParams": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        name?: string;\n        description?: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeDesc": true,
        "oldType": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }",
        "newType": "{\n        userId: string;\n        name?: string;\n        description?: string;\n    }",
        "previousStateDoc": "payload: {\n        userId: string;\n        name: string;\n        description?: string;\n    }",
        "currentStateDoc": "payload: {\n        userId: string;\n        name?: string;\n        description?: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateWishListFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        error?: any;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        error?: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateWishListFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateWishListSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cart: Cart;\n        userId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cart: Cart;\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateWishListSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "skipSchematics": "true",
        "previousStateDoc": "\nconstructor(\n  payload: {\n        cart: Cart;\n        userId: string;\n    }\n)\n",
        "currentStateDoc": "\nconstructor(\n  payload: {\n        cart: Cart;\n        cartId: string;\n    }\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "payload",
              "type": "{\n        cart: Cart;\n        userId: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "newParams": [
            {
              "name": "payload",
              "type": "{\n        cart: Cart;\n        cartId: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "removedParams": [
            {
              "name": "payload",
              "type": "{\n        cart: Cart;\n        userId: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "addedParams": [
            {
              "name": "payload",
              "type": "{\n        cart: Cart;\n        cartId: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeDesc": true,
        "oldType": "{\n        cart: Cart;\n        userId: string;\n    }",
        "newType": "{\n        cart: Cart;\n        cartId: string;\n    }",
        "previousStateDoc": "payload: {\n        cart: Cart;\n        userId: string;\n    }",
        "currentStateDoc": "payload: {\n        cart: Cart;\n        cartId: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_CART_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "DELETE_CART_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_CART_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "DELETE_CART_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_CART",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "DELETE_CART",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "DeleteCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "DeleteCartFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "DeleteCartSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CART_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CART_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CART_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CART_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CART",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CART",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CARTS_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CARTS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_WISH_LIST_FAIL",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_WISH_LIST_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_WISH_LIST_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_WISH_LIST_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_WISH_LIST",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_WISH_LIST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadCartPayload",
            "canonicalReference": "@spartacus/core!~LoadCartPayload:interface",
            "shortType": "LoadCartPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "LoadCartPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadCartFailPayload",
            "canonicalReference": "@spartacus/core!~LoadCartFailPayload:interface",
            "shortType": "LoadCartFailPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "LoadCartFailPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadCartFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCartsSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Cart[]",
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Cart[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadCartsSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadCartSuccessPayload",
            "canonicalReference": "@spartacus/core!~LoadCartSuccessPayload:interface",
            "shortType": "LoadCartSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "LoadCartSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadCartSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadWishList",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadWishListPayload",
            "canonicalReference": "@spartacus/core!~LoadWishListPayload:interface",
            "shortType": "LoadWishListPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "LoadWishListPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadWishList",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadWishListFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadWishListFailPayload",
            "canonicalReference": "@spartacus/core!~LoadWishListFailPayload:interface",
            "shortType": "LoadWishListFailPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "LoadWishListFailPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadWishListFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadWishListSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadWishListSuccessPayload",
            "canonicalReference": "@spartacus/core!~LoadWishListSuccessPayload:interface",
            "shortType": "LoadWishListSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "LoadWishListSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadWishListSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "skipSchematics": "true",
        "previousStateDoc": "\nconstructor(\n  payload: LoadWishListSuccessPayload\n)\n",
        "currentStateDoc": "\nconstructor(\n  payload: {\n        cart: Cart;\n        cartId: string;\n    }\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "payload",
              "type": "LoadWishListSuccessPayload",
              "canonicalReference": "@spartacus/core!~LoadWishListSuccessPayload:interface",
              "shortType": "LoadWishListSuccessPayload",
              "importPath": ""
            }
          ],
          "newParams": [
            {
              "name": "payload",
              "type": "{\n        cart: Cart;\n        cartId: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "removedParams": [
            {
              "name": "payload",
              "type": "LoadWishListSuccessPayload",
              "canonicalReference": "@spartacus/core!~LoadWishListSuccessPayload:interface",
              "shortType": "LoadWishListSuccessPayload",
              "importPath": ""
            }
          ],
          "addedParams": [
            {
              "name": "payload",
              "type": "{\n        cart: Cart;\n        cartId: string;\n    }",
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeDesc": true,
        "oldType": "LoadWishListSuccessPayload",
        "newType": "{\n        cart: Cart;\n        cartId: string;\n    }",
        "previousStateDoc": "payload: LoadWishListSuccessPayload",
        "currentStateDoc": "payload: {\n        cart: Cart;\n        cartId: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MERGE_CART_SUCCESS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "MERGE_CART_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MERGE_CART",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "MERGE_CART",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MergeCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "MergeCartPayload",
            "canonicalReference": "@spartacus/core!~MergeCartPayload:interface",
            "shortType": "MergeCartPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "MergeCartPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "MergeCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MergeCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "MergeCartSuccessPayload",
            "canonicalReference": "@spartacus/core!~MergeCartSuccessPayload:interface",
            "shortType": "MergeCartSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "MergeCartSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "MergeCartSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "MultiCartActions",
    "namespace": "CartActions",
    "members": [
      "SetTempCart",
      " | ",
      "CartProcessesIncrement",
      " | ",
      "CartProcessesDecrement",
      " | ",
      "SetActiveCartId",
      " | ",
      "ClearCartState"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "MultiCartActions",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      },
      {
        "change": "TYPEALIAS_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "TypeAlias",
        "changeLabel": "changed",
        "changeElementName": "MultiCartActions",
        "changeDesc": true,
        "previousStateDoc": "SetTempCart,\n | ,\nCartProcessesIncrement,\n | ,\nCartProcessesDecrement,\n | ,\nSetActiveCartId,\n | ,\nClearCartState",
        "currentStateDoc": "CartProcessesIncrement,\n | ,\nCartProcessesDecrement,\n | ,\nSetActiveCartId,\n | ,\nClearCartState,\n | ,\nSetCartTypeIndex,\n | ,\nSetCartData",
        "new": [
          "CartProcessesIncrement",
          " | ",
          "CartProcessesDecrement",
          " | ",
          "SetActiveCartId",
          " | ",
          "ClearCartState",
          " | ",
          "SetCartTypeIndex",
          " | ",
          "SetCartData"
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_CART",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "REMOVE_CART",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "RemoveCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_CART_DETAILS",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "RESET_CART_DETAILS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_WISH_LIST_DETAILS",
    "namespace": "CartActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CartActions.RESET_WISH_LIST_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "RESET_WISH_LIST_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetCartDetails",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ResetCartDetails",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_ACTIVE_CART_ID",
    "namespace": "CartActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "SET_ACTIVE_CART_ID",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_TEMP_CART",
    "namespace": "CartActions",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable CartActions.SET_TEMP_CART has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "SET_TEMP_CART",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetActiveCartId",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "CartActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "SetActiveCartId",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "CartActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetTempCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cart: Cart;\n        tempCartId: string;\n    }",
            "canonicalReference": "",
            "shortType": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cart: Cart;\n        tempCartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isDeleted": true,
    "deletedComment": "Class CartActions.SetTempCart has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SetTempCart",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "WishListActions",
    "namespace": "CartActions",
    "members": [
      "CreateWishList",
      " | ",
      "CreateWishListSuccess",
      " | ",
      "CreateWishListFail",
      " | ",
      "LoadWishList",
      " | ",
      "LoadWishListSuccess",
      " | ",
      "LoadWishListFail"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "WishListActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "WishListActions",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": "WishListActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldCartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "toMergeCartGuid",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "load",
        "changeDesc": true,
        "previousStateDoc": "\nload(\n  userId: string\n  cartId: string\n): Observable<Cart>\n",
        "currentStateDoc": "\nload(\n  userId: string\n  cartId: string\n): Observable<Cart | undefined>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntryEvent",
    "members": [
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddEntryEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntryFailEvent",
    "members": [
      { "kind": "Property", "name": "error", "type": "unknown" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddEntryFailEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntrySuccessEvent",
    "members": [
      { "kind": "Property", "name": "deliveryModeChanged", "type": "boolean" },
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "quantityAdded", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartAddEntrySuccessEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cart",
        "type": "{\n        selectiveCart?: {\n            enabled?: boolean;\n        };\n        validation?: {\n            enabled?: boolean;\n        };\n    }"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartConfig",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "CartConfig",
            "canonicalReference": "@spartacus/core!CartConfig:class",
            "shortType": "CartConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "CartConfig" },
      {
        "kind": "Method",
        "name": "isCartValidationEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSelectiveCartEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartConfigService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartAdapter",
            "canonicalReference": "@spartacus/core!CartAdapter:class",
            "shortType": "CartAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CartAdapter" },
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldCartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "toMergeCartGuid",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "load",
        "changeDesc": true,
        "previousStateDoc": "\nload(\n  userId: string\n  cartId: string\n): Observable<Cart>\n",
        "currentStateDoc": "\nload(\n  userId: string\n  cartId: string\n): Observable<Cart | undefined>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEntryAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "qty",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pickupStore",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartEntryAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEntryConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartEntryAdapter",
            "canonicalReference": "@spartacus/core!CartEntryAdapter:class",
            "shortType": "CartEntryAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CartEntryAdapter" },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "qty",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pickupStore",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartEntryConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEvent",
    "members": [
      { "kind": "Property", "name": "cartCode", "type": "string" },
      { "kind": "Property", "name": "cartId", "type": "string" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "event",
            "type": "EventService",
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "event", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionType",
            "type": "string | string[]",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{\n        type: string;\n        payload?: any;\n    }>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerAddEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerMapped",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "canonicalReference": "@spartacus/core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      },
      {
        "kind": "Method",
        "name": "registerRemoveEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerUpdateEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartEventBuilder",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  event: EventService\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  event: EventService\n  activeCartService: ActiveCartFacade\n  stateEventService: StateEventService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "event",
              "type": "EventService",
              "canonicalReference": "@spartacus/core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "event",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_base_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "stateEventService",
              "type": "StateEventService",
              "canonicalReference": "@spartacus/cart_base_core!StateEventService:class",
              "shortType": "StateEventService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "stateEventService",
              "type": "StateEventService",
              "canonicalReference": "@spartacus/cart_base_core!StateEventService:class",
              "shortType": "StateEventService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_CartEventBuilder",
            "type": "CartEventBuilder",
            "canonicalReference": "@spartacus/core!CartEventBuilder:class",
            "shortType": "CartEventBuilder",
            "importPath": "@spartacus/core"
          }
        ]
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartEventModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartModification",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryModeChanged",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "entry", "type": "OrderEntry" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "quantityAdded",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "statusCode", "type": "string" },
      { "kind": "PropertySignature", "name": "statusMessage", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CartModification",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartModificationList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartModifications",
        "type": "CartModification[]"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CartModificationList",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<CartModule>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CartModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CartModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartOccModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class CartOccModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CartOccModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartPersistenceModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<CartPersistenceModule>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartPersistenceModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "forRoot",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "forRoot",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "ModuleWithProviders<CartPersistenceModule>"
        },
        "apiElementName": "CartPersistenceModule",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'forRoot' was removed from Class 'CartPersistenceModule'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntryFailEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveEntryFailEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntrySuccessEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartRemoveEntrySuccessEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntryFailEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartUpdateEntryFailEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntrySuccessEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartUpdateEntrySuccessEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartValidationAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "validate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModificationList>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartValidationConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartValidationAdapter",
            "canonicalReference": "@spartacus/core!CartValidationAdapter:class",
            "shortType": "CartValidationAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CartValidationAdapter"
      },
      {
        "kind": "Method",
        "name": "validate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModificationList>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartValidationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartValidationConnector",
            "type": "CartValidationConnector",
            "canonicalReference": "@spartacus/core!CartValidationConnector:class",
            "shortType": "CartValidationConnector",
            "importPath": "@spartacus/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "canonicalReference": "@spartacus/core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "cartValidationConnector",
        "type": "CartValidationConnector"
      },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Method",
        "name": "validateCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CartModificationList>"
      },
      {
        "kind": "Property",
        "name": "validateCartCommand",
        "type": "Command<void, CartModificationList>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cartValidationConnector: CartValidationConnector\n  command: CommandService\n  userIdService: UserIdService\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  cartValidationConnector: CartValidationConnector\n  command: CommandService\n  userIdService: UserIdService\n  activeCartFacade: ActiveCartFacade\n  cartValidationStateService: CartValidationStateService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cartValidationConnector",
              "type": "CartValidationConnector",
              "canonicalReference": "@spartacus/core!CartValidationConnector:class",
              "shortType": "CartValidationConnector",
              "importPath": "@spartacus/core"
            },
            {
              "name": "command",
              "type": "CommandService",
              "canonicalReference": "@spartacus/core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "cartValidationConnector",
              "type": "CartValidationConnector",
              "canonicalReference": "@spartacus/cart_base_core!CartValidationConnector:class",
              "shortType": "CartValidationConnector",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "command",
              "type": "CommandService",
              "canonicalReference": "@spartacus/cart_base_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_base_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cartValidationStateService",
              "type": "CartValidationStateService",
              "canonicalReference": "@spartacus/cart_base_core!CartValidationStateService:class",
              "shortType": "CartValidationStateService",
              "importPath": "@spartacus/cart/base/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cartValidationStateService",
              "type": "CartValidationStateService",
              "canonicalReference": "@spartacus/cart_base_core!CartValidationStateService:class",
              "shortType": "CartValidationStateService",
              "importPath": "@spartacus/cart/base/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CartValidationService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CartValidationService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "CartValidationStatusCode",
    "members": [
      "LOW_STOCK",
      "NO_STOCK",
      "PRICING_ERROR",
      "REVIEW_CONFIGURATION",
      "UNRESOLVABLE_ISSUES"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "CartValidationStatusCode",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartVoucherAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartVoucherAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartVoucherConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartVoucherAdapter",
            "canonicalReference": "@spartacus/core!CartVoucherAdapter:class",
            "shortType": "CartVoucherAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CartVoucherAdapter" },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartVoucherConnector",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartVoucherService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<fromProcessStore.StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addVoucher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAddVoucherResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAddVoucherResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAddVoucherResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "removeVoucher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetAddVoucherProcessingState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<fromProcessStore.StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartVoucherService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<fromProcessStore.StateWithProcess<void>>\n  activeCartService: ActiveCartService\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  store: Store<StateWithProcess<void>>\n  activeCartFacade: ActiveCartFacade\n  userIdService: UserIdService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<fromProcessStore.StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "store",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_base_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "store",
              "type": "Store<fromProcessStore.StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/core!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "store",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "CartVoucherService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'CartVoucherService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "store",
        "changeDesc": true,
        "oldType": "Store<fromProcessStore.StateWithProcess<void>>",
        "newType": "Store<StateWithProcess<void>>",
        "previousStateDoc": "store: Store<fromProcessStore.StateWithProcess<void>>",
        "currentStateDoc": "store: Store<StateWithProcess<void>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "Command",
    "members": [
      {
        "kind": "Method",
        "name": "execute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "P",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<R>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "execute",
        "changeDesc": true,
        "previousStateDoc": "\nexecute(\n  params: P\n): Observable<R>\n",
        "currentStateDoc": "\nexecute(\n  parameters: PARAMS\n): Observable<RESULT>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CommandService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commandFactory",
            "type": "(command: P) => Observable<any>",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "{\n        strategy?: CommandStrategy;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Command<P, R>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "create",
        "changeDesc": true,
        "previousStateDoc": "\ncreate(\n  commandFactory: (command: P) => Observable<any>\n  options: {\n        strategy?: CommandStrategy;\n    }\n): Command<P, R>\n",
        "currentStateDoc": "\ncreate(\n  commandFactory: (command: PARAMS) => Observable<any>\n  options: {\n        strategy?: CommandStrategy;\n    }\n): Command<PARAMS, RESULT>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CONSIGNMENT_TRACKING_NORMALIZER",
    "type": "InjectionToken<Converter<any, ConsignmentTracking>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CONSIGNMENT_TRACKING_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Consignment",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "ConsignmentEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "shippingAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      { "kind": "PropertySignature", "name": "statusDate", "type": "Date" },
      { "kind": "PropertySignature", "name": "trackingID", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "Consignment",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentEntry",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntry",
        "type": "OrderEntry"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "shippedQuantity",
        "type": "number"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ConsignmentEntry",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentTracking",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "carrierDetails",
        "type": "Carrier"
      },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "targetArrivalDate",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "trackingEvents",
        "type": "ConsignmentTrackingEvent[]"
      },
      { "kind": "PropertySignature", "name": "trackingID", "type": "string" },
      { "kind": "PropertySignature", "name": "trackingUrl", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ConsignmentTracking",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentTrackingEvent",
    "members": [
      { "kind": "PropertySignature", "name": "detail", "type": "string" },
      { "kind": "PropertySignature", "name": "eventDate", "type": "string" },
      { "kind": "PropertySignature", "name": "location", "type": "string" },
      { "kind": "PropertySignature", "name": "referenceCode", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ConsignmentTrackingEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentTrackingState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "tracking",
        "type": "ConsignmentTracking"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ConsignmentTrackingState",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Converter",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "S",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "T",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHODSIGNATURE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "MethodSignature",
        "changeLabel": "changed",
        "changeElementName": "convert",
        "changeDesc": true,
        "previousStateDoc": "\nconvert(\n  source: S\n  target: T\n): T\n",
        "currentStateDoc": "\nconvert(\n  source: SOURCE\n  target: TARGET\n): TARGET\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "DaysOfWeek",
    "members": [
      "FRIDAY",
      "MONDAY",
      "SATURDAY",
      "SUNDAY",
      "THURSDAY",
      "TUESDAY",
      "WEDNESDAY"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "DaysOfWeek",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserAddressEvent",
    "members": [
      { "kind": "Property", "name": "addressId", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userId",
          "type": "string"
        },
        "apiElementName": "DeleteUserAddressEvent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'userId' was removed from Class 'DeleteUserAddressEvent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryMode",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "DeliveryMode",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryOrderEntryGroup",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "DeliveryOrderEntryGroup",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getCartIdByUserId",
    "parameters": [
      {
        "name": "cart",
        "type": "Cart",
        "canonicalReference": "@spartacus/core!Cart:interface",
        "shortType": "Cart",
        "importPath": "@spartacus/core"
      },
      {
        "name": "userId",
        "type": "string",
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_MOVED",
        "changeType": "MOVED",
        "changeKind": "Function",
        "changeLabel": "moved",
        "changeElementName": "getCartIdByUserId",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getWishlistName",
    "parameters": [
      {
        "name": "customerId",
        "type": "string",
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_MOVED",
        "changeType": "MOVED",
        "changeKind": "Function",
        "changeLabel": "moved",
        "changeElementName": "getWishlistName",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GlobalMessageConfig",
    "members": [
      {
        "kind": "Property",
        "name": "globalMessages",
        "type": "{\n        [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n    }"
      }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "globalMessages",
        "changeDesc": true,
        "oldType": "{\n        [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n    }",
        "newType": "{\n        [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ASSISTIVE]?: GlobalMessageTypeConfig;\n    }",
        "previousStateDoc": "globalMessages: {\n        [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n    }",
        "currentStateDoc": "globalMessages: {\n        [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ASSISTIVE]?: GlobalMessageTypeConfig;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "GlobalMessageType",
    "members": [
      "MSG_TYPE_CONFIRMATION",
      "MSG_TYPE_ERROR",
      "MSG_TYPE_INFO",
      "MSG_TYPE_WARNING"
    ],
    "breakingChanges": [
      {
        "change": "ENUM_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Enum",
        "changeLabel": "changed",
        "changeElementName": "GlobalMessageType",
        "changeDesc": true,
        "previousStateDoc": "MSG_TYPE_CONFIRMATION,\nMSG_TYPE_ERROR,\nMSG_TYPE_INFO,\nMSG_TYPE_WARNING",
        "currentStateDoc": "MSG_TYPE_ASSISTIVE,\nMSG_TYPE_CONFIRMATION,\nMSG_TYPE_ERROR,\nMSG_TYPE_INFO,\nMSG_TYPE_WARNING",
        "new": [
          "MSG_TYPE_ASSISTIVE",
          "MSG_TYPE_CONFIRMATION",
          "MSG_TYPE_ERROR",
          "MSG_TYPE_INFO",
          "MSG_TYPE_WARNING"
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isCartNotFoundError",
    "parameters": [
      {
        "name": "error",
        "type": "ErrorModel",
        "canonicalReference": "@spartacus/core!ErrorModel:interface",
        "shortType": "ErrorModel",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_MOVED",
        "changeType": "MOVED",
        "changeKind": "Function",
        "changeLabel": "moved",
        "changeElementName": "isCartNotFoundError",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isSelectiveCart",
    "parameters": [
      {
        "name": "cartId",
        "type": "string",
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_MOVED",
        "changeType": "MOVED",
        "changeKind": "Function",
        "changeLabel": "moved",
        "changeElementName": "isSelectiveCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isTempCartId",
    "parameters": [
      {
        "name": "cartId",
        "type": "string",
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_MOVED",
        "changeType": "MOVED",
        "changeKind": "Function",
        "changeLabel": "moved",
        "changeElementName": "isTempCartId",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MULTI_CART_DATA",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "MULTI_CART_DATA",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MULTI_CART_FEATURE",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "MULTI_CART_FEATURE",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getActiveCartId",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, string>",
    "isDeleted": true,
    "deletedComment": "Variable MultiCartSelectors.getActiveCartId has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getActiveCartId",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartEntitySelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, ProcessesLoaderState<Cart>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartEntitySelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getCartEntitySelectorFactory",
        "changeDesc": true,
        "oldType": "(cartId: string) => MemoizedSelector<StateWithMultiCart, ProcessesLoaderState<Cart>>",
        "newType": "(cartId: string) => MemoizedSelector<StateWithMultiCart, StateUtils.ProcessesLoaderState<Cart | undefined>>",
        "previousStateDoc": "getCartEntitySelectorFactory: (cartId: string) => MemoizedSelector<StateWithMultiCart, ProcessesLoaderState<Cart>>",
        "currentStateDoc": "getCartEntitySelectorFactory: (cartId: string) => MemoizedSelector<StateWithMultiCart, StateUtils.ProcessesLoaderState<Cart | undefined>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartEntriesSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, OrderEntry[]>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartEntriesSelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartEntrySelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string, productCode: string) => MemoizedSelector<StateWithMultiCart, OrderEntry>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartEntrySelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getCartEntrySelectorFactory",
        "changeDesc": true,
        "oldType": "(cartId: string, productCode: string) => MemoizedSelector<StateWithMultiCart, OrderEntry>",
        "newType": "(cartId: string, productCode: string) => MemoizedSelector<StateWithMultiCart, OrderEntry | undefined>",
        "previousStateDoc": "getCartEntrySelectorFactory: (cartId: string, productCode: string) => MemoizedSelector<StateWithMultiCart, OrderEntry>",
        "currentStateDoc": "getCartEntrySelectorFactory: (cartId: string, productCode: string) => MemoizedSelector<StateWithMultiCart, OrderEntry | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartHasPendingProcessesSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartHasPendingProcessesSelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartIsStableSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartIsStableSelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, Cart>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartSelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartsSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, Cart[]>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getCartsSelectorFactory",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getMultiCartEntities",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, EntityProcessesLoaderState<Cart>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getMultiCartEntities",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getMultiCartEntities",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithMultiCart, EntityProcessesLoaderState<Cart>>",
        "newType": "MemoizedSelector<StateWithMultiCart, StateUtils.EntityProcessesLoaderState<Cart | undefined>>",
        "previousStateDoc": "getMultiCartEntities: MemoizedSelector<StateWithMultiCart, EntityProcessesLoaderState<Cart>>",
        "currentStateDoc": "getMultiCartEntities: MemoizedSelector<StateWithMultiCart, StateUtils.EntityProcessesLoaderState<Cart | undefined>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getMultiCartState",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, MultiCartState>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "MultiCartSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getMultiCartState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/core",
          "namespace": "MultiCartSelectors"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getWishListId",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, string>",
    "isDeleted": true,
    "deletedComment": "Variable MultiCartSelectors.getWishListId has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "getWishListId",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MultiCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "products",
            "type": "Array<{\n        productCode: string;\n        quantity: number;\n    }>",
            "canonicalReference": "!Array:interface",
            "shortType": "Array",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ userId, oldCartId, toMergeCartGuid, extraData, }",
            "type": "{\n        userId: string;\n        oldCartId?: string;\n        toMergeCartGuid?: string;\n        extraData?: {\n            active?: boolean;\n        };\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "deleteCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "generateTempCartId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getCartEntity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry | null>"
      },
      {
        "kind": "Method",
        "name": "getLastEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry | null>"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, userId, extraData, }",
            "type": "{\n        cartId: string;\n        userId: string;\n        extraData?: any;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "mergeToCurrentCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ userId, cartId, extraData, }",
            "type": "{\n        userId: string;\n        cartId: string;\n        extraData?: {\n            active?: boolean;\n        };\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reloadCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "extraData",
            "type": "{\n        active: boolean;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      {
        "kind": "Method",
        "name": "updateEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "MultiCartService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "createCart",
        "changeDesc": true,
        "previousStateDoc": "\ncreateCart(\n  { userId, oldCartId, toMergeCartGuid, extraData, }: {\n        userId: string;\n        oldCartId?: string;\n        toMergeCartGuid?: string;\n        extraData?: {\n            active?: boolean;\n        };\n    }\n): Observable<ProcessesLoaderState<Cart>>\n",
        "currentStateDoc": "\ncreateCart(\n  { userId, oldCartId, toMergeCartGuid, extraData, }: {\n        userId: string;\n        oldCartId?: string;\n        toMergeCartGuid?: string;\n        extraData?: {\n            active?: boolean;\n        };\n    }\n): Observable<Cart>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getCartEntity",
        "changeDesc": true,
        "previousStateDoc": "\ngetCartEntity(\n  cartId: string\n): Observable<ProcessesLoaderState<Cart>>\n",
        "currentStateDoc": "\ngetCartEntity(\n  cartId: string\n): Observable<StateUtils.ProcessesLoaderState<Cart | undefined>>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getEntry",
        "changeDesc": true,
        "previousStateDoc": "\ngetEntry(\n  cartId: string\n  productCode: string\n): Observable<OrderEntry | null>\n",
        "currentStateDoc": "\ngetEntry(\n  cartId: string\n  productCode: string\n): Observable<OrderEntry | undefined>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getLastEntry",
        "changeDesc": true,
        "previousStateDoc": "\ngetLastEntry(\n  cartId: string\n  productCode: string\n): Observable<OrderEntry | null>\n",
        "currentStateDoc": "\ngetLastEntry(\n  cartId: string\n  productCode: string\n): Observable<OrderEntry | undefined>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "MultiCartState",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "carts",
        "type": "EntityProcessesLoaderState<Cart>"
      },
      { "kind": "PropertySignature", "name": "wishList", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "MultiCartState",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "active",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "active",
          "type": "string"
        },
        "apiElementName": "MultiCartState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'active' was removed from Interface 'MultiCartState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "PropertySignature",
        "changeLabel": "changed",
        "changeElementName": "carts",
        "changeDesc": true,
        "oldType": "EntityProcessesLoaderState<Cart>",
        "newType": "StateUtils.EntityProcessesLoaderState<Cart | undefined>",
        "previousStateDoc": "carts: EntityProcessesLoaderState<Cart>",
        "currentStateDoc": "carts: StateUtils.EntityProcessesLoaderState<Cart | undefined>"
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "wishList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "wishList",
          "type": "string"
        },
        "apiElementName": "MultiCartState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'wishList' was removed from Interface 'MultiCartState'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MultiCartStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "canonicalReference": "@spartacus/core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "siteContextParamsService",
            "type": "SiteContextParamsService",
            "canonicalReference": "@spartacus/core!SiteContextParamsService:class",
            "shortType": "SiteContextParamsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getCartState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        active: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "{\n        active: string;\n    } | undefined",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "siteContextParamsService",
        "type": "SiteContextParamsService"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "MultiCartStatePersistenceService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "normalizeHttpError",
    "parameters": [
      {
        "name": "error",
        "type": "HttpErrorResponse | any",
        "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
        "shortType": "HttpErrorResponse",
        "importPath": "@angular/common/http"
      }
    ],
    "returnType": "HttpErrorModel | undefined",
    "breakingChanges": [
      {
        "change": "FUNCTION_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Function",
        "changeLabel": "changed",
        "changeElementName": "normalizeHttpError",
        "changeDesc": true,
        "previousStateDoc": "\nnormalizeHttpError(\n  error: HttpErrorResponse | any\n): HttpErrorModel | undefined\n",
        "currentStateDoc": "\nnormalizeHttpError(\n  error: HttpErrorResponse | HttpErrorModel | any\n): HttpErrorModel | undefined\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldCartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "toMergeCartGuid",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCartAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/occ", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "load",
        "changeDesc": true,
        "previousStateDoc": "\nload(\n  userId: string\n  cartId: string\n): Observable<Cart>\n",
        "currentStateDoc": "\nload(\n  userId: string\n  cartId: string\n): Observable<Cart | undefined>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartEntryAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "qty",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pickupStore",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCartEntryAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/occ", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entryPromotionService",
            "type": "OrderEntryPromotionsService",
            "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
            "shortType": "OrderEntryPromotionsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Cart",
            "canonicalReference": "@spartacus/core!Occ.Cart:interface",
            "shortType": "Occ.Cart",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "Cart",
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Cart"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCartNormalizer",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/occ", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  converter: ConverterService\n  entryPromotionService: OrderEntryPromotionsService\n)\n",
        "currentStateDoc": "\nconstructor(\n  converter: ConverterService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "converter",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/core!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "entryPromotionService",
              "type": "OrderEntryPromotionsService",
              "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
              "shortType": "OrderEntryPromotionsService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "converter",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/cart_base_occ!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "entryPromotionService",
              "type": "OrderEntryPromotionsService",
              "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
              "shortType": "OrderEntryPromotionsService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": []
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartValidationAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "validate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModificationList>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCartValidationAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/occ", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartVoucherAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getCartVoucherEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getHeaders",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "HttpHeaders"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccCartVoucherAdapter",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/occ", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getCartVoucherEndpoint",
        "changeDesc": true,
        "previousStateDoc": "\ngetCartVoucherEndpoint(\n  userId: string\n  cartId: any\n): string\n",
        "currentStateDoc": "\ngetCartVoucherEndpoint(\n  userId: string\n  cartId: string\n): string\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OccEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "addEmail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addEntries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addressDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addresses",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addressVerification",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addTextfieldConfigurationToCart",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "addVariantConfigurationToCart",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "anonymousConsentTemplates",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUser",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserApprover",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserApprovers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserPermission",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserPermissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUsers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserUserGroup",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserUserGroups",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "baseSites",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "budget",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "budgets",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelReplenishmentOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelReturn",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "carts",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cartVoucher",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "claimCoupon",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "component",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "components",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consentDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consents",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consentTemplates",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consignmentTracking",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenterBudget",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenterBudgets",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCentersAll",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "countries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "couponNotification",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createCart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createTextfieldConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "createVariantConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "currencies",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "customerCoupons",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "deleteCart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "getActiveCostCenters",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "getProductInterests",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "getVariantConfigurationOverview",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "languages",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "notificationPreference",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApproval",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalDecision",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissionTypes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovals",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderHistory",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturnDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturns",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnit",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitApprover",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitApprovers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnits",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsAddresses",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsApprovalProcesses",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsAvailable",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsTree",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitUserRole",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitUserRoles",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitUsers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "page",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "pages",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentDetailsAll",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "permission",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "permissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "product",
        "type": "string | ProductOccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productInterests",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productReferences",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productReviews",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productSearch",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productSuggestions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "readTextfieldConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfigurationOverviewForOrderEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfigurationPriceSummary",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "regions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "removeEntries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderDetailsHistory",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderHistory",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "returnOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "saveCart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "scheduleReplenishmentOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "store",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "stores",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "storescounts",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "updateEntries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "updateTextfieldConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "updateVariantConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "updateVariantConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroup",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupAvailableOrderApprovalPermissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupAvailableOrgCustomers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupMember",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupMembers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupOrderApprovalPermission",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupOrderApprovalPermissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroups",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "validate",
        "type": "string | OccEndpoint"
      }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "addEmail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "addEmail",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'addEmail' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "addEntries",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "addEntries",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'addEntries' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "cancelOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "cancelOrder",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'cancelOrder' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "cancelReplenishmentOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "cancelReplenishmentOrder",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'cancelReplenishmentOrder' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "cancelReturn",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "cancelReturn",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'cancelReturn' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "cart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "cart",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'cart' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "carts",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "carts",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'carts' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "cartVoucher",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "cartVoucher",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'cartVoucher' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "consignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "consignmentTracking",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'consignmentTracking' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "createCart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "createCart",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'createCart' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "deleteCart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "deleteCart",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'deleteCart' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderDetail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderDetail",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderDetail' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderHistory",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderHistory",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderHistory' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderReturnDetail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderReturnDetail",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderReturnDetail' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderReturns",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderReturns",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderReturns' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "removeEntries",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "removeEntries",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'removeEntries' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "replenishmentOrderDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "replenishmentOrderDetails",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'replenishmentOrderDetails' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "replenishmentOrderDetailsHistory",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "replenishmentOrderDetailsHistory",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'replenishmentOrderDetailsHistory' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "replenishmentOrderHistory",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "replenishmentOrderHistory",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'replenishmentOrderHistory' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "returnOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "returnOrder",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'returnOrder' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "saveCart",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "saveCart",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'saveCart' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "scheduleReplenishmentOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "scheduleReplenishmentOrder",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'scheduleReplenishmentOrder' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "updateEntries",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "updateEntries",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'updateEntries' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "validate",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "validate",
          "type": "string | OccEndpoint"
        },
        "apiElementName": "OccEndpoints",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'validate' was removed from Interface 'OccEndpoints'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccOrderNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entryPromotionService",
            "type": "OrderEntryPromotionsService",
            "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
            "shortType": "OrderEntryPromotionsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Order",
            "canonicalReference": "@spartacus/core!Occ.Order:interface",
            "shortType": "Occ.Order",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "Order",
            "canonicalReference": "@spartacus/core!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Order"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccOrderNormalizer",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/occ", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  converter: ConverterService\n  entryPromotionService: OrderEntryPromotionsService\n)\n",
        "currentStateDoc": "\nconstructor(\n  converter: ConverterService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "converter",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/core!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "entryPromotionService",
              "type": "OrderEntryPromotionsService",
              "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
              "shortType": "OrderEntryPromotionsService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "converter",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/order_occ!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "entryPromotionService",
              "type": "OrderEntryPromotionsService",
              "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
              "shortType": "OrderEntryPromotionsService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": []
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccReplenishmentOrderNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entryPromotionService",
            "type": "OrderEntryPromotionsService",
            "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
            "shortType": "OrderEntryPromotionsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ReplenishmentOrder",
            "canonicalReference": "@spartacus/core!Occ.ReplenishmentOrder:interface",
            "shortType": "Occ.ReplenishmentOrder",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "ReplenishmentOrder",
            "canonicalReference": "@spartacus/core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ReplenishmentOrder"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccReplenishmentOrderNormalizer",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/occ", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  converter: ConverterService\n  entryPromotionService: OrderEntryPromotionsService\n)\n",
        "currentStateDoc": "\nconstructor(\n  converter: ConverterService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "converter",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/core!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "entryPromotionService",
              "type": "OrderEntryPromotionsService",
              "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
              "shortType": "OrderEntryPromotionsService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "converter",
              "type": "ConverterService",
              "canonicalReference": "@spartacus/order_occ!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "entryPromotionService",
              "type": "OrderEntryPromotionsService",
              "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
              "shortType": "OrderEntryPromotionsService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": []
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccReturnRequestNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ReturnRequest",
            "canonicalReference": "@spartacus/core!Occ.ReturnRequest:interface",
            "shortType": "Occ.ReturnRequest",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "ReturnRequest",
            "canonicalReference": "@spartacus/core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ReturnRequest"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OccReturnRequestNormalizer",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/occ", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification"
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OccUserOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OccUserOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OccUserReplenishmentOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OccUserReplenishmentOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderHistoryList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_HISTORY_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_NORMALIZER",
    "type": "InjectionToken<Converter<any, Order>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_INPUT_SERIALIZER",
    "type": "InjectionToken<Converter<ReturnRequestEntryInputList, any>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_RETURN_REQUEST_INPUT_SERIALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequest>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_RETURN_REQUEST_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_RETURNS_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequestList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_RETURNS_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ORDER_TYPE",
    "members": ["PLACE_ORDER", "SCHEDULE_REPLENISHMENT_ORDER"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "ORDER_TYPE",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Order",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "cancellable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "consignments",
        "type": "Consignment[]"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      { "kind": "PropertySignature", "name": "created", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryStatus",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryStatusDisplay",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "guestCustomer",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "orgCustomer", "type": "B2BUser" },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "returnable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "unconsignedEntries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "Order",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderEntry",
    "members": [
      { "kind": "PropertySignature", "name": "basePrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "cancellableQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelledItemsPrice",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      { "kind": "PropertySignature", "name": "entryNumber", "type": "number" },
      { "kind": "PropertySignature", "name": "orderCode", "type": "string" },
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      {
        "kind": "PropertySignature",
        "name": "promotions",
        "type": "PromotionResult[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "returnableQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "returnedItemsPrice",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      { "kind": "PropertySignature", "name": "updateable", "type": "boolean" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "OrderEntry",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OrderEntryPromotionsService",
    "members": [
      {
        "kind": "Method",
        "name": "getProductPromotion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "Occ.OrderEntry",
            "canonicalReference": "@spartacus/core!Occ.OrderEntry:interface",
            "shortType": "Occ.OrderEntry"
          },
          {
            "name": "promotions",
            "type": "PromotionResult[]",
            "canonicalReference": "@spartacus/core!PromotionResult:interface",
            "shortType": "PromotionResult"
          }
        ],
        "returnType": "PromotionResult[]"
      },
      {
        "kind": "Method",
        "name": "isConsumedByEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consumedEntry",
            "type": "PromotionOrderEntryConsumed",
            "canonicalReference": "@spartacus/core!PromotionOrderEntryConsumed:interface",
            "shortType": "PromotionOrderEntryConsumed"
          },
          {
            "name": "entry",
            "type": "any",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "boolean"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OrderEntryPromotionsService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderEntryPromotionsService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderHistory",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "placed", "type": "Date" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "total", "type": "Price" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "OrderHistory",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderHistoryList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orders",
        "type": "OrderHistory[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "OrderHistoryList",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OrderOccModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/occ",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderOccModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/occ", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OrderReturnRequestService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelReturnRequestProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderReturnRequestService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithUser | StateWithProcess<void>>\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  store: Store<StateWithOrder>\n  processStateStore: Store<StateWithProcess<void>>\n  userIdService: UserIdService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithUser | StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/order_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "store",
              "type": "Store<StateWithUser | StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            }
          ],
          "addedParams": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            }
          ]
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequestList",
        "changeDesc": true,
        "previousStateDoc": "\ngetOrderReturnRequestList(\n  pageSize: number\n): Observable<ReturnRequestList>\n",
        "currentStateDoc": "\ngetOrderReturnRequestList(\n  pageSize: number\n): Observable<ReturnRequestList | undefined>\n"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "store",
        "changeDesc": true,
        "oldType": "Store<StateWithUser | StateWithProcess<void>>",
        "newType": "Store<StateWithOrder>",
        "previousStateDoc": "store: Store<StateWithUser | StateWithProcess<void>>",
        "currentStateDoc": "store: Store<StateWithOrder>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentType",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "PaymentType",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PickupOrderEntryGroup",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      { "kind": "PropertySignature", "name": "distance", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "PickupOrderEntryGroup",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PromotionLocation",
    "members": ["ActiveCart", "Checkout", "Order", "SavedCart", "SaveForLater"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "PromotionLocation",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionOrderEntryConsumed",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "adjustedUnitPrice",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "orderEntryNumber",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "PromotionOrderEntryConsumed",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionResult",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consumedEntries",
        "type": "PromotionOrderEntryConsumed[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "promotion", "type": "Promotion" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "PromotionResult",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Query",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "P",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T | undefined>"
      },
      {
        "kind": "MethodSignature",
        "name": "getState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "P",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<QueryState<T>>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHODSIGNATURE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "MethodSignature",
        "changeLabel": "changed",
        "changeElementName": "get",
        "changeDesc": true,
        "previousStateDoc": "\nget(\n  params: P\n): Observable<T | undefined>\n",
        "currentStateDoc": "\nget(\n  params: PARAMS\n): Observable<RESULT | undefined>\n"
      },
      {
        "change": "METHODSIGNATURE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "MethodSignature",
        "changeLabel": "changed",
        "changeElementName": "getState",
        "changeDesc": true,
        "previousStateDoc": "\ngetState(\n  params: P\n): Observable<QueryState<T>>\n",
        "currentStateDoc": "\ngetState(\n  params: PARAMS\n): Observable<QueryState<RESULT>>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "recurrencePeriod",
    "type": "{\n    DAILY: string;\n    WEEKLY: string;\n    MONTHLY: string;\n}",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "recurrencePeriod",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReplenishmentOrderList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "REPLENISHMENT_ORDER_HISTORY_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReplenishmentOrder>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "REPLENISHMENT_ORDER_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReplenishmentOrder",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "expirationTime",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "firstDate", "type": "string" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentStatus",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentType",
        "type": "PaymentType"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "savedBy", "type": "Principal" },
      { "kind": "PropertySignature", "name": "saveTime", "type": "string" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalUnitCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "trigger", "type": "Trigger" },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrder",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReplenishmentOrderList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrders",
        "type": "ReplenishmentOrder[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderList",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequest",
    "members": [
      { "kind": "PropertySignature", "name": "cancellable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "creationTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      { "kind": "PropertySignature", "name": "order", "type": "Order" },
      {
        "kind": "PropertySignature",
        "name": "refundDeliveryCost",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "returnEntries",
        "type": "ReturnRequestEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "returnLabelDownloadUrl",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "rma", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequest",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestEntry",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "expectedQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "orderEntry",
        "type": "OrderEntry"
      },
      { "kind": "PropertySignature", "name": "refundAmount", "type": "Price" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestEntry",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestEntryInputList",
    "members": [
      { "kind": "PropertySignature", "name": "orderCode", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "returnRequestEntryInputs",
        "type": "CancelOrReturnRequestEntryInput[]"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestEntryInputList",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      {
        "kind": "PropertySignature",
        "name": "returnRequests",
        "type": "ReturnRequest[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestList",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestModification",
    "members": [
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestModification",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "RoutingConfig",
            "canonicalReference": "@spartacus/core!RoutingConfig:class",
            "shortType": "RoutingConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "RoutingConfig" },
      {
        "kind": "Method",
        "name": "getLoadStrategy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "RouteLoadStrategy"
      },
      {
        "kind": "Method",
        "name": "getRouteConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeName",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "RouteConfig"
      },
      {
        "kind": "Method",
        "name": "getRouteName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "path",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initRouteNamesByPath",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routeNamesByPath",
        "type": "{\n        [path: string]: string;\n    }"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getRouteConfig",
        "changeDesc": true,
        "previousStateDoc": "\ngetRouteConfig(\n  routeName: string\n): RouteConfig\n",
        "currentStateDoc": "\ngetRouteConfig(\n  routeName: string\n): RouteConfig | undefined\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SAVE_CART_NORMALIZER",
    "type": "InjectionToken<Converter<any, SaveCartResult>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "SAVE_CART_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SaveCartAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<SaveCartResult>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class SaveCartAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SaveCartAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SaveCartConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "SaveCartAdapter",
            "canonicalReference": "@spartacus/core!SaveCartAdapter:class",
            "shortType": "SaveCartAdapter"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "SaveCartAdapter" },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<SaveCartResult>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class SaveCartConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "SaveCartConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SaveCartResult",
    "members": [
      { "kind": "PropertySignature", "name": "savedCartData", "type": "Cart" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "SaveCartResult",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ScheduleReplenishmentForm",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "daysOfWeek",
        "type": "DaysOfWeek[]"
      },
      {
        "kind": "PropertySignature",
        "name": "nthDayOfMonth",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "numberOfDays", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "numberOfWeeks",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "recurrencePeriod",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentStartDate",
        "type": "string"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ScheduleReplenishmentForm",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SelectiveCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userService",
            "type": "UserService",
            "canonicalReference": "@spartacus/core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "canonicalReference": "@spartacus/core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartConfigService",
            "type": "CartConfigService",
            "canonicalReference": "@spartacus/core!CartConfigService:class",
            "shortType": "CartConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      {
        "kind": "Property",
        "name": "cartConfigService",
        "type": "CartConfigService"
      },
      { "kind": "Property", "name": "cartId", "type": "string" },
      {
        "kind": "Property",
        "name": "cartId$",
        "type": "BehaviorSubject<string>"
      },
      {
        "kind": "Property",
        "name": "cartSelector$",
        "type": "Observable<import(\"../../state/utils/processes-loader\").ProcessesLoaderState<Cart>>"
      },
      { "kind": "Property", "name": "customerId", "type": "string" },
      {
        "kind": "Method",
        "name": "getCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "isEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isJustLoggedIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isLoggedIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Property",
        "name": "PREVIOUS_USER_ID_INITIAL_VALUE",
        "type": ""
      },
      { "kind": "Property", "name": "previousUserId", "type": "string" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectiveCart$",
        "type": "Observable<Cart>"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      {
        "kind": "Method",
        "name": "updateEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryNumber",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userId", "type": "string" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "SelectiveCartService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithMultiCart>\n  userService: UserService\n  multiCartService: MultiCartService\n  baseSiteService: BaseSiteService\n  cartConfigService: CartConfigService\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  userService: UserService\n  multiCartFacade: MultiCartFacade\n  baseSiteService: BaseSiteService\n  userIdService: UserIdService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userService",
              "type": "UserService",
              "canonicalReference": "@spartacus/core!UserService:class",
              "shortType": "UserService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "baseSiteService",
              "type": "BaseSiteService",
              "canonicalReference": "@spartacus/core!BaseSiteService:class",
              "shortType": "BaseSiteService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartConfigService",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/core!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "userService",
              "type": "UserService",
              "canonicalReference": "@spartacus/cart_base_core!UserService:class",
              "shortType": "UserService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartFacade",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "baseSiteService",
              "type": "BaseSiteService",
              "canonicalReference": "@spartacus/cart_base_core!BaseSiteService:class",
              "shortType": "BaseSiteService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_base_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartConfigService",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/core!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "multiCartFacade",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartConfigService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartConfigService",
          "type": "CartConfigService"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'cartConfigService' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartId",
          "type": "string"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'cartId' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartId$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartId$",
          "type": "BehaviorSubject<string>"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'cartId$' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartSelector$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartSelector$",
          "type": "Observable<import(\"../../state/utils/processes-loader\").ProcessesLoaderState<Cart>>"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'cartSelector$' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "customerId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "customerId",
          "type": "string"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'customerId' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getEntry",
        "changeDesc": true,
        "previousStateDoc": "\ngetEntry(\n  productCode: string\n): Observable<OrderEntry>\n",
        "currentStateDoc": "\ngetEntry(\n  productCode: string\n): Observable<OrderEntry | undefined>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isEmpty",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isEmpty",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cart",
              "type": "Cart",
              "canonicalReference": "@spartacus/core!Cart:interface",
              "shortType": "Cart"
            }
          ],
          "returnType": "boolean"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isEmpty' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isEnabled",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isEnabled",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isEnabled' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isJustLoggedIn",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isJustLoggedIn",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "boolean"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isJustLoggedIn' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isLoggedIn",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "isLoggedIn",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "boolean"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'isLoggedIn' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "load",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "load",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Method 'load' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "multiCartService",
          "type": "MultiCartService"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'multiCartService' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "PREVIOUS_USER_ID_INITIAL_VALUE",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "PREVIOUS_USER_ID_INITIAL_VALUE",
          "type": ""
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'PREVIOUS_USER_ID_INITIAL_VALUE' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "previousUserId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "previousUserId",
          "type": "string"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'previousUserId' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "store",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "store",
          "type": "Store<StateWithMultiCart>"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'store' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userId",
          "type": "string"
        },
        "apiElementName": "SelectiveCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'userId' was removed from Class 'SelectiveCartService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityProcessesLoaderReducer",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "reducer",
        "type": "(state: T, action: ProcessesLoaderAction) => T",
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "(state: EntityProcessesLoaderState<T>, action: EntityProcessesLoaderAction) => EntityProcessesLoaderState<T>",
    "breakingChanges": [
      {
        "change": "FUNCTION_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Function",
        "changeLabel": "changed",
        "changeElementName": "entityProcessesLoaderReducer",
        "changeDesc": true,
        "previousStateDoc": "\nentityProcessesLoaderReducer(\n  entityType: string\n  reducer: (state: T, action: ProcessesLoaderAction) => T\n): (state: EntityProcessesLoaderState<T>, action: EntityProcessesLoaderAction) => EntityProcessesLoaderState<T>\n",
        "currentStateDoc": "\nentityProcessesLoaderReducer(\n  entityType: string\n  reducer: (state: T, action: ProcessesLoaderAction) => T\n): (state: EntityProcessesLoaderState<T> | undefined, action: EntityProcessesLoaderAction) => EntityProcessesLoaderState<T>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithMultiCart",
    "members": [
      { "kind": "PropertySignature", "name": "cart", "type": "MultiCartState" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "StateWithMultiCart",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Trigger",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activationTime",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "displayTimeTable",
        "type": "string"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "Trigger",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateUserAddressEvent",
    "members": [
      { "kind": "Property", "name": "address", "type": "Address" },
      { "kind": "Property", "name": "addressId", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userId",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userId",
          "type": "string"
        },
        "apiElementName": "UpdateUserAddressEvent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'userId' was removed from Class 'UpdateUserAddressEvent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_ORDER_DETAILS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable USER_ORDER_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "USER_ORDER_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_ORDERS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable USER_ORDERS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "USER_ORDERS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_REPLENISHMENT_ORDER_DETAILS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable USER_REPLENISHMENT_ORDER_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "USER_REPLENISHMENT_ORDER_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_REPLENISHMENT_ORDERS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable USER_REPLENISHMENT_ORDERS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "USER_REPLENISHMENT_ORDERS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_RETURN_REQUEST_DETAILS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable USER_RETURN_REQUEST_DETAILS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "USER_RETURN_REQUEST_DETAILS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_RETURN_REQUESTS",
    "type": "",
    "isDeleted": true,
    "deletedComment": "Variable USER_RETURN_REQUESTS has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "USER_RETURN_REQUESTS",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER_RETURN_REQUEST_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER_RETURN_REQUEST_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER_RETURN_REQUEST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_ORDER",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_REPLENISHMENT_ORDER_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_REPLENISHMENT_ORDER_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CANCEL_REPLENISHMENT_ORDER",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrder",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderCode: string;\n        cancelRequestInput: CancellationRequestEntryInputList;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderCode: string;\n        cancelRequestInput: CancellationRequestEntryInputList;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrder",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestCode: string;\n        returnRequestModification: ReturnRequestModification;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestCode: string;\n        returnRequestModification: ReturnRequestModification;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderReturnRequest",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderReturnRequestFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderReturnRequestSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrder",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelReplenishmentOrder",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrderFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelReplenishmentOrderFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrderSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "canonicalReference": "@spartacus/core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelReplenishmentOrderSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_CANCEL_REPLENISHMENT_ORDER",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_CANCEL_REPLENISHMENT_ORDER",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_CONSIGNMENT_TRACKING",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_CONSIGNMENT_TRACKING",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_ORDER_DETAILS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_RETURN_REQUEST_LIST",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_ORDER_RETURN_REQUEST_LIST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_ORDER_RETURN_REQUEST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ClEAR_REPLENISHMENT_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ClEAR_REPLENISHMENT_ORDER_DETAILS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_USER_ORDERS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_USER_ORDERS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_USER_REPLENISHMENT_ORDERS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CLEAR_USER_REPLENISHMENT_ORDERS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearCancelReplenishmentOrder",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearCancelReplenishmentOrder",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearConsignmentTracking",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearConsignmentTracking",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearOrderDetails",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearOrderReturnRequest",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearOrderReturnRequestList",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearOrderReturnRequestList",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearReplenishmentOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearReplenishmentOrderDetails",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearUserOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearUserOrders",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearUserReplenishmentOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ClearUserReplenishmentOrders",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ConsignmentTrackingAction",
    "namespace": "UserActions",
    "members": [
      "LoadConsignmentTracking",
      " | ",
      "LoadConsignmentTrackingFail",
      " | ",
      "LoadConsignmentTrackingSuccess",
      " | ",
      "ClearConsignmentTracking"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "ConsignmentTrackingAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_ORDER_RETURN_REQUEST_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_ORDER_RETURN_REQUEST_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CREATE_ORDER_RETURN_REQUEST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestInput: ReturnRequestEntryInputList;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestInput: ReturnRequestEntryInputList;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateOrderReturnRequest",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateOrderReturnRequestFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequest",
            "canonicalReference": "@spartacus/core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequest" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CreateOrderReturnRequestSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CONSIGNMENT_TRACKING_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CONSIGNMENT_TRACKING_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_CONSIGNMENT_TRACKING",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_DETAILS_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_DETAILS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_DETAILS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_RETURN_REQUEST_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_RETURN_REQUEST_LIST_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_RETURN_REQUEST_LIST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_RETURN_REQUEST_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_ORDER_RETURN_REQUEST",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_REPLENISHMENT_ORDER_DETAILS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_USER_ORDERS_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_USER_ORDERS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_USER_ORDERS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS_FAIL",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_USER_REPLENISHMENT_ORDERS_FAIL",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "LOAD_USER_REPLENISHMENT_ORDERS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadConsignmentTracking",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId?: string;\n        orderCode: string;\n        consignmentCode: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId?: string;\n        orderCode: string;\n        consignmentCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadConsignmentTracking",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadConsignmentTrackingFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadConsignmentTrackingFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadConsignmentTrackingSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ConsignmentTracking",
            "canonicalReference": "@spartacus/core!ConsignmentTracking:interface",
            "shortType": "ConsignmentTracking",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ConsignmentTracking" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadConsignmentTrackingSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderCode: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderDetails",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderDetailsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderDetailsFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderDetailsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Order",
            "canonicalReference": "@spartacus/core!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Order" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderDetailsSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestCode: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderReturnRequest",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderReturnRequestFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestList",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderReturnRequestList",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestListFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderReturnRequestListFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestListSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequestList",
            "canonicalReference": "@spartacus/core!ReturnRequestList:interface",
            "shortType": "ReturnRequestList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequestList" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderReturnRequestListSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequest",
            "canonicalReference": "@spartacus/core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequest" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadOrderReturnRequestSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadReplenishmentOrderDetails",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetailsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadReplenishmentOrderDetailsFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetailsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "canonicalReference": "@spartacus/core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadReplenishmentOrderDetailsSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        replenishmentOrderCode?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        replenishmentOrderCode?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadUserOrders",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserOrdersFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadUserOrdersFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserOrdersSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "OrderHistoryList",
            "canonicalReference": "@spartacus/core!OrderHistoryList:interface",
            "shortType": "OrderHistoryList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "OrderHistoryList" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadUserOrdersSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadUserReplenishmentOrders",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrdersFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadUserReplenishmentOrdersFail",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrdersSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrderList",
            "canonicalReference": "@spartacus/core!ReplenishmentOrderList:interface",
            "shortType": "ReplenishmentOrderList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "ReplenishmentOrderList"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "LoadUserReplenishmentOrdersSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "OrderDetailsAction",
    "namespace": "UserActions",
    "members": [
      "LoadOrderDetails",
      " | ",
      "LoadOrderDetailsFail",
      " | ",
      "LoadOrderDetailsSuccess",
      " | ",
      "ClearOrderDetails",
      " | ",
      "CancelOrder",
      " | ",
      "CancelOrderFail",
      " | ",
      "CancelOrderSuccess"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailsAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "OrderReturnRequestAction",
    "namespace": "UserActions",
    "members": [
      "CreateOrderReturnRequest",
      " | ",
      "CreateOrderReturnRequestFail",
      " | ",
      "CreateOrderReturnRequestSuccess",
      " | ",
      "LoadOrderReturnRequest",
      " | ",
      "LoadOrderReturnRequestFail",
      " | ",
      "LoadOrderReturnRequestSuccess",
      " | ",
      "CancelOrderReturnRequest",
      " | ",
      "CancelOrderReturnRequestFail",
      " | ",
      "CancelOrderReturnRequestSuccess",
      " | ",
      "LoadOrderReturnRequestList",
      " | ",
      "LoadOrderReturnRequestListFail",
      " | ",
      "LoadOrderReturnRequestListSuccess",
      " | ",
      "ClearOrderReturnRequest",
      " | ",
      "ClearOrderReturnRequestList",
      " | ",
      "ResetCancelReturnProcess"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "OrderReturnRequestAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ReplenishmentOrderDetailsAction",
    "namespace": "UserActions",
    "members": [
      "LoadReplenishmentOrderDetails",
      " | ",
      "LoadReplenishmentOrderDetailsSuccess",
      " | ",
      "LoadReplenishmentOrderDetailsFail",
      " | ",
      "ClearReplenishmentOrderDetails",
      " | ",
      "CancelReplenishmentOrder",
      " | ",
      "CancelReplenishmentOrderSuccess",
      " | ",
      "CancelReplenishmentOrderFail",
      " | ",
      "ClearCancelReplenishmentOrder"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderDetailsAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_CANCEL_ORDER_PROCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "RESET_CANCEL_ORDER_PROCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_CANCEL_RETURN_PROCESS",
    "namespace": "UserActions",
    "type": "",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "RESET_CANCEL_RETURN_PROCESS",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetCancelOrderProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ResetCancelOrderProcess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetCancelReturnProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ResetCancelReturnProcess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserOrdersAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserOrders",
      " | ",
      "LoadUserOrdersFail",
      " | ",
      "LoadUserOrdersSuccess",
      " | ",
      "ClearUserOrders"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "UserOrdersAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserReplenishmentOrdersAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserReplenishmentOrders",
      " | ",
      "LoadUserReplenishmentOrdersFail",
      " | ",
      "LoadUserReplenishmentOrdersSuccess",
      " | ",
      "ClearUserReplenishmentOrders"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderActions",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "UserReplenishmentOrdersAction",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderActions"
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOccTransitional_4_2_Module",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class UserOccTransitional_4_2_Module has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserOccTransitional_4_2_Module",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOccTransitionalModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class UserOccTransitionalModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserOccTransitionalModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserOrderAdapter",
            "canonicalReference": "@spartacus/core!UserOrderAdapter:class",
            "shortType": "UserOrderAdapter"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserOrderAdapter" },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Method",
        "name": "return",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserOrderConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserOrderConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserOrderService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserOrderService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserReplenishmentOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserReplenishmentOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserReplenishmentOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserReplenishmentOrderAdapter",
            "canonicalReference": "@spartacus/core!UserReplenishmentOrderAdapter:class",
            "shortType": "UserReplenishmentOrderAdapter"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "UserReplenishmentOrderAdapter"
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserReplenishmentOrderConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserReplenishmentOrderConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserReplenishmentOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCancelReplenishmentOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserReplenishmentOrderService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserReplenishmentOrderService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsignmentTracking",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ConsignmentTracking>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, ConsignmentTracking>",
        "newType": "MemoizedSelector<StateWithOrder, ConsignmentTracking>",
        "previousStateDoc": "getConsignmentTracking: MemoizedSelector<StateWithUser, ConsignmentTracking>",
        "currentStateDoc": "getConsignmentTracking: MemoizedSelector<StateWithOrder, ConsignmentTracking>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsignmentTrackingState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ConsignmentTrackingState>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getConsignmentTrackingState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getConsignmentTrackingState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, ConsignmentTrackingState>",
        "newType": "MemoizedSelector<StateWithOrder, ConsignmentTrackingState>",
        "previousStateDoc": "getConsignmentTrackingState: MemoizedSelector<StateWithUser, ConsignmentTrackingState>",
        "currentStateDoc": "getConsignmentTrackingState: MemoizedSelector<StateWithOrder, ConsignmentTrackingState>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderDetails",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, Order>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderDetails",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderDetails",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, Order>",
        "newType": "MemoizedSelector<StateWithOrder, Order>",
        "previousStateDoc": "getOrderDetails: MemoizedSelector<StateWithUser, Order>",
        "currentStateDoc": "getOrderDetails: MemoizedSelector<StateWithOrder, Order>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequest",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReturnRequest>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderReturnRequest",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequest",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, ReturnRequest>",
        "newType": "MemoizedSelector<StateWithOrder, ReturnRequest>",
        "previousStateDoc": "getOrderReturnRequest: MemoizedSelector<StateWithUser, ReturnRequest>",
        "currentStateDoc": "getOrderReturnRequest: MemoizedSelector<StateWithOrder, ReturnRequest>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestList",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReturnRequestList>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderReturnRequestList",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequestList",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, ReturnRequestList>",
        "newType": "MemoizedSelector<StateWithOrder, ReturnRequestList>",
        "previousStateDoc": "getOrderReturnRequestList: MemoizedSelector<StateWithUser, ReturnRequestList>",
        "currentStateDoc": "getOrderReturnRequestList: MemoizedSelector<StateWithOrder, ReturnRequestList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestListState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReturnRequestList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderReturnRequestListState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequestListState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, LoaderState<ReturnRequestList>>",
        "newType": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReturnRequestList>>",
        "previousStateDoc": "getOrderReturnRequestListState: MemoizedSelector<StateWithUser, LoaderState<ReturnRequestList>>",
        "currentStateDoc": "getOrderReturnRequestListState: MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReturnRequestList>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderReturnRequestLoading",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequestLoading",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getOrderReturnRequestLoading: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getOrderReturnRequestLoading: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReturnRequest>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderReturnRequestState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequestState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, LoaderState<ReturnRequest>>",
        "newType": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReturnRequest>>",
        "previousStateDoc": "getOrderReturnRequestState: MemoizedSelector<StateWithUser, LoaderState<ReturnRequest>>",
        "currentStateDoc": "getOrderReturnRequestState: MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReturnRequest>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderReturnRequestSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderReturnRequestSuccess",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getOrderReturnRequestSuccess: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getOrderReturnRequestSuccess: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrders",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, OrderHistoryList>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrders",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrders",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, OrderHistoryList>",
        "newType": "MemoizedSelector<StateWithOrder, OrderHistoryList>",
        "previousStateDoc": "getOrders: MemoizedSelector<StateWithUser, OrderHistoryList>",
        "currentStateDoc": "getOrders: MemoizedSelector<StateWithOrder, OrderHistoryList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrdersLoaded",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrdersLoaded",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrdersLoaded",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getOrdersLoaded: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getOrdersLoaded: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrdersState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<OrderHistoryList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrdersState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrdersState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, LoaderState<OrderHistoryList>>",
        "newType": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<OrderHistoryList>>",
        "previousStateDoc": "getOrdersState: MemoizedSelector<StateWithUser, LoaderState<OrderHistoryList>>",
        "currentStateDoc": "getOrdersState: MemoizedSelector<StateWithOrder, StateUtils.LoaderState<OrderHistoryList>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<Order>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getOrderState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getOrderState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, LoaderState<Order>>",
        "newType": "MemoizedSelector<StateWithOrder, OrderState>",
        "previousStateDoc": "getOrderState: MemoizedSelector<StateWithUser, LoaderState<Order>>",
        "currentStateDoc": "getOrderState: MemoizedSelector<StateWithOrder, OrderState>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsError",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrderDetailsError",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrderDetailsError",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getReplenishmentOrderDetailsError: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getReplenishmentOrderDetailsError: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrderDetailsLoading",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrderDetailsLoading",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getReplenishmentOrderDetailsLoading: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getReplenishmentOrderDetailsLoading: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrderDetailsSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrderDetailsSuccess",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getReplenishmentOrderDetailsSuccess: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getReplenishmentOrderDetailsSuccess: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsValue",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReplenishmentOrder>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrderDetailsValue",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrderDetailsValue",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, ReplenishmentOrder>",
        "newType": "MemoizedSelector<StateWithOrder, ReplenishmentOrder>",
        "previousStateDoc": "getReplenishmentOrderDetailsValue: MemoizedSelector<StateWithUser, ReplenishmentOrder>",
        "currentStateDoc": "getReplenishmentOrderDetailsValue: MemoizedSelector<StateWithOrder, ReplenishmentOrder>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrders",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReplenishmentOrderList>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrders",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrders",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, ReplenishmentOrderList>",
        "newType": "MemoizedSelector<StateWithOrder, ReplenishmentOrderList>",
        "previousStateDoc": "getReplenishmentOrders: MemoizedSelector<StateWithUser, ReplenishmentOrderList>",
        "currentStateDoc": "getReplenishmentOrders: MemoizedSelector<StateWithOrder, ReplenishmentOrderList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersError",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrdersError",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrdersError",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getReplenishmentOrdersError: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getReplenishmentOrdersError: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrdersLoading",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrdersLoading",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getReplenishmentOrdersLoading: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getReplenishmentOrdersLoading: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrderList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrdersState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrdersState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrderList>>",
        "newType": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReplenishmentOrderList>>",
        "previousStateDoc": "getReplenishmentOrdersState: MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrderList>>",
        "currentStateDoc": "getReplenishmentOrdersState: MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReplenishmentOrderList>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrdersSuccess",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrdersSuccess",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, boolean>",
        "newType": "MemoizedSelector<StateWithOrder, boolean>",
        "previousStateDoc": "getReplenishmentOrdersSuccess: MemoizedSelector<StateWithUser, boolean>",
        "currentStateDoc": "getReplenishmentOrdersSuccess: MemoizedSelector<StateWithOrder, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrder>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/core",
    "newNamespace": "OrderSelectors",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "getReplenishmentOrderState",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/order/core",
          "namespace": "OrderSelectors"
        }
      },
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentOrderState",
        "changeDesc": true,
        "oldType": "MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrder>>",
        "newType": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReplenishmentOrder>>",
        "previousStateDoc": "getReplenishmentOrderState: MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrder>>",
        "currentStateDoc": "getReplenishmentOrderState: MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReplenishmentOrder>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "UserState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "addresses",
        "type": "StateUtils.LoaderState<Address[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "billingCountries",
        "type": "BillingCountriesState"
      },
      {
        "kind": "PropertySignature",
        "name": "consents",
        "type": "StateUtils.LoaderState<ConsentTemplate[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "consignmentTracking",
        "type": "ConsignmentTrackingState"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "StateUtils.LoaderState<CostCenter[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "countries",
        "type": "DeliveryCountriesState"
      },
      {
        "kind": "PropertySignature",
        "name": "customerCoupons",
        "type": "StateUtils.LoaderState<CustomerCouponSearchResult>"
      },
      {
        "kind": "PropertySignature",
        "name": "notificationPreferences",
        "type": "StateUtils.LoaderState<NotificationPreference[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "order",
        "type": "StateUtils.LoaderState<Order>"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturn",
        "type": "StateUtils.LoaderState<ReturnRequest>"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturnList",
        "type": "StateUtils.LoaderState<ReturnRequestList>"
      },
      {
        "kind": "PropertySignature",
        "name": "orders",
        "type": "StateUtils.LoaderState<OrderHistoryList>"
      },
      {
        "kind": "PropertySignature",
        "name": "payments",
        "type": "StateUtils.LoaderState<PaymentDetails[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "productInterests",
        "type": "StateUtils.LoaderState<ProductInterestSearchResult>"
      },
      {
        "kind": "PropertySignature",
        "name": "regions",
        "type": "StateUtils.LoaderState<RegionsState>"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrder",
        "type": "StateUtils.LoaderState<ReplenishmentOrder>"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrders",
        "type": "StateUtils.LoaderState<ReplenishmentOrderList>"
      }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "consignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "consignmentTracking",
          "type": "ConsignmentTrackingState"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'consignmentTracking' was removed from Interface 'UserState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "order",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "order",
          "type": "StateUtils.LoaderState<Order>"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'order' was removed from Interface 'UserState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderReturn",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderReturn",
          "type": "StateUtils.LoaderState<ReturnRequest>"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderReturn' was removed from Interface 'UserState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orderReturnList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orderReturnList",
          "type": "StateUtils.LoaderState<ReturnRequestList>"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orderReturnList' was removed from Interface 'UserState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "orders",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "orders",
          "type": "StateUtils.LoaderState<OrderHistoryList>"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'orders' was removed from Interface 'UserState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "replenishmentOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "replenishmentOrder",
          "type": "StateUtils.LoaderState<ReplenishmentOrder>"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'replenishmentOrder' was removed from Interface 'UserState'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTYSIGNATURE_DELETED",
        "changeType": "DELETED",
        "changeKind": "PropertySignature",
        "changeLabel": "deleted",
        "changeElementName": "replenishmentOrders",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "PropertySignature",
          "name": "replenishmentOrders",
          "type": "StateUtils.LoaderState<ReplenishmentOrderList>"
        },
        "apiElementName": "UserState",
        "apiElementKind": "Interface",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - PropertySignature 'replenishmentOrders' was removed from Interface 'UserState'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserTransitional_4_2_Module",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<UserTransitional_4_2_Module>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserTransitional_4_2_Module has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserTransitional_4_2_Module",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserTransitionalModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<UserTransitionalModule>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class UserTransitionalModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "UserTransitionalModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Voucher",
    "members": [
      { "kind": "PropertySignature", "name": "appliedValue", "type": "Price" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "freeShipping",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "valueFormatted",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "valueString", "type": "string" },
      { "kind": "PropertySignature", "name": "voucherCode", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "Voucher",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WishListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userService",
            "type": "UserService",
            "canonicalReference": "@spartacus/core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createWishList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "name",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "description",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getWishList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getWishListId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getWishListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadWishList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "WishListService",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/core",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithMultiCart>\n  userService: UserService\n  multiCartService: MultiCartService\n  userIdService: UserIdService\n)\n",
        "currentStateDoc": "\nconstructor(\n  store: Store<StateWithMultiCart>\n  userService: UserService\n  multiCartFacade: MultiCartFacade\n  userIdService: UserIdService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userService",
              "type": "UserService",
              "canonicalReference": "@spartacus/core!UserService:class",
              "shortType": "UserService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "store",
              "type": "Store<StateWithMultiCart>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userService",
              "type": "UserService",
              "canonicalReference": "@spartacus/cart_wish-list_core!UserService:class",
              "shortType": "UserService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartFacade",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_wish-list_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_wish-list_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/core!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "multiCartFacade",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_wish-list_core!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "multiCartService",
          "type": "MultiCartService"
        },
        "apiElementName": "WishListService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/core",
        "deletedComment": "// TODO:Spartacus - Property 'multiCartService' was removed from Class 'WishListService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Variable",
    "name": "dpTranslationChunksConfig",
    "type": "TranslationChunksConfig",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/digital-payments/assets",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "dpTranslationChunksConfig",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/digital-payments/assets",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Variable",
    "name": "dpTranslations",
    "type": "TranslationResources",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/digital-payments/assets",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "dpTranslations",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/digital-payments/assets",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/incubator",
    "kind": "Class",
    "name": "IncubatorCoreModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class IncubatorCoreModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "IncubatorCoreModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/incubator",
    "kind": "Class",
    "name": "IncubatorStorefrontModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class IncubatorStorefrontModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "IncubatorStorefrontModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ConsignmentTrackingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "canonicalReference": "@spartacus/order_components!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "consignment", "type": "Consignment" },
      { "kind": "Property", "name": "consignmentStatus", "type": "string[]" },
      {
        "kind": "Property",
        "name": "consignmentTracking$",
        "type": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openTrackingDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "canonicalReference": "@spartacus/order_components!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userOrderService: OrderFacade\n  modalService: ModalService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderHistoryFacade: OrderHistoryFacade\n  modalService: ModalService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/order_components!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/order_components!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderCancellationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userOrderService", "type": "OrderFacade" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  orderDetailsService: OrderDetailsService\n  userOrderService: OrderFacade\n  routing: RoutingService\n  globalMessageService: GlobalMessageService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderDetailsService: OrderDetailsService\n  orderHistoryFacade: OrderHistoryFacade\n  routing: RoutingService\n  globalMessageService: GlobalMessageService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userOrderService",
          "type": "OrderFacade"
        },
        "apiElementName": "OrderCancellationService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userOrderService' was removed from Class 'OrderCancellationService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Property",
        "name": "orderCode$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "orderLoad$", "type": "Observable<{}>" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userOrderService: OrderFacade\n  routingService: RoutingService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderHistoryFacade: OrderHistoryFacade\n  routingService: RoutingService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byOrderNumber: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "Order",
            "canonicalReference": "@spartacus/order_components!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hasReplenishmentOrder$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orders$",
        "type": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "userOrderService", "type": "OrderFacade" },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routing: RoutingService\n  userOrderService: OrderFacade\n  translation: TranslationService\n  userReplenishmentOrderService: ReplenishmentOrderFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  routing: RoutingService\n  orderHistoryFacade: OrderHistoryFacade\n  translation: TranslationService\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "newParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userOrderService",
          "type": "OrderFacade"
        },
        "apiElementName": "OrderHistoryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userOrderService' was removed from Class 'OrderHistoryComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "ReplenishmentOrderFacade"
        },
        "apiElementName": "OrderHistoryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'OrderHistoryComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrder$",
        "type": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userReplenishmentOrderService: ReplenishmentOrderFacade\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "currentStateDoc": "\nconstructor(\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "ReplenishmentOrderFacade"
        },
        "apiElementName": "ReplenishmentOrderCancellationComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderCancellationComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userReplenishmentOrderService: ReplenishmentOrderFacade\n  globalMessageService: GlobalMessageService\n  launchDialogService: LaunchDialogService\n  el: ElementRef\n)\n",
        "currentStateDoc": "\nconstructor(\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n  globalMessageService: GlobalMessageService\n  launchDialogService: LaunchDialogService\n  el: ElementRef\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ],
          "newParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "ReplenishmentOrderFacade"
        },
        "apiElementName": "ReplenishmentOrderCancellationDialogComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderCancellationDialogComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode$",
        "type": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderLoad$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routingService: RoutingService\n  userReplenishmentOrderService: ReplenishmentOrderFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  routingService: RoutingService\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "newParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "ReplenishmentOrderFacade"
        },
        "apiElementName": "ReplenishmentOrderDetailsService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderDetailsService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byReplenishmentNumber: string;\n        byNextOrderDate: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "ReplenishmentOrder",
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrders$",
        "type": "Observable<ReplenishmentOrderList | undefined>"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routing: RoutingService\n  userReplenishmentOrderService: ReplenishmentOrderFacade\n  translation: TranslationService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "currentStateDoc": "\nconstructor(\n  routing: RoutingService\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n  translation: TranslationService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "ReplenishmentOrderFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
              "shortType": "ReplenishmentOrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "ReplenishmentOrderFacade"
        },
        "apiElementName": "ReplenishmentOrderHistoryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/components",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderHistoryComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "TrackingEventsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeModal",
            "type": "NgbActiveModal",
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
            "shortType": "NgbActiveModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      { "kind": "Property", "name": "activeModal", "type": "NgbActiveModal" },
      { "kind": "Property", "name": "consignmentCode", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "shipDate", "type": "Date" },
      {
        "kind": "Property",
        "name": "tracking$",
        "type": "Observable<ConsignmentTracking>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeModal: NgbActiveModal\n  userOrderService: OrderFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeModal: NgbActiveModal\n  orderHistoryFacade: OrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeModal",
              "type": "NgbActiveModal",
              "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
              "shortType": "NgbActiveModal",
              "importPath": "@ng-bootstrap/ng-bootstrap"
            },
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "newParams": [
            {
              "name": "activeModal",
              "type": "NgbActiveModal",
              "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
              "shortType": "NgbActiveModal",
              "importPath": "@ng-bootstrap/ng-bootstrap"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_components!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CONSIGNMENT_TRACKING_NORMALIZER",
    "type": "InjectionToken<Converter<any, ConsignmentTracking>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "CONSIGNMENT_TRACKING_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderHistoryList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_HISTORY_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_INPUT_SERIALIZER",
    "type": "InjectionToken<Converter<ReturnRequestEntryInputList, any>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_RETURN_REQUEST_INPUT_SERIALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequest>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_RETURN_REQUEST_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_RETURNS_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequestList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_RETURNS_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancel",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cancelRequestInput",
              "type": "CancellationRequestEntryInputList",
              "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
              "shortType": "CancellationRequestEntryInputList"
            }
          ],
          "returnType": "Observable<{}>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'cancel' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancelReturnRequest",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancelReturnRequest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestModification",
              "type": "ReturnRequestModification",
              "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
              "shortType": "ReturnRequestModification"
            }
          ],
          "returnType": "Observable<{}>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'cancelReturnRequest' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "createReturnRequest",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "createReturnRequest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestInput",
              "type": "ReturnRequestEntryInputList",
              "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
              "shortType": "ReturnRequestEntryInputList"
            }
          ],
          "returnType": "Observable<ReturnRequest>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'createReturnRequest' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "consignmentCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ConsignmentTracking>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getConsignmentTracking' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "load",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "load",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Order>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'load' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadHistory",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadHistory",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<OrderHistoryList>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadHistory' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadReturnRequestDetail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadReturnRequestDetail",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ReturnRequest>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadReturnRequestDetail' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadReturnRequestList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadReturnRequestList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ReturnRequestList>"
        },
        "apiElementName": "OrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadReturnRequestList' was removed from Class 'OrderAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "OrderAdapter",
            "canonicalReference": "@spartacus/order_core!OrderAdapter:class",
            "shortType": "OrderAdapter",
            "importPath": "@spartacus/order/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "OrderAdapter" },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Method",
        "name": "return",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancel",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cancelRequestInput",
              "type": "CancellationRequestEntryInputList",
              "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
              "shortType": "CancellationRequestEntryInputList"
            }
          ],
          "returnType": "Observable<{}>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'cancel' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancelReturnRequest",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancelReturnRequest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestModification",
              "type": "ReturnRequestModification",
              "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
              "shortType": "ReturnRequestModification"
            }
          ],
          "returnType": "Observable<{}>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'cancelReturnRequest' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "get",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "get",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Order>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'get' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "consignmentCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ConsignmentTracking>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getConsignmentTracking' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getHistory",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getHistory",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<OrderHistoryList>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getHistory' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getReturnRequestDetail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getReturnRequestDetail",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ReturnRequest>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getReturnRequestDetail' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getReturnRequestList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getReturnRequestList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ReturnRequestList>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getReturnRequestList' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "return",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "return",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestInput",
              "type": "ReturnRequestEntryInputList",
              "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
              "shortType": "ReturnRequestEntryInputList"
            }
          ],
          "returnType": "Observable<ReturnRequest>"
        },
        "apiElementName": "OrderConnector",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'return' was removed from Class 'OrderConnector'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrder>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/order_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/order_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithOrder>" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithOrder>\n  processStateStore: Store<StateWithProcess<void>>\n  userIdService: UserIdService\n  routingService: RoutingService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartFacade: ActiveCartFacade\n  userIdService: UserIdService\n  commandService: CommandService\n  orderConnector: OrderConnector\n  eventService: EventService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/order_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/order_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/order_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "commandService",
              "type": "CommandService",
              "canonicalReference": "@spartacus/order_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderConnector",
              "type": "OrderConnector",
              "canonicalReference": "@spartacus/order_core!OrderConnector:class",
              "shortType": "OrderConnector",
              "importPath": "@spartacus/order/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/order_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/order_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "commandService",
              "type": "CommandService",
              "canonicalReference": "@spartacus/order_core!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderConnector",
              "type": "OrderConnector",
              "canonicalReference": "@spartacus/order_core!OrderConnector:class",
              "shortType": "OrderConnector",
              "importPath": "@spartacus/order/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/order_core!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancelOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancelOrder",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cancelRequestInput",
              "type": "CancellationRequestEntryInputList",
              "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
              "shortType": "CancellationRequestEntryInputList"
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'cancelOrder' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearConsignmentTracking' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearOrderDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearOrderDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearOrderDetails' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearOrderList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearOrderList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'clearOrderList' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCancelOrderLoading",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getCancelOrderLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getCancelOrderLoading' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCancelOrderSuccess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getCancelOrderSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getCancelOrderSuccess' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<ConsignmentTracking>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getConsignmentTracking' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getOrderDetails",
        "changeDesc": true,
        "previousStateDoc": "\ngetOrderDetails(): Observable<Order>\n",
        "currentStateDoc": "\ngetOrderDetails(): Observable<Order | undefined>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getOrderHistoryList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getOrderHistoryList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<OrderHistoryList | undefined>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getOrderHistoryList' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getOrderHistoryListLoaded",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getOrderHistoryListLoaded",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'getOrderHistoryListLoaded' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "consignmentCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadConsignmentTracking' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadOrderDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadOrderDetails",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadOrderDetails' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadOrderList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadOrderList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'loadOrderList' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "processStateStore",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "processStateStore",
          "type": "Store<StateWithProcess<void>>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Property 'processStateStore' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "resetCancelOrderProcessState",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "resetCancelOrderProcessState",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Method 'resetCancelOrderProcessState' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "routingService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Property 'routingService' was removed from Class 'OrderService'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "store",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "store",
          "type": "Store<StateWithOrder>"
        },
        "apiElementName": "OrderService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/core",
        "deletedComment": "// TODO:Spartacus - Property 'store' was removed from Class 'OrderService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReplenishmentOrderList>>",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "REPLENISHMENT_ORDER_HISTORY_NORMALIZER",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ReplenishmentOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReplenishmentOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ReplenishmentOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "ReplenishmentOrderAdapter",
            "canonicalReference": "@spartacus/order_core!ReplenishmentOrderAdapter:class",
            "shortType": "ReplenishmentOrderAdapter"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "ReplenishmentOrderAdapter"
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ReplenishmentOrderConnector has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReplenishmentOrderConnector",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ReplenishmentOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrder>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/order_core!UserIdService:class",
            "shortType": "UserIdService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCancelReplenishmentOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithOrder>" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isDeleted": true,
    "deletedComment": "Class ReplenishmentOrderService has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReplenishmentOrderService",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/occ",
    "kind": "Class",
    "name": "OccOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/order_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/order_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/order_occ!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "canonicalReference": "@spartacus/order_occ!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification"
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "canonicalReference": "@spartacus/order_occ!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancel",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cancelRequestInput",
              "type": "CancellationRequestEntryInputList",
              "canonicalReference": "@spartacus/order_occ!CancellationRequestEntryInputList:interface",
              "shortType": "CancellationRequestEntryInputList"
            }
          ],
          "returnType": "Observable<{}>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'cancel' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancelReturnRequest",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancelReturnRequest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestModification",
              "type": "ReturnRequestModification",
              "canonicalReference": "@spartacus/order_occ!ReturnRequestModification:interface",
              "shortType": "ReturnRequestModification"
            }
          ],
          "returnType": "Observable<{}>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'cancelReturnRequest' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "createReturnRequest",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "createReturnRequest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestInput",
              "type": "ReturnRequestEntryInputList",
              "canonicalReference": "@spartacus/order_occ!ReturnRequestEntryInputList:interface",
              "shortType": "ReturnRequestEntryInputList"
            }
          ],
          "returnType": "Observable<ReturnRequest>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'createReturnRequest' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "consignmentCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ConsignmentTracking>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'getConsignmentTracking' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "load",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "load",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<Order>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'load' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadHistory",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadHistory",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<OrderHistoryList>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'loadHistory' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadReturnRequestDetail",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadReturnRequestDetail",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "returnRequestCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ReturnRequest>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'loadReturnRequestDetail' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadReturnRequestList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadReturnRequestList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userId",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<ReturnRequestList>"
        },
        "apiElementName": "OccOrderAdapter",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/occ",
        "deletedComment": "// TODO:Spartacus - Method 'loadReturnRequestList' was removed from Class 'OccOrderAdapter'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/occ",
    "kind": "Class",
    "name": "OccReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "canonicalReference": "@spartacus/order_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "canonicalReference": "@spartacus/order_occ!ConverterService:class",
            "shortType": "ConverterService"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OccReplenishmentOrderAdapter has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OccReplenishmentOrderAdapter",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "OrderDetailsOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "canonicalReference": "@spartacus/order_root!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userOrderService", "type": "OrderFacade" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailsOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userOrderService: OrderFacade\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderHistoryFacade: OrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_root!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "newParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "OrderFacade",
              "canonicalReference": "@spartacus/order_root!OrderFacade:class",
              "shortType": "OrderFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userOrderService",
          "type": "OrderFacade"
        },
        "apiElementName": "OrderDetailsOrderEntriesContext",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Property 'userOrderService' was removed from Class 'OrderDetailsOrderEntriesContext'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "OrderFacade",
    "members": [
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "canonicalReference": "@spartacus/order_root!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "cancelOrder",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "cancelOrder",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "cancelRequestInput",
              "type": "CancellationRequestEntryInputList",
              "canonicalReference": "@spartacus/order_root!CancellationRequestEntryInputList:interface",
              "shortType": "CancellationRequestEntryInputList"
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'cancelOrder' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'clearConsignmentTracking' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearOrderDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearOrderDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'clearOrderDetails' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "clearOrderList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "clearOrderList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'clearOrderList' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCancelOrderLoading",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getCancelOrderLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'getCancelOrderLoading' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCancelOrderSuccess",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getCancelOrderSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'getCancelOrderSuccess' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<ConsignmentTracking>"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'getConsignmentTracking' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getOrderDetails",
        "changeDesc": true,
        "previousStateDoc": "\ngetOrderDetails(): Observable<Order>\n",
        "currentStateDoc": "\ngetOrderDetails(): Observable<Order | undefined>\n"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getOrderHistoryList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getOrderHistoryList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "Observable<OrderHistoryList | undefined>"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'getOrderHistoryList' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getOrderHistoryListLoaded",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "getOrderHistoryListLoaded",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'getOrderHistoryListLoaded' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadConsignmentTracking",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "consignmentCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'loadConsignmentTracking' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadOrderDetails",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadOrderDetails",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'loadOrderDetails' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadOrderList",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "loadOrderList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "pageSize",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "canonicalReference": "",
              "shortType": ""
            },
            {
              "name": "sort",
              "type": "string",
              "canonicalReference": "",
              "shortType": ""
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'loadOrderList' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "resetCancelOrderProcessState",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "resetCancelOrderProcessState",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "OrderFacade",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/order/root",
        "deletedComment": "// TODO:Spartacus - Method 'resetCancelOrderProcessState' was removed from Class 'OrderFacade'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Function",
    "name": "orderFacadeFactory",
    "parameters": [],
    "returnType": "OrderFacade",
    "isDeleted": true,
    "deletedComment": "Function orderFacadeFactory has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_DELETED",
        "changeType": "DELETED",
        "changeKind": "Function",
        "changeLabel": "deleted",
        "changeElementName": "orderFacadeFactory",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "ReplenishmentOrderFacade",
    "members": [
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCancelReplenishmentOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "canonicalReference": "",
            "shortType": ""
          },
          {
            "name": "sort",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class ReplenishmentOrderFacade has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "ReplenishmentOrderFacade",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Function",
    "name": "replenishmentOrderFacadeFactory",
    "parameters": [],
    "returnType": "ReplenishmentOrderFacade",
    "isDeleted": true,
    "deletedComment": "Function replenishmentOrderFacadeFactory has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "FUNCTION_DELETED",
        "changeType": "DELETED",
        "changeKind": "Function",
        "changeLabel": "deleted",
        "changeElementName": "replenishmentOrderFacadeFactory",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryBundleInfoComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configCartEntryBundleInfoService",
            "type": "ConfiguratorCartEntryBundleInfoService",
            "canonicalReference": "@spartacus/product-configurator_common!ConfiguratorCartEntryBundleInfoService:class",
            "shortType": "ConfiguratorCartEntryBundleInfoService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "canonicalReference": "@spartacus/product-configurator_common!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cartItemContext",
            "type": "CartItemContext | undefined",
            "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
            "shortType": "CartItemContext",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "cartItemContext",
        "type": "CartItemContext | undefined"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configCartEntryBundleInfoService",
        "type": "ConfiguratorCartEntryBundleInfoService"
      },
      { "kind": "Property", "name": "hideItems", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isBundleBasedConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDesktop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "lineItems$",
        "type": "Observable<LineItem[]>"
      },
      {
        "kind": "Property",
        "name": "numberOfLineItems$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "orderEntry$",
        "type": "Observable<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "shouldShowButton$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "toggleItems",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  commonConfigUtilsService: CommonConfiguratorUtilsService\n  configCartEntryBundleInfoService: ConfiguratorCartEntryBundleInfoService\n  breakpointService: BreakpointService\n  cartItemContext: CartItemContext | undefined\n)\n",
        "currentStateDoc": "\nconstructor(\n  commonConfigUtilsService: CommonConfiguratorUtilsService\n  configCartEntryBundleInfoService: ConfiguratorCartEntryBundleInfoService\n  breakpointService: BreakpointService\n  translation: TranslationService\n  cartItemContext: CartItemContext | undefined\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configCartEntryBundleInfoService",
              "type": "ConfiguratorCartEntryBundleInfoService",
              "canonicalReference": "@spartacus/product-configurator_common!ConfiguratorCartEntryBundleInfoService:class",
              "shortType": "ConfiguratorCartEntryBundleInfoService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "canonicalReference": "@spartacus/product-configurator_common!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cartItemContext",
              "type": "CartItemContext | undefined",
              "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
              "shortType": "CartItemContext",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configCartEntryBundleInfoService",
              "type": "ConfiguratorCartEntryBundleInfoService",
              "canonicalReference": "@spartacus/product-configurator_common!ConfiguratorCartEntryBundleInfoService:class",
              "shortType": "ConfiguratorCartEntryBundleInfoService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "canonicalReference": "@spartacus/product-configurator_common!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_common!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartItemContext",
              "type": "CartItemContext | undefined",
              "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
              "shortType": "CartItemContext",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_common!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAddToCartButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorCartService",
            "type": "ConfiguratorCartService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
            "shortType": "ConfiguratorCartService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCartService",
        "type": "ConfiguratorCartService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "container$",
        "type": "Observable<{\n        routerData: ConfiguratorRouter.Data;\n        configuration: Configurator.Configuration;\n        hasPendingChanges: boolean;\n    }>"
      },
      {
        "kind": "Method",
        "name": "displayConfirmationMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getButtonResourceKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routerData",
            "type": "ConfiguratorRouter.Data",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouter.Data:interface",
            "shortType": "ConfiguratorRouter.Data",
            "importPath": ""
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "navigateToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "navigateToOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onAddToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "routerData",
            "type": "ConfiguratorRouter.Data",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouter.Data:interface",
            "shortType": "ConfiguratorRouter.Data",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "performNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          },
          {
            "name": "isAdd",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "isOverview",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "showMessage",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routingService: RoutingService\n  configuratorCommonsService: ConfiguratorCommonsService\n  configuratorCartService: ConfiguratorCartService\n  configuratorGroupsService: ConfiguratorGroupsService\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  globalMessageService: GlobalMessageService\n)\n",
        "currentStateDoc": "\nconstructor(\n  routingService: RoutingService\n  configuratorCommonsService: ConfiguratorCommonsService\n  configuratorCartService: ConfiguratorCartService\n  configuratorGroupsService: ConfiguratorGroupsService\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  globalMessageService: GlobalMessageService\n  orderHistoryFacade: OrderHistoryFacade\n  commonConfiguratorUtilsService: CommonConfiguratorUtilsService\n  configUtils: ConfiguratorStorefrontUtilsService\n  intersectionService: IntersectionService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCartService",
              "type": "ConfiguratorCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
              "shortType": "ConfiguratorCartService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCartService",
              "type": "ConfiguratorCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
              "shortType": "ConfiguratorCartService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "commonConfiguratorUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "intersectionService",
              "type": "IntersectionService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!IntersectionService:class",
              "shortType": "IntersectionService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "commonConfiguratorUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "intersectionService",
              "type": "IntersectionService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!IntersectionService:class",
              "shortType": "IntersectionService",
              "importPath": "@spartacus/storefront"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeHeaderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "getConflictMessageKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRequiredMessageKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "groupId", "type": "string" },
      {
        "kind": "Property",
        "name": "groupType",
        "type": "Configurator.GroupType"
      },
      { "kind": "Property", "name": "hasImage", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "image",
        "type": "Configurator.Image | undefined"
      },
      {
        "kind": "Method",
        "name": "isAttributeGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isMultiSelection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRequiredAttributeWithDomain",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSingleSelection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      {
        "kind": "Property",
        "name": "showRequiredMessageForDomainAttribute$",
        "type": "Observable<boolean>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  configUtils: ConfiguratorStorefrontUtilsService\n)\n",
        "currentStateDoc": "\nconstructor(\n  configUtils: ConfiguratorStorefrontUtilsService\n  configuratorCommonsService: ConfiguratorCommonsService\n  configuratorGroupsService: ConfiguratorGroupsService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "newParams": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getConflictMessageKey",
        "changeDesc": true,
        "previousStateDoc": "\ngetConflictMessageKey(\n  groupType: Configurator.GroupType\n): string\n",
        "currentStateDoc": "\ngetConflictMessageKey(): string\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "isAttributeGroup",
        "changeDesc": true,
        "previousStateDoc": "\nisAttributeGroup(\n  groupType: Configurator.GroupType\n): boolean\n",
        "currentStateDoc": "\nisAttributeGroup(): boolean\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionBundleComponent",
    "members": [
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractProductCardParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "disableAllButtons",
            "type": "boolean | null",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "hideRemoveButton",
            "type": "boolean | null",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "Configurator.Value",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorAttributeProductCardComponentOptions"
      },
      {
        "kind": "Property",
        "name": "multipleSelectionValues",
        "type": "SelectionValue[]"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeAttributeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeValueQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDeselect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDeselectAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "preventAction$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "updateMultipleSelectionValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueCode",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "state",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConfigFormUpdateEvent"
      },
      {
        "kind": "Method",
        "name": "updateMultipleSelectionValuesQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "{\n        valueCode: string;\n        quantity: number;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConfigFormUpdateEvent | undefined"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "extractProductCardParameters",
        "changeDesc": true,
        "previousStateDoc": "\nextractProductCardParameters(\n  disableAllButtons: boolean | null\n  hideRemoveButton: boolean | null\n  value: Configurator.Value\n): ConfiguratorAttributeProductCardComponentOptions\n",
        "currentStateDoc": "\nextractProductCardParameters(\n  disableAllButtons: boolean | null\n  hideRemoveButton: boolean | null\n  value: Configurator.Value\n  index: number\n): ConfiguratorAttributeProductCardComponentOptions\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeProductCardComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "keyBoardFocus",
            "type": "KeyboardFocusService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!KeyboardFocusService:class",
            "shortType": "KeyboardFocusService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractQuantityParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorAttributeQuantityComponentOptions"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "handleDeselect",
        "type": "EventEmitter<string>"
      },
      {
        "kind": "Property",
        "name": "handleQuantity",
        "type": "EventEmitter<QuantityUpdateEvent>"
      },
      {
        "kind": "Property",
        "name": "handleSelect",
        "type": "EventEmitter<string>"
      },
      {
        "kind": "Method",
        "name": "hasPriceDisplay",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isProductCardSelected",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isValueCodeDefined",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueCode",
            "type": "string | null | undefined",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "keyBoardFocus",
        "type": "KeyboardFocusService"
      },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleDeselect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleSelect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productCardOptions",
        "type": "ConfiguratorAttributeProductCardComponentOptions"
      },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Property",
        "name": "showDeselectionNotPossible",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "showDeselectionNotPossibleMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "showQuantity", "type": "boolean" },
      {
        "kind": "Method",
        "name": "transformToProductType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value | undefined",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "Product"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  productService: ProductService\n  keyBoardFocus: KeyboardFocusService\n)\n",
        "currentStateDoc": "\nconstructor(\n  productService: ProductService\n  keyBoardFocus: KeyboardFocusService\n  translation: TranslationService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "productService",
              "type": "ProductService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "keyBoardFocus",
              "type": "KeyboardFocusService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!KeyboardFocusService:class",
              "shortType": "KeyboardFocusService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "productService",
              "type": "ProductService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "keyBoardFocus",
              "type": "KeyboardFocusService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!KeyboardFocusService:class",
              "shortType": "KeyboardFocusService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBundleComponent",
    "members": [
      {
        "kind": "Method",
        "name": "extractProductCardParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorAttributeProductCardComponentOptions"
      },
      {
        "kind": "Method",
        "name": "getFocusIdOfNearestValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentValue",
            "type": "Configurator.Value",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "extractProductCardParameters",
        "changeDesc": true,
        "previousStateDoc": "\nextractProductCardParameters(\n  value: Configurator.Value\n): ConfiguratorAttributeProductCardComponentOptions\n",
        "currentStateDoc": "\nextractProductCardParameters(\n  value: Configurator.Value\n  index: number\n): ConfiguratorAttributeProductCardComponentOptions\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithConfigurator>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "checkoutFacade",
            "type": "CheckoutFacade",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configuratorUtilsService",
            "type": "ConfiguratorUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
            "shortType": "ConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "activeCartHasIssues",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutFacade",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "configurationNeedsReading",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configurationState",
            "type": "StateUtils.LoaderState<Configurator.Configuration>",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "configuratorUtilsService",
        "type": "ConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "isConfigurationCreated",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "removeCartBoundConfigurations",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithConfigurator>"
      },
      {
        "kind": "Method",
        "name": "updateCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithConfigurator>\n  activeCartService: ActiveCartService\n  commonConfigUtilsService: CommonConfiguratorUtilsService\n  checkoutFacade: CheckoutFacade\n  userIdService: UserIdService\n  configuratorUtilsService: ConfiguratorUtilsService\n)\n",
        "currentStateDoc": "\nconstructor(\n  store: Store<StateWithConfigurator>\n  activeCartService: ActiveCartFacade\n  commonConfigUtilsService: CommonConfiguratorUtilsService\n  checkoutQueryFacade: CheckoutQueryFacade\n  userIdService: UserIdService\n  configuratorUtilsService: ConfiguratorUtilsService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithConfigurator>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "checkoutFacade",
              "type": "CheckoutFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CheckoutFacade:class",
              "shortType": "CheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configuratorUtilsService",
              "type": "ConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
              "shortType": "ConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "newParams": [
            {
              "name": "store",
              "type": "Store<StateWithConfigurator>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "checkoutQueryFacade",
              "type": "CheckoutQueryFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CheckoutQueryFacade:class",
              "shortType": "CheckoutQueryFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configuratorUtilsService",
              "type": "ConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
              "shortType": "ConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutFacade",
              "type": "CheckoutFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CheckoutFacade:class",
              "shortType": "CheckoutFacade",
              "importPath": "@spartacus/checkout/root"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "checkoutQueryFacade",
              "type": "CheckoutQueryFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CheckoutQueryFacade:class",
              "shortType": "CheckoutQueryFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "checkoutFacade",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "checkoutFacade",
          "type": "CheckoutFacade"
        },
        "apiElementName": "ConfiguratorCartService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased",
        "deletedComment": "// TODO:Spartacus - Property 'checkoutFacade' was removed from Class 'ConfiguratorCartService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorCommonsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithConfigurator>",
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configuratorCartService",
            "type": "ConfiguratorCartService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
            "shortType": "ConfiguratorCartService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configuratorUtils",
            "type": "ConfiguratorUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
            "shortType": "ConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configuratorCartService",
        "type": "ConfiguratorCartService"
      },
      {
        "kind": "Property",
        "name": "configuratorUtils",
        "type": "ConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "getConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getConfigurationWithOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getOrCreateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getOrCreateConfigurationForProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "hasConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasConflicts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "hasPendingChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isConfigurationLoading",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "removeConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeObsoleteProductBoundConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithConfigurator>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ownerKey",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "changedAttribute",
            "type": "Configurator.Attribute",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "updateType",
            "type": "Configurator.UpdateType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateType:enum",
            "shortType": "Configurator.UpdateType",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  store: Store<StateWithConfigurator>\n  commonConfigUtilsService: CommonConfiguratorUtilsService\n  configuratorCartService: ConfiguratorCartService\n  activeCartService: ActiveCartService\n  configuratorUtils: ConfiguratorUtilsService\n)\n",
        "currentStateDoc": "\nconstructor(\n  store: Store<StateWithConfigurator>\n  commonConfigUtilsService: CommonConfiguratorUtilsService\n  configuratorCartService: ConfiguratorCartService\n  activeCartService: ActiveCartFacade\n  configuratorUtils: ConfiguratorUtilsService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "store",
              "type": "Store<StateWithConfigurator>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorCartService",
              "type": "ConfiguratorCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
              "shortType": "ConfiguratorCartService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configuratorUtils",
              "type": "ConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
              "shortType": "ConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "newParams": [
            {
              "name": "store",
              "type": "Store<StateWithConfigurator>",
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorCartService",
              "type": "ConfiguratorCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
              "shortType": "ConfiguratorCartService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "configuratorUtils",
              "type": "ConfiguratorUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
              "shortType": "ConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "removeObsoleteProductBoundConfiguration",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "removeObsoleteProductBoundConfiguration",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "owner",
              "type": "CommonConfigurator.Owner",
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
              "shortType": "CommonConfigurator.Owner"
            }
          ],
          "returnType": "void"
        },
        "apiElementName": "ConfiguratorCommonsService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased",
        "deletedComment": "// TODO:Spartacus - Method 'removeObsoleteProductBoundConfiguration' was removed from Class 'ConfiguratorCommonsService'.",
        "migrationComment": "Consult the migration documentation on how to deal with that."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorExitButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "windowRef",
            "type": "WindowRef",
            "canonicalReference": "@spartacus/product-configurator_rulebased!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Method",
        "name": "exitConfiguration",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isDesktop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isMobile",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "windowRef", "type": "WindowRef" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  productService: ProductService\n  routingService: RoutingService\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  configuratorCommonsService: ConfiguratorCommonsService\n  breakpointService: BreakpointService\n  windowRef: WindowRef\n)\n",
        "currentStateDoc": "\nconstructor(\n  productService: ProductService\n  routingService: RoutingService\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  configuratorCommonsService: ConfiguratorCommonsService\n  breakpointService: BreakpointService\n  windowRef: WindowRef\n  location: Location\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "productService",
              "type": "ProductService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "windowRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/product-configurator_rulebased!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "productService",
              "type": "ProductService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "windowRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/product-configurator_rulebased!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            },
            {
              "name": "location",
              "type": "Location",
              "canonicalReference": "@angular/common!Location:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "location",
              "type": "Location",
              "canonicalReference": "@angular/common!Location:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "product$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "product$",
          "type": "Observable<Product>"
        },
        "apiElementName": "ConfiguratorExitButtonComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased",
        "deletedComment": "// TODO:Spartacus - Property 'product$' was removed from Class 'ConfiguratorExitButtonComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupMenuComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configCommonsService",
            "type": "ConfiguratorCommonsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configGroupMenuService",
            "type": "ConfiguratorGroupMenuService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
            "shortType": "ConfiguratorGroupMenuService",
            "importPath": ""
          },
          {
            "name": "directionService",
            "type": "DirectionService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
            "shortType": "DirectionService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "click",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "COMPLETE", "type": "string" },
      {
        "kind": "Method",
        "name": "condenseGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group[]"
      },
      {
        "kind": "Property",
        "name": "configCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configGroupMenuService",
        "type": "ConfiguratorGroupMenuService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "containsSelectedGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createAriaControls",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentGroup$",
        "type": "Observable<Configurator.Group>"
      },
      {
        "kind": "Property",
        "name": "directionService",
        "type": "DirectionService"
      },
      {
        "kind": "Property",
        "name": "displayedGroups$",
        "type": "Observable<Configurator.Group[]>"
      },
      {
        "kind": "Property",
        "name": "displayedParentGroup$",
        "type": "Observable<Configurator.Group | undefined>"
      },
      { "kind": "Property", "name": "ERROR", "type": "string" },
      {
        "kind": "Method",
        "name": "getCondensedParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parentGroup",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getConflictNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getGroupStatusStyles",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getTabIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "groups",
        "type": "QueryList<ElementRef<HTMLElement>>"
      },
      {
        "kind": "Property",
        "name": "hamburgerMenuService",
        "type": "HamburgerMenuService"
      },
      {
        "kind": "Method",
        "name": "hasSubGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isBackNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConflictGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isForwardsNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLTRDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRTLDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "navigateUp",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      },
      {
        "kind": "Method",
        "name": "setFocusForMainMenu",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentGroupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFocusForSubGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "switchGroupOnArrowPress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          },
          {
            "name": "groupIndex",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "targetGroup",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroup",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "WARNING", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  configCommonsService: ConfiguratorCommonsService\n  configuratorGroupsService: ConfiguratorGroupsService\n  hamburgerMenuService: HamburgerMenuService\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  configUtils: ConfiguratorStorefrontUtilsService\n  configGroupMenuService: ConfiguratorGroupMenuService\n  directionService: DirectionService\n)\n",
        "currentStateDoc": "\nconstructor(\n  configCommonsService: ConfiguratorCommonsService\n  configuratorGroupsService: ConfiguratorGroupsService\n  hamburgerMenuService: HamburgerMenuService\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  configUtils: ConfiguratorStorefrontUtilsService\n  configGroupMenuService: ConfiguratorGroupMenuService\n  directionService: DirectionService\n  translation: TranslationService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "configCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configGroupMenuService",
              "type": "ConfiguratorGroupMenuService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
              "shortType": "ConfiguratorGroupMenuService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "configCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configGroupMenuService",
              "type": "ConfiguratorGroupMenuService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
              "shortType": "ConfiguratorGroupMenuService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupTitleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "displayedGroup$",
        "type": "Observable<Configurator.Group>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "configuration$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "configuration$",
          "type": "Observable<Configurator.Configuration>"
        },
        "apiElementName": "ConfiguratorGroupTitleComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased",
        "deletedComment": "// TODO:Spartacus - Property 'configuration$' was removed from Class 'ConfiguratorGroupTitleComponent'.",
        "migrationComment": "Consult the migration documentation on how to deal with that."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewBundleAttributeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeOverview",
        "type": "Configurator.AttributeOverview"
      },
      {
        "kind": "Method",
        "name": "displayPrice",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayQuantity",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "getProductPrimaryImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ImageGroup | ImageGroup[] | undefined"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      { "kind": "Property", "name": "productService", "type": "ProductService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  productService: ProductService\n)\n",
        "currentStateDoc": "\nconstructor(\n  productService: ProductService\n  translation: TranslationService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "productService",
              "type": "ProductService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "productService",
              "type": "ProductService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewNotificationBannerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Method",
        "name": "countIssuesInGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group"
          }
        ],
        "returnType": "number"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "numberOfIssues$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "countIssuesInGroup",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "countIssuesInGroup",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group"
            }
          ],
          "returnType": "number"
        },
        "apiElementName": "ConfiguratorOverviewNotificationBannerComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased",
        "deletedComment": "// TODO:Spartacus - Method 'countIssuesInGroup' was removed from Class 'ConfiguratorOverviewNotificationBannerComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorTabBarComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "isOverviewPage$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n)\n",
        "currentStateDoc": "\nconstructor(\n  configRouterExtractorService: ConfiguratorRouterExtractorService\n  configuratorCommonsService: ConfiguratorCommonsService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            }
          ],
          "newParams": [
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "compileAttributeIncomplete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Configuration:interface",
            "shortType": "OccConfigurator.Configuration",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "Configurator.Configuration",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Configuration"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceAttribute",
            "type": "OccConfigurator.Attribute",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Attribute:interface",
            "shortType": "OccConfigurator.Attribute",
            "importPath": ""
          },
          {
            "name": "attributeList",
            "type": "Configurator.Attribute[]",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertAttributeType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "OccConfigurator.UiType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.UiType:enum",
            "shortType": "OccConfigurator.UiType",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.UiType"
      },
      {
        "kind": "Method",
        "name": "convertGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Group:interface",
            "shortType": "OccConfigurator.Group",
            "importPath": ""
          },
          {
            "name": "groupList",
            "type": "Configurator.Group[]",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "flatGroupList",
            "type": "Configurator.Group[]",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "OccConfigurator.GroupType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.GroupType:enum",
            "shortType": "OccConfigurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.GroupType"
      },
      {
        "kind": "Method",
        "name": "convertImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "occImage",
            "type": "OccConfigurator.Image",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Image:interface",
            "shortType": "OccConfigurator.Image",
            "importPath": ""
          },
          {
            "name": "images",
            "type": "Configurator.Image[]",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Image:interface",
            "shortType": "Configurator.Image",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertImageFormatType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formatType",
            "type": "OccConfigurator.ImageFormatType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.ImageFormatType:enum",
            "shortType": "OccConfigurator.ImageFormatType",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.ImageFormatType"
      },
      {
        "kind": "Method",
        "name": "convertImageType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "imageType",
            "type": "OccConfigurator.ImageType",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.ImageType:enum",
            "shortType": "OccConfigurator.ImageType",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.ImageType"
      },
      {
        "kind": "Method",
        "name": "convertValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "occValue",
            "type": "OccConfigurator.Value",
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Value:interface",
            "shortType": "OccConfigurator.Value",
            "importPath": ""
          },
          {
            "name": "values",
            "type": "Configurator.Value[]",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "name",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "setGroupDescription",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSelectedSingleValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  config: OccConfig\n  translation: TranslationService\n)\n",
        "currentStateDoc": "\nconstructor(\n  config: OccConfig\n  translation: TranslationService\n  uiSettingsConfig: ConfiguratorUISettingsConfig\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "config",
              "type": "OccConfig",
              "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfig:class",
              "shortType": "OccConfig",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "config",
              "type": "OccConfig",
              "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfig:class",
              "shortType": "OccConfig",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "uiSettingsConfig",
              "type": "ConfiguratorUISettingsConfig",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "uiSettingsConfig",
              "type": "ConfiguratorUISettingsConfig",
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorEventListener",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCartService",
            "type": "ConfiguratorCartService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
            "shortType": "ConfiguratorCartService"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/product-configurator_rulebased!EventService:class",
            "shortType": "EventService"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configuratorCartService",
        "type": "ConfiguratorCartService"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onPlaceOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "isDeleted": true,
    "deletedComment": "Class RulebasedConfiguratorEventListener has been removed and is no longer part of the public API.",
    "migrationComment": "Please use 'ConfiguratorRouterListener' instead",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "RulebasedConfiguratorEventListener",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_configuratorEventListener",
            "type": "RulebasedConfiguratorEventListener",
            "canonicalReference": "@spartacus/product-configurator_rulebased!RulebasedConfiguratorEventListener:class",
            "shortType": "RulebasedConfiguratorEventListener"
          }
        ]
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class RulebasedConfiguratorEventModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "RulebasedConfiguratorEventModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/setup",
    "kind": "Variable",
    "name": "defaultB2bCheckoutConfig",
    "type": "CheckoutConfig",
    "isDeleted": true,
    "deletedComment": "Variable defaultB2bCheckoutConfig has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_DELETED",
        "changeType": "DELETED",
        "changeKind": "Variable",
        "changeLabel": "deleted",
        "changeElementName": "defaultB2bCheckoutConfig",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ActiveCartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "mapProductsToOrderEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          }
        ],
        "returnType": "OrderEntry[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ActiveCartOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  actionsSubject: ActionsSubject\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  importInfoService: ProductImportInfoService\n  activeCartFacade: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "importInfoService",
              "type": "ProductImportInfoService",
              "canonicalReference": "@spartacus/cart_base_components!ProductImportInfoService:class",
              "shortType": "ProductImportInfoService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "actionsSubject",
              "type": "ActionsSubject",
              "canonicalReference": "@ngrx/store!ActionsSubject:class",
              "shortType": "ActionsSubject",
              "importPath": "@ngrx/store"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "importInfoService",
              "type": "ProductImportInfoService",
              "canonicalReference": "@spartacus/cart_base_components!ProductImportInfoService:class",
              "shortType": "ProductImportInfoService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "actionsSubject",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "actionsSubject",
          "type": "ActionsSubject"
        },
        "apiElementName": "ActiveCartOrderEntriesContext",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'actionsSubject' was removed from Class 'ActiveCartOrderEntriesContext'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "ActiveCartOrderEntriesContext",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'ActiveCartOrderEntriesContext'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddedToCartDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "addedEntryWasMerged$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "dialog", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "dismissModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "entry$",
        "type": "Observable<OrderEntry>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getQuantityControl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<FormControl>"
      },
      {
        "kind": "Method",
        "name": "getQuantityFormControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "loaded$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "modalIsOpen", "type": "boolean" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "numberOfEntriesBeforeAdd",
        "type": "number"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      { "kind": "Property", "name": "quantity", "type": "number" },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddedToCartDialogComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  modalService: ModalService\n  cartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  modalService: ModalService\n  activeCartFacade: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/storefront!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/cart_base_components!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "cartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "AddedToCartDialogComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'cartService' was removed from Class 'AddedToCartDialogComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "entry$",
        "changeDesc": true,
        "oldType": "Observable<OrderEntry>",
        "newType": "Observable<OrderEntry | undefined>",
        "previousStateDoc": "entry$: Observable<OrderEntry>",
        "currentStateDoc": "entry$: Observable<OrderEntry | undefined>"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnInit",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "AddedToCartDialogComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Method 'ngOnInit' was removed from Class 'AddedToCartDialogComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "numberOfEntriesBeforeAdd",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "numberOfEntriesBeforeAdd",
          "type": "number"
        },
        "apiElementName": "AddedToCartDialogComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'numberOfEntriesBeforeAdd' was removed from Class 'AddedToCartDialogComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "AddOrderEntriesContext",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": ""
          },
          {
            "name": "savedCartInfo",
            "type": "{\n        name: string;\n        description: string;\n    }",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "OrderEntriesSource"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "AddOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressBookComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "AddressBookComponentService",
            "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
            "shortType": "AddressBookComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addAddressButtonHandle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAddressCancel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAddressSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "addresses$",
        "type": "Observable<Address[]>"
      },
      {
        "kind": "Property",
        "name": "addressesStateLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "cancelCard",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cards$", "type": "Observable<Card[]>" },
      { "kind": "Property", "name": "currentAddress", "type": "Address" },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressButtonHandle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressCancel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "editCard", "type": "string" },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{\n        textBold: string;\n        text: string[];\n        actions: {\n            name: string;\n            event: string;\n        }[];\n        header: string;\n        deleteMsg: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "AddressBookComponentService"
      },
      {
        "kind": "Method",
        "name": "setAddressAsDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEdit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "showAddAddressForm", "type": "boolean" },
      { "kind": "Property", "name": "showEditAddressForm", "type": "boolean" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  service: AddressBookComponentService\n  translation: TranslationService\n)\n",
        "currentStateDoc": "\nconstructor(\n  service: AddressBookComponentService\n  translation: TranslationService\n  globalMessageService: GlobalMessageService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "service",
              "type": "AddressBookComponentService",
              "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
              "shortType": "AddressBookComponentService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "service",
              "type": "AddressBookComponentService",
              "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
              "shortType": "AddressBookComponentService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getCardContent",
        "changeDesc": true,
        "previousStateDoc": "\ngetCardContent(\n  address: Address\n): Observable<{\n        textBold: string;\n        text: string[];\n        actions: {\n            name: string;\n            event: string;\n        }[];\n        header: string;\n        deleteMsg: string;\n    }>\n",
        "currentStateDoc": "\ngetCardContent(\n  address: Address\n): Observable<{\n        role: string;\n        textBold: string;\n        text: string[];\n        actions: {\n            name: string;\n            event: string;\n        }[];\n        header: string;\n        deleteMsg: string;\n        label: string;\n    }>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "setAddressAsDefault",
        "changeDesc": true,
        "previousStateDoc": "\nsetAddressAsDefault(\n  addressId: string\n): void\n",
        "currentStateDoc": "\nsetAddressAsDefault(\n  address: Address\n): void\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToCartComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "component",
            "type": "CmsComponentData<CmsAddToCartComponent>",
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "addToCartForm", "type": "FormGroup" },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsAddToCartComponent>"
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "getInventory",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "hasStock", "type": "boolean" },
      { "kind": "Property", "name": "inventoryThreshold", "type": "boolean" },
      { "kind": "Property", "name": "maxQuantity", "type": "number" },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "numberOfEntriesBeforeAdd",
        "type": "number"
      },
      {
        "kind": "Method",
        "name": "openModal",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product", "type": "Product" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      {
        "kind": "Method",
        "name": "setStockInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "showInventory$",
        "type": "Observable<boolean | undefined> | undefined"
      },
      { "kind": "Property", "name": "showQuantity", "type": "boolean" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "updateCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components/add-to-cart",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddToCartComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components/add-to-cart",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  modalService: ModalService\n  currentProductService: CurrentProductService\n  cd: ChangeDetectorRef\n  activeCartService: ActiveCartService\n  component: CmsComponentData<CmsAddToCartComponent>\n)\n",
        "currentStateDoc": "\nconstructor(\n  currentProductService: CurrentProductService\n  cd: ChangeDetectorRef\n  activeCartService: ActiveCartFacade\n  component: CmsComponentData<CmsAddToCartComponent>\n  eventService: EventService\n  productListItemContext: ProductListItemContext | undefined\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/storefront!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "currentProductService",
              "type": "CurrentProductService",
              "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
              "shortType": "CurrentProductService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsAddToCartComponent>",
              "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "currentProductService",
              "type": "CurrentProductService",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!CurrentProductService:class",
              "shortType": "CurrentProductService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsAddToCartComponent>",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productListItemContext",
              "type": "ProductListItemContext | undefined",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ProductListItemContext:class",
              "shortType": "ProductListItemContext",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/storefront!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productListItemContext",
              "type": "ProductListItemContext | undefined",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ProductListItemContext:class",
              "shortType": "ProductListItemContext",
              "importPath": "@spartacus/storefront"
            }
          ]
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  modalService: ModalService\n  currentProductService: CurrentProductService\n  cd: ChangeDetectorRef\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  currentProductService: CurrentProductService\n  cd: ChangeDetectorRef\n  activeCartService: ActiveCartFacade\n  component: CmsComponentData<CmsAddToCartComponent>\n  eventService: EventService\n  productListItemContext: ProductListItemContext | undefined\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/storefront!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "currentProductService",
              "type": "CurrentProductService",
              "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
              "shortType": "CurrentProductService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "currentProductService",
              "type": "CurrentProductService",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!CurrentProductService:class",
              "shortType": "CurrentProductService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsAddToCartComponent>",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productListItemContext",
              "type": "ProductListItemContext | undefined",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ProductListItemContext:class",
              "shortType": "ProductListItemContext",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/storefront!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsAddToCartComponent>",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productListItemContext",
              "type": "ProductListItemContext | undefined",
              "canonicalReference": "@spartacus/cart_base_components_add-to-cart!ProductListItemContext:class",
              "shortType": "ProductListItemContext",
              "importPath": "@spartacus/storefront"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "modalRef",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "modalRef",
          "type": "ModalRef"
        },
        "apiElementName": "AddToCartComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'modalRef' was removed from Class 'AddToCartComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "modalService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "modalService",
          "type": "ModalService"
        },
        "apiElementName": "AddToCartComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'modalService' was removed from Class 'AddToCartComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "numberOfEntriesBeforeAdd",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "numberOfEntriesBeforeAdd",
          "type": "number"
        },
        "apiElementName": "AddToCartComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'numberOfEntriesBeforeAdd' was removed from Class 'AddToCartComponent'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "openModal",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "openModal",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "AddToCartComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Method 'openModal' was removed from Class 'AddToCartComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToCartModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components/add-to-cart",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddToCartModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components/add-to-cart",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToWishListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "wishListService",
            "type": "WishListService",
            "canonicalReference": "@spartacus/storefront!WishListService:class",
            "shortType": "WishListService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "getProductInWishList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderEntry"
      },
      { "kind": "Property", "name": "hasStock", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setStockInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userLoggedIn$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "wishListEntries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "wishListService",
        "type": "WishListService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/components/add-to-wishlist",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddToWishListComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/components/add-to-wishlist",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  wishListService: WishListService\n  currentProductService: CurrentProductService\n  authService: AuthService\n)\n",
        "currentStateDoc": "\nconstructor(\n  wishListFacade: WishListFacade\n  currentProductService: CurrentProductService\n  authService: AuthService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "wishListService",
              "type": "WishListService",
              "canonicalReference": "@spartacus/storefront!WishListService:class",
              "shortType": "WishListService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "currentProductService",
              "type": "CurrentProductService",
              "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
              "shortType": "CurrentProductService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/storefront!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "wishListFacade",
              "type": "WishListFacade",
              "canonicalReference": "@spartacus/cart_wish-list_components_add-to-wishlist!WishListFacade:class",
              "shortType": "WishListFacade",
              "importPath": "@spartacus/cart/wish-list/root"
            },
            {
              "name": "currentProductService",
              "type": "CurrentProductService",
              "canonicalReference": "@spartacus/cart_wish-list_components_add-to-wishlist!CurrentProductService:class",
              "shortType": "CurrentProductService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/cart_wish-list_components_add-to-wishlist!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "wishListService",
              "type": "WishListService",
              "canonicalReference": "@spartacus/storefront!WishListService:class",
              "shortType": "WishListService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "wishListFacade",
              "type": "WishListFacade",
              "canonicalReference": "@spartacus/cart_wish-list_components_add-to-wishlist!WishListFacade:class",
              "shortType": "WishListFacade",
              "importPath": "@spartacus/cart/wish-list/root"
            }
          ]
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getProductInWishList",
        "changeDesc": true,
        "previousStateDoc": "\ngetProductInWishList(\n  product: Product\n  entries: OrderEntry[]\n): OrderEntry\n",
        "currentStateDoc": "\ngetProductInWishList(\n  product: Product\n  entries: OrderEntry[]\n): OrderEntry | undefined\n"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "wishListService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "wishListService",
          "type": "WishListService"
        },
        "apiElementName": "AddToWishListComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'wishListService' was removed from Class 'AddToWishListComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToWishListModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/components/add-to-wishlist",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AddToWishListModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/components/add-to-wishlist",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AmendOrderActionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendOrderForm", "type": "FormGroup" },
      { "kind": "Property", "name": "backRoute", "type": "string" },
      {
        "kind": "Method",
        "name": "continue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "forwardRoute", "type": "string" },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "styles", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AmendOrderActionsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AmendOrderActionsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AmendOrderActionsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AmendOrderItemsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AmendOrderItemsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "AmendOrderType",
    "members": ["CANCEL", "RETURN"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "AmendOrderType",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AppliedCouponsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartVoucherService",
            "type": "CartVoucherService",
            "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
            "shortType": "CartVoucherService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cartIsLoading", "type": "boolean" },
      {
        "kind": "Property",
        "name": "cartVoucherService",
        "type": "CartVoucherService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isReadOnly", "type": "boolean" },
      {
        "kind": "Method",
        "name": "removeVoucher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "voucherId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sortedVouchers", "type": "Voucher[]" },
      { "kind": "Property", "name": "vouchers", "type": "Voucher[]" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AppliedCouponsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cartVoucherService: CartVoucherService\n)\n",
        "currentStateDoc": "\nconstructor(\n  cartVoucherService: CartVoucherFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherService",
              "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
              "shortType": "CartVoucherService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherFacade",
              "canonicalReference": "@spartacus/cart_base_components!CartVoucherFacade:class",
              "shortType": "CartVoucherFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherService",
              "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
              "shortType": "CartVoucherService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherFacade",
              "canonicalReference": "@spartacus/cart_base_components!CartVoucherFacade:class",
              "shortType": "CartVoucherFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "cartVoucherService",
        "changeDesc": true,
        "oldType": "CartVoucherService",
        "newType": "CartVoucherFacade",
        "previousStateDoc": "cartVoucherService: CartVoucherService",
        "currentStateDoc": "cartVoucherService: CartVoucherFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderConfirmationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderConfirmationComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderConfirmationModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderConfirmationModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrderModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrReturnItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "entries", "type": "OrderEntry[]" },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Method",
        "name": "getControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getItemPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Price"
      },
      {
        "kind": "Method",
        "name": "getMaxAmendQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isCancellation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "isConfirmation", "type": "boolean" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      {
        "kind": "Method",
        "name": "setAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CancelOrReturnItemsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartComponentModule",
    "members": [],
    "isDeleted": true,
    "deletedComment": "Class CartComponentModule has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CartComponentModule",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartCouponComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartVoucherService",
            "type": "CartVoucherService",
            "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
            "shortType": "CartVoucherService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "customerCouponService",
            "type": "CustomerCouponService",
            "canonicalReference": "@spartacus/storefront!CustomerCouponService:class",
            "shortType": "CustomerCouponService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "applicableCoupons",
        "type": "CustomerCoupon[]"
      },
      {
        "kind": "Method",
        "name": "applyCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponId",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "applyVoucher",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      { "kind": "Property", "name": "cartId", "type": "string" },
      {
        "kind": "Property",
        "name": "cartIsLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "cartVoucherService",
        "type": "CartVoucherService"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "couponBoxIsActive", "type": "boolean" },
      { "kind": "Property", "name": "couponForm", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "customerCouponService",
        "type": "CustomerCouponService"
      },
      {
        "kind": "Method",
        "name": "disableClose",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "formBuilder", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getApplicableCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "canonicalReference": "@spartacus/storefront!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          },
          {
            "name": "coupons",
            "type": "CustomerCoupon[]",
            "canonicalReference": "@spartacus/storefront!CustomerCoupon:interface",
            "shortType": "CustomerCoupon",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ignoreCloseEvent", "type": "boolean" },
      {
        "kind": "Property",
        "name": "MAX_CUSTOMER_COUPON_PAGE",
        "type": "number"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "error",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "success",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartCouponComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cartVoucherService: CartVoucherService\n  formBuilder: FormBuilder\n  customerCouponService: CustomerCouponService\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  cartVoucherService: CartVoucherFacade\n  formBuilder: FormBuilder\n  customerCouponService: CustomerCouponService\n  activeCartService: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherService",
              "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
              "shortType": "CartVoucherService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "formBuilder",
              "type": "FormBuilder",
              "canonicalReference": "@angular/forms!FormBuilder:class",
              "shortType": "FormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "customerCouponService",
              "type": "CustomerCouponService",
              "canonicalReference": "@spartacus/storefront!CustomerCouponService:class",
              "shortType": "CustomerCouponService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherFacade",
              "canonicalReference": "@spartacus/cart_base_components!CartVoucherFacade:class",
              "shortType": "CartVoucherFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "formBuilder",
              "type": "FormBuilder",
              "canonicalReference": "@angular/forms!FormBuilder:class",
              "shortType": "FormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "customerCouponService",
              "type": "CustomerCouponService",
              "canonicalReference": "@spartacus/cart_base_components!CustomerCouponService:class",
              "shortType": "CustomerCouponService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherService",
              "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
              "shortType": "CartVoucherService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "cartVoucherService",
              "type": "CartVoucherFacade",
              "canonicalReference": "@spartacus/cart_base_components!CartVoucherFacade:class",
              "shortType": "CartVoucherFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "cartVoucherService",
        "changeDesc": true,
        "oldType": "CartVoucherService",
        "newType": "CartVoucherFacade",
        "previousStateDoc": "cartVoucherService: CartVoucherService",
        "currentStateDoc": "cartVoucherService: CartVoucherFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartCouponModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartCouponModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "loggedIn", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "saveForLater",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "selectiveCartEnabled", "type": "boolean" },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartDetailsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  selectiveCartService: SelectiveCartService\n  authService: AuthService\n  routingService: RoutingService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  selectiveCartService: SelectiveCartFacade\n  authService: AuthService\n  routingService: RoutingService\n  cartConfig: CartConfigService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/storefront!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "canonicalReference": "@spartacus/cart_base_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/cart_base_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartConfig",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/cart_base_components!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/cart/base/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cartConfig",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/cart_base_components!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/cart/base/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "selectiveCartService",
        "changeDesc": true,
        "oldType": "SelectiveCartService",
        "newType": "SelectiveCartFacade",
        "previousStateDoc": "selectiveCartService: SelectiveCartService",
        "currentStateDoc": "selectiveCartService: SelectiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartDetailsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartDetailsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartItemContextSource",
            "type": "CartItemContextSource",
            "canonicalReference": "@spartacus/storefront!CartItemContextSource:class",
            "shortType": "CartItemContextSource",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartItemContextSource",
        "type": "CartItemContextSource"
      },
      {
        "kind": "Property",
        "name": "CartOutlets",
        "type": "typeof CartOutlets"
      },
      { "kind": "Property", "name": "compact", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isProductOutOfStock",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "item", "type": "OrderEntry" },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "options",
        "type": "CartItemComponentOptions"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      { "kind": "Property", "name": "quantityControl", "type": "FormControl" },
      { "kind": "Property", "name": "readonly", "type": "boolean" },
      {
        "kind": "Method",
        "name": "removeItem",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartItemComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "isProductOutOfStock",
        "changeDesc": true,
        "previousStateDoc": "\nisProductOutOfStock(\n  product: any\n): boolean\n",
        "currentStateDoc": "\nisProductOutOfStock(\n  product: any\n): any\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "CartItemComponentOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "isSaveForLater",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "optionalBtn", "type": "any" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CartItemComponentOptions",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemContext",
    "members": [
      { "kind": "Property", "name": "compact$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "item$", "type": "Observable<OrderEntry>" },
      {
        "kind": "Property",
        "name": "location$",
        "type": "Observable<PromotionLocation>"
      },
      {
        "kind": "Property",
        "name": "options$",
        "type": "Observable<CartItemComponentOptions>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      },
      { "kind": "Property", "name": "readonly$", "type": "Observable<boolean>" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartItemContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemContextSource",
    "members": [
      {
        "kind": "Property",
        "name": "compact$",
        "type": "ReplaySubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "item$",
        "type": "ReplaySubject<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "location$",
        "type": "ReplaySubject<PromotionLocation>"
      },
      {
        "kind": "Property",
        "name": "options$",
        "type": "ReplaySubject<CartItemComponentOptions>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "ReplaySubject<FormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "ReplaySubject<boolean>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartItemContextSource",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemListComponent",
    "members": [
      { "kind": "Property", "name": "_items", "type": "OrderEntry[]" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "canonicalReference": "@spartacus/storefront!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "canonicalReference": "@spartacus/storefront!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cartId", "type": "string" },
      {
        "kind": "Method",
        "name": "createForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<FormGroup>"
      },
      {
        "kind": "Method",
        "name": "getControlName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "hasHeader", "type": "boolean" },
      { "kind": "Property", "name": "items", "type": "OrderEntry[]" },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "options",
        "type": "CartItemComponentOptions"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      { "kind": "Property", "name": "readonly", "type": "boolean" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resolveItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "items",
            "type": "OrderEntry[]",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "userId", "type": "string" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartItemListComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  selectiveCartService: SelectiveCartService\n  userIdService: UserIdService\n  multiCartService: MultiCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  selectiveCartService: SelectiveCartFacade\n  userIdService: UserIdService\n  multiCartService: MultiCartFacade\n  cd: ChangeDetectorRef\n  outlet: OutletContextData<ItemListContext> | undefined\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/storefront!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/storefront!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "canonicalReference": "@spartacus/cart_base_components!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "outlet",
              "type": "OutletContextData<ItemListContext> | undefined",
              "canonicalReference": "@spartacus/cart_base_components!OutletContextData:class",
              "shortType": "OutletContextData",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartService",
              "canonicalReference": "@spartacus/storefront!MultiCartService:class",
              "shortType": "MultiCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "multiCartService",
              "type": "MultiCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!MultiCartFacade:class",
              "shortType": "MultiCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cd",
              "type": "ChangeDetectorRef",
              "canonicalReference": "@angular/core!ChangeDetectorRef:class",
              "shortType": "ChangeDetectorRef",
              "importPath": "@angular/core"
            },
            {
              "name": "outlet",
              "type": "OutletContextData<ItemListContext> | undefined",
              "canonicalReference": "@spartacus/cart_base_components!OutletContextData:class",
              "shortType": "OutletContextData",
              "importPath": "@spartacus/storefront"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getControl",
        "changeDesc": true,
        "previousStateDoc": "\ngetControl(\n  item: OrderEntry\n): Observable<FormGroup>\n",
        "currentStateDoc": "\ngetControl(\n  item: OrderEntry\n): Observable<FormGroup> | undefined\n"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "multiCartService",
        "changeDesc": true,
        "oldType": "MultiCartService",
        "newType": "MultiCartFacade",
        "previousStateDoc": "multiCartService: MultiCartService",
        "currentStateDoc": "multiCartService: MultiCartFacade"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "selectiveCartService",
        "changeDesc": true,
        "oldType": "SelectiveCartService",
        "newType": "SelectiveCartFacade",
        "previousStateDoc": "selectiveCartService: SelectiveCartService",
        "currentStateDoc": "selectiveCartService: SelectiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData"
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Method",
        "name": "getResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Method",
        "name": "mapMessages",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "action",
            "type": "CartActions.CartAddEntrySuccess | CartActions.CartAddEntryFail",
            "canonicalReference": "",
            "shortType": ""
          }
        ],
        "returnType": "ProductImportInfo"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class CartOrderEntriesContext has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "CartOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "CartOutlets",
    "members": ["ITEM", "ITEM_BUNDLE_DETAILS", "ITEM_DETAILS"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "CartOutlets",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      },
      {
        "change": "ENUM_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Enum",
        "changeLabel": "changed",
        "changeElementName": "CartOutlets",
        "changeDesc": true,
        "previousStateDoc": "ITEM,\nITEM_BUNDLE_DETAILS,\nITEM_DETAILS",
        "currentStateDoc": "CART_ITEM_LIST,\nITEM,\nITEM_BUNDLE_DETAILS,\nITEM_DETAILS,\nORDER_SUMMARY",
        "new": [
          "CART_ITEM_LIST",
          "ITEM",
          "ITEM_BUNDLE_DETAILS",
          "ITEM_DETAILS",
          "ORDER_SUMMARY"
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartPageEvent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "canonicalReference": "@spartacus/storefront!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildCartPageEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CartPageEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartPageEventBuilder",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_cartPageEventBuilder",
            "type": "CartPageEventBuilder",
            "canonicalReference": "@spartacus/storefront!CartPageEventBuilder:class",
            "shortType": "CartPageEventBuilder",
            "importPath": "@spartacus/storefront"
          }
        ]
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartPageEventModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageLayoutHandler",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "handle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slots$",
            "type": "Observable<string[]>",
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          },
          {
            "name": "pageTemplate",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartPageLayoutHandler",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n  selectiveCartService: SelectiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n  selectiveCartService: SelectiveCartFacade\n  cartConfig: CartConfigService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cartConfig",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/cart_base_components!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/cart/base/core"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cartConfig",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/cart_base_components!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/cart/base/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "handle",
        "changeDesc": true,
        "previousStateDoc": "\nhandle(\n  slots$: Observable<string[]>\n  pageTemplate: string\n  section: string\n): Observable<any>\n",
        "currentStateDoc": "\nhandle(\n  slots$: Observable<string[]>\n  pageTemplate: string\n  section: string\n): Observable<string[]>\n"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "selectiveCartService",
        "changeDesc": true,
        "oldType": "SelectiveCartService",
        "newType": "SelectiveCartFacade",
        "previousStateDoc": "selectiveCartService: SelectiveCartService",
        "currentStateDoc": "selectiveCartService: SelectiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartSharedModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartSharedModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartValidationInProgress",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "disableButtonWhileNavigation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartTotalsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService,\n  router: Router\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeCartService: ActiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "newParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ],
          "addedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartValidationInProgress",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartValidationInProgress",
          "type": "boolean"
        },
        "apiElementName": "CartTotalsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'cartValidationInProgress' was removed from Class 'CartTotalsComponent'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "disableButtonWhileNavigation",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "disableButtonWhileNavigation",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CartTotalsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Method 'disableButtonWhileNavigation' was removed from Class 'CartTotalsComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "entries$",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "entries$",
          "type": "Observable<OrderEntry[]>"
        },
        "apiElementName": "CartTotalsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'entries$' was removed from Class 'CartTotalsComponent'.",
        "migrationComment": ""
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnDestroy",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "CartTotalsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Method 'ngOnDestroy' was removed from Class 'CartTotalsComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "router",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "router",
          "type": "Router"
        },
        "apiElementName": "CartTotalsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'router' was removed from Class 'CartTotalsComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "subscription",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "subscription",
          "type": "Subscription"
        },
        "apiElementName": "CartTotalsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'subscription' was removed from Class 'CartTotalsComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartTotalsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartTotalsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationComponentsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationComponentsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartValidationService",
            "type": "CartValidationService",
            "canonicalReference": "@spartacus/storefront!CartValidationService:class",
            "shortType": "CartValidationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartValidationStateService",
            "type": "CartValidationStateService",
            "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
            "shortType": "CartValidationStateService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cartConfigService",
            "type": "CartConfigService",
            "canonicalReference": "@spartacus/storefront!CartConfigService:class",
            "shortType": "CartConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "cartConfigService",
        "type": "CartConfigService"
      },
      {
        "kind": "Property",
        "name": "cartValidationService",
        "type": "CartValidationService"
      },
      {
        "kind": "Property",
        "name": "cartValidationStateService",
        "type": "CartValidationStateService"
      },
      {
        "kind": "Property",
        "name": "GLOBAL_MESSAGE_TIMEOUT",
        "type": "number"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cartValidationService: CartValidationService\n  semanticPathService: SemanticPathService\n  router: Router\n  globalMessageService: GlobalMessageService\n  activeCartService: ActiveCartService\n  cartValidationStateService: CartValidationStateService\n  cartConfigService: CartConfigService\n)\n",
        "currentStateDoc": "\nconstructor(\n  cartValidationService: CartValidationFacade\n  semanticPathService: SemanticPathService\n  router: Router\n  globalMessageService: GlobalMessageService\n  activeCartService: ActiveCartFacade\n  cartValidationStateService: CartValidationStateService\n  cartConfigService: CartConfigService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cartValidationService",
              "type": "CartValidationService",
              "canonicalReference": "@spartacus/storefront!CartValidationService:class",
              "shortType": "CartValidationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartValidationStateService",
              "type": "CartValidationStateService",
              "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
              "shortType": "CartValidationStateService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "cartConfigService",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/storefront!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "cartValidationService",
              "type": "CartValidationFacade",
              "canonicalReference": "@spartacus/cart_base_core!CartValidationFacade:class",
              "shortType": "CartValidationFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "semanticPathService",
              "type": "SemanticPathService",
              "canonicalReference": "@spartacus/cart_base_core!SemanticPathService:class",
              "shortType": "SemanticPathService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/cart_base_core!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "cartValidationStateService",
              "type": "CartValidationStateService",
              "canonicalReference": "@spartacus/cart_base_core!CartValidationStateService:class",
              "shortType": "CartValidationStateService",
              "importPath": "@spartacus/cart/base/core"
            },
            {
              "name": "cartConfigService",
              "type": "CartConfigService",
              "canonicalReference": "@spartacus/cart_base_core!CartConfigService:class",
              "shortType": "CartConfigService",
              "importPath": "@spartacus/cart/base/core"
            }
          ],
          "removedParams": [
            {
              "name": "cartValidationService",
              "type": "CartValidationService",
              "canonicalReference": "@spartacus/storefront!CartValidationService:class",
              "shortType": "CartValidationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "cartValidationService",
              "type": "CartValidationFacade",
              "canonicalReference": "@spartacus/cart_base_core!CartValidationFacade:class",
              "shortType": "CartValidationFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "activeCartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_core!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "activeCartService: ActiveCartService",
        "currentStateDoc": "activeCartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "cartValidationService",
        "changeDesc": true,
        "oldType": "CartValidationService",
        "newType": "CartValidationFacade",
        "previousStateDoc": "cartValidationService: CartValidationService",
        "currentStateDoc": "cartValidationService: CartValidationFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationStateService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartValidationResult$",
        "type": "Observable<CartModification[]>"
      },
      {
        "kind": "Property",
        "name": "checkForValidationResultClear$",
        "type": "Observable<[import(\"@spartacus/core\").RouterState, CartModification[]]>"
      },
      { "kind": "Property", "name": "NAVIGATION_SKIPS", "type": "number" },
      { "kind": "Property", "name": "navigationIdCount", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "setInitialState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setNavigationIdStep",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "updateValidationResultAndRoutingId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartModification",
            "type": "CartModification[]",
            "canonicalReference": "@spartacus/storefront!CartModification:interface",
            "shortType": "CartModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/core",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationStateService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/core", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationWarningsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartValidationStateService",
            "type": "CartValidationStateService",
            "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
            "shortType": "CartValidationStateService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartModifications$",
        "type": "import(\"rxjs\").Observable<CartModification[]>"
      },
      {
        "kind": "Property",
        "name": "cartValidationStateService",
        "type": "CartValidationStateService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "removeMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartModification",
            "type": "CartModification",
            "canonicalReference": "@spartacus/storefront!CartModification:interface",
            "shortType": "CartModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "visibleWarnings",
        "type": "Record<string, boolean>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationWarningsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cartValidationStateService: CartValidationStateService\n)\n",
        "currentStateDoc": "\nconstructor(\n  cartValidationFacade: CartValidationFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cartValidationStateService",
              "type": "CartValidationStateService",
              "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
              "shortType": "CartValidationStateService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "cartValidationFacade",
              "type": "CartValidationFacade",
              "canonicalReference": "@spartacus/cart_base_components!CartValidationFacade:class",
              "shortType": "CartValidationFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "cartValidationStateService",
              "type": "CartValidationStateService",
              "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
              "shortType": "CartValidationStateService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "addedParams": [
            {
              "name": "cartValidationFacade",
              "type": "CartValidationFacade",
              "canonicalReference": "@spartacus/cart_base_components!CartValidationFacade:class",
              "shortType": "CartValidationFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cartValidationStateService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "cartValidationStateService",
          "type": "CartValidationStateService"
        },
        "apiElementName": "CartValidationWarningsComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'cartValidationStateService' was removed from Class 'CartValidationWarningsComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationWarningsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "CartValidationWarningsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsGuardsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "injector",
            "type": "Injector",
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      {
        "kind": "Method",
        "name": "cmsPageCanActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "route",
            "type": "CmsActivatedRouteSnapshot",
            "canonicalReference": "@spartacus/storefront!CmsActivatedRouteSnapshot:interface",
            "shortType": "CmsActivatedRouteSnapshot",
            "importPath": "@spartacus/core"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cmsComponentsService: CmsComponentsService\n  injector: Injector\n)\n",
        "currentStateDoc": "\nconstructor(\n  cmsComponentsService: CmsComponentsService\n  unifiedInjector: UnifiedInjector\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cmsComponentsService",
              "type": "CmsComponentsService",
              "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
              "shortType": "CmsComponentsService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "injector",
              "type": "Injector",
              "canonicalReference": "@angular/core!Injector:class",
              "shortType": "Injector",
              "importPath": "@angular/core"
            }
          ],
          "newParams": [
            {
              "name": "cmsComponentsService",
              "type": "CmsComponentsService",
              "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
              "shortType": "CmsComponentsService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "unifiedInjector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "injector",
              "type": "Injector",
              "canonicalReference": "@angular/core!Injector:class",
              "shortType": "Injector",
              "importPath": "@angular/core"
            }
          ],
          "addedParams": [
            {
              "name": "unifiedInjector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "injector",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "injector",
          "type": "Injector"
        },
        "apiElementName": "CmsGuardsService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'injector' was removed from Class 'CmsGuardsService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ConsignmentTrackingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "consignment", "type": "Consignment" },
      { "kind": "Property", "name": "consignmentStatus", "type": "string[]" },
      {
        "kind": "Property",
        "name": "consignmentTracking$",
        "type": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openTrackingDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "canonicalReference": "@spartacus/storefront!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ConsignmentTrackingComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userOrderService: UserOrderService\n  modalService: ModalService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderHistoryFacade: OrderHistoryFacade\n  modalService: ModalService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/storefront!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "modalService",
              "type": "ModalService",
              "canonicalReference": "@spartacus/order_components!ModalService:class",
              "shortType": "ModalService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultReplenishmentOrderCancellationLayoutConfig",
    "type": "LayoutConfig",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "defaultReplenishmentOrderCancellationLayoutConfig",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "GetOrderEntriesContext",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "GetOrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "accordionText", "type": "string" },
      { "kind": "Property", "name": "actionButtonText", "type": "string" },
      {
        "kind": "Property",
        "name": "buttonAction",
        "type": "EventEmitter<void>"
      },
      {
        "kind": "Property",
        "name": "closeMessage",
        "type": "EventEmitter<void>"
      },
      {
        "kind": "Property",
        "name": "getCssClassesForMessage",
        "type": "Record<string, boolean>"
      },
      { "kind": "Property", "name": "getIconType", "type": "string" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isVisibleCloseButton", "type": "boolean" },
      { "kind": "Property", "name": "showBody", "type": "boolean" },
      { "kind": "Property", "name": "text", "type": "string" },
      { "kind": "Property", "name": "type", "type": "GlobalMessageType" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "getIconType",
        "changeDesc": true,
        "oldType": "string",
        "newType": "ICON_TYPE",
        "previousStateDoc": "getIconType: string",
        "currentStateDoc": "getIconType: ICON_TYPE"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MiniCartComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "quantity$", "type": "Observable<number>" },
      { "kind": "Property", "name": "total$", "type": "Observable<string>" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components/mini-cart",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "MiniCartComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components/mini-cart",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeCartService: ActiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  miniCartComponentService: MiniCartComponentService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "miniCartComponentService",
              "type": "MiniCartComponentService",
              "canonicalReference": "@spartacus/cart_base_components_mini-cart!MiniCartComponentService:class",
              "shortType": "MiniCartComponentService",
              "importPath": "@spartacus/cart/base/components/mini-cart"
            }
          ],
          "removedParams": [
            {
              "name": "activeCartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "miniCartComponentService",
              "type": "MiniCartComponentService",
              "canonicalReference": "@spartacus/cart_base_components_mini-cart!MiniCartComponentService:class",
              "shortType": "MiniCartComponentService",
              "importPath": "@spartacus/cart/base/components/mini-cart"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeCartService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "activeCartService",
          "type": "ActiveCartService"
        },
        "apiElementName": "MiniCartComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'activeCartService' was removed from Class 'MiniCartComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MiniCartModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components/mini-cart",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "MiniCartModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components/mini-cart",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationUIComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "elemRef",
            "type": "ElementRef",
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "canonicalReference": "@spartacus/storefront!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "flyout", "type": "boolean" },
      {
        "kind": "Method",
        "name": "focusAfterPreviousClicked",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "getColumnCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "length",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getTotalDepth",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "node",
            "type": "NavigationNode",
            "canonicalReference": "@spartacus/storefront!NavigationNode:interface",
            "shortType": "NavigationNode",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "depth",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "hamburgerMenuService",
        "type": "HamburgerMenuService"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isOpen", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "node", "type": "NavigationNode" },
      {
        "kind": "Method",
        "name": "onMouseEnter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onResize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reinitalizeMenu",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "resetMenuOnClose", "type": "boolean" },
      {
        "kind": "Method",
        "name": "resetOnMenuCollapse",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleOpen",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "wrapAfter", "type": "number" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  router: Router\n  renderer: Renderer2\n  elemRef: ElementRef\n  hamburgerMenuService: HamburgerMenuService\n)\n",
        "currentStateDoc": "\nconstructor(\n  router: Router\n  renderer: Renderer2\n  elemRef: ElementRef\n  hamburgerMenuService: HamburgerMenuService\n  winRef: WindowRef\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "renderer",
              "type": "Renderer2",
              "canonicalReference": "@angular/core!Renderer2:class",
              "shortType": "Renderer2",
              "importPath": "@angular/core"
            },
            {
              "name": "elemRef",
              "type": "ElementRef",
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "canonicalReference": "@spartacus/storefront!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "router",
              "type": "Router",
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "renderer",
              "type": "Renderer2",
              "canonicalReference": "@angular/core!Renderer2:class",
              "shortType": "Renderer2",
              "importPath": "@angular/core"
            },
            {
              "name": "elemRef",
              "type": "ElementRef",
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "canonicalReference": "@spartacus/storefront!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/storefront!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [],
          "addedParams": [
            {
              "name": "winRef",
              "type": "WindowRef",
              "canonicalReference": "@spartacus/storefront!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "reinitalizeMenu",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "reinitalizeMenu",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "NavigationUIComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Method 'reinitalizeMenu' was removed from Class 'NavigationUIComponent'.",
        "migrationComment": "Use 'reinitializeMenu' instead."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "ORDER_ENTRIES_CONTEXT",
    "type": "unique symbol",
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "VARIABLE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Variable",
        "changeLabel": "moved",
        "changeElementName": "ORDER_ENTRIES_CONTEXT",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderAmendService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getAmendedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getAmendedPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Price"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<FormGroup>"
      },
      {
        "kind": "Method",
        "name": "getFormControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getMaxAmendQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "isCancellation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderAmendService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderCancellationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderCancellationService",
            "canonicalReference": "@spartacus/storefront!OrderCancellationService:class",
            "shortType": "OrderCancellationService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderCancellationService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderCancellationGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderCancellationModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderCancellationModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderCancellationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userOrderService",
        "type": "UserOrderService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderCancellationService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  orderDetailsService: OrderDetailsService\n  userOrderService: UserOrderService\n  routing: RoutingService\n  globalMessageService: GlobalMessageService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderDetailsService: OrderDetailsService\n  orderHistoryFacade: OrderHistoryFacade\n  routing: RoutingService\n  globalMessageService: GlobalMessageService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userOrderService",
          "type": "UserOrderService"
        },
        "apiElementName": "OrderCancellationService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userOrderService' was removed from Class 'OrderCancellationService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderConsignedEntriesComponent",
    "members": [
      { "kind": "Property", "name": "consignments", "type": "Consignment[]" },
      {
        "kind": "Method",
        "name": "getConsignmentProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "canonicalReference": "@spartacus/storefront!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderEntry[]"
      },
      { "kind": "Property", "name": "order", "type": "Order" },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderConsignedEntriesComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailActionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailActionsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cancel$",
        "type": "Observable<Consignment[]>"
      },
      {
        "kind": "Property",
        "name": "completed$",
        "type": "Observable<Consignment[]>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "others$",
        "type": "Observable<Consignment[]>"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailItemsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "cancel$",
        "changeDesc": true,
        "oldType": "Observable<Consignment[]>",
        "newType": "Observable<Consignment[] | undefined>",
        "previousStateDoc": "cancel$: Observable<Consignment[]>",
        "currentStateDoc": "cancel$: Observable<Consignment[] | undefined>"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "completed$",
        "changeDesc": true,
        "oldType": "Observable<Consignment[]>",
        "newType": "Observable<Consignment[] | undefined>",
        "previousStateDoc": "completed$: Observable<Consignment[]>",
        "currentStateDoc": "completed$: Observable<Consignment[] | undefined>"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "order$",
        "changeDesc": true,
        "oldType": "Observable<any>",
        "newType": "Observable<Order>",
        "previousStateDoc": "order$: Observable<any>",
        "currentStateDoc": "order$: Observable<Order>"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "others$",
        "changeDesc": true,
        "oldType": "Observable<Consignment[]>",
        "newType": "Observable<Consignment[] | undefined>",
        "previousStateDoc": "others$: Observable<Consignment[]>",
        "currentStateDoc": "others$: Observable<Consignment[] | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailShippingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailShippingComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "unifiedInjector",
            "type": "UnifiedInjector",
            "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
            "shortType": "UnifiedInjector",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Property",
        "name": "orderCode$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "orderLoad$", "type": "Observable<{}>" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailsService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userOrderService: UserOrderService\n  routingService: RoutingService\n  unifiedInjector: UnifiedInjector\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderHistoryFacade: OrderHistoryFacade\n  routingService: RoutingService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "unifiedInjector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "unifiedInjector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailsServiceTransitionalToken",
    "members": [
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      }
    ],
    "isDeleted": true,
    "deletedComment": "Class OrderDetailsServiceTransitionalToken has been removed and is no longer part of the public API.",
    "migrationComment": "",
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderDetailsServiceTransitionalToken",
        "changeDesc": true,
        "target": "toplevel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderDetailTotalsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "OrderEntriesContext",
    "members": [
      "Partial",
      "<",
      "AddOrderEntriesContext",
      " & ",
      "GetOrderEntriesContext",
      ">"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "OrderEntriesContext",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "OrderEntriesSource",
    "members": [
      "ACTIVE_CART",
      "NEW_SAVED_CART",
      "ORDER_CONFIRMATION",
      "ORDER_DETAILS",
      "QUICK_ORDER",
      "SAVED_CART"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "OrderEntriesSource",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byOrderNumber: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "Order",
            "canonicalReference": "@spartacus/storefront!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hasReplenishmentOrder$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orders$",
        "type": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userOrderService",
        "type": "UserOrderService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderHistoryComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routing: RoutingService\n  userOrderService: UserOrderService\n  translation: TranslationService\n  userReplenishmentOrderService: UserReplenishmentOrderService\n)\n",
        "currentStateDoc": "\nconstructor(\n  routing: RoutingService\n  orderHistoryFacade: OrderHistoryFacade\n  translation: TranslationService\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "orders$",
        "changeDesc": true,
        "oldType": "Observable<OrderHistoryList>",
        "newType": "Observable<OrderHistoryList | undefined>",
        "previousStateDoc": "orders$: Observable<OrderHistoryList>",
        "currentStateDoc": "orders$: Observable<OrderHistoryList | undefined>"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userOrderService",
          "type": "UserOrderService"
        },
        "apiElementName": "OrderHistoryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userOrderService' was removed from Class 'OrderHistoryComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "UserReplenishmentOrderService"
        },
        "apiElementName": "OrderHistoryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'OrderHistoryComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderHistoryModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderHistoryModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryAddress",
            "type": "Address",
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getBillingAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "billingAddress",
            "type": "Address",
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCostCenterCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenter",
            "type": "CostCenter",
            "canonicalReference": "@spartacus/storefront!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode",
            "type": "DeliveryMode",
            "canonicalReference": "@spartacus/storefront!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getMethodOfPaymentCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hasPaymentInfo",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderCodeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderCurrentDateCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderStatusCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "status",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentInfoCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payment",
            "type": "PaymentDetails",
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPurchaseOrderNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "poNumber",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentActiveCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "active",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentCodeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentFrequencyCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "frequency",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentNextDateCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentStartOnCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "order", "type": "any" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderOverviewComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getOrderCurrentDateCardContent",
        "changeDesc": true,
        "previousStateDoc": "\ngetOrderCurrentDateCardContent(\n  isoDate: string\n): Observable<Card>\n",
        "currentStateDoc": "\ngetOrderCurrentDateCardContent(\n  isoDate: string | null\n): Observable<Card>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentNextDateCardContent",
        "changeDesc": true,
        "previousStateDoc": "\ngetReplenishmentNextDateCardContent(\n  isoDate: string\n): Observable<Card>\n",
        "currentStateDoc": "\ngetReplenishmentNextDateCardContent(\n  isoDate: string | null\n): Observable<Card>\n"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getReplenishmentStartOnCardContent",
        "changeDesc": true,
        "previousStateDoc": "\ngetReplenishmentStartOnCardContent(\n  isoDate: string\n): Observable<Card>\n",
        "currentStateDoc": "\ngetReplenishmentStartOnCardContent(\n  isoDate: string | null\n): Observable<Card>\n"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderOverviewModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderOverviewModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderReturnService",
            "canonicalReference": "@spartacus/storefront!OrderReturnService:class",
            "shortType": "OrderReturnService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderReturnService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderReturnGuard",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderReturnModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnRequestListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "OrderReturnRequestService",
            "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
            "shortType": "OrderReturnRequestService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byRMA: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequests$",
        "type": "Observable<ReturnRequestList>"
      },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderReturnRequestListComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  returnRequestService: OrderReturnRequestService\n  translation: TranslationService\n)\n",
        "currentStateDoc": "\nconstructor(\n  returnRequestService: OrderReturnRequestFacade\n  translation: TranslationService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestService",
              "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
              "shortType": "OrderReturnRequestService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestFacade",
              "canonicalReference": "@spartacus/order_components!OrderReturnRequestFacade:class",
              "shortType": "OrderReturnRequestFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestService",
              "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
              "shortType": "OrderReturnRequestService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestFacade",
              "canonicalReference": "@spartacus/order_components!OrderReturnRequestFacade:class",
              "shortType": "OrderReturnRequestFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "returnRequests$",
        "changeDesc": true,
        "oldType": "Observable<ReturnRequestList>",
        "newType": "Observable<ReturnRequestList | undefined>",
        "previousStateDoc": "returnRequests$: Observable<ReturnRequestList>",
        "currentStateDoc": "returnRequests$: Observable<ReturnRequestList | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "returnRequestService",
            "type": "OrderReturnRequestService",
            "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
            "shortType": "OrderReturnRequestService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "OrderReturnRequestService"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderReturnService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  orderDetailsService: OrderDetailsService\n  returnRequestService: OrderReturnRequestService\n  routing: RoutingService\n  globalMessageService: GlobalMessageService\n)\n",
        "currentStateDoc": "\nconstructor(\n  orderDetailsService: OrderDetailsService\n  returnRequestService: OrderReturnRequestFacade\n  routing: RoutingService\n  globalMessageService: GlobalMessageService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestService",
              "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
              "shortType": "OrderReturnRequestService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestFacade",
              "canonicalReference": "@spartacus/order_components!OrderReturnRequestFacade:class",
              "shortType": "OrderReturnRequestFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestService",
              "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
              "shortType": "OrderReturnRequestService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "returnRequestService",
              "type": "OrderReturnRequestFacade",
              "canonicalReference": "@spartacus/order_components!OrderReturnRequestFacade:class",
              "shortType": "OrderReturnRequestFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "returnRequestService",
        "changeDesc": true,
        "oldType": "OrderReturnRequestService",
        "newType": "OrderReturnRequestFacade",
        "previousStateDoc": "returnRequestService: OrderReturnRequestService",
        "currentStateDoc": "returnRequestService: OrderReturnRequestFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderSummaryComponent",
    "members": [{ "kind": "Property", "name": "cart", "type": "Cart" }],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "OrderSummaryComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "PAGE_LAYOUT_HANDLER",
    "type": "InjectionToken<PageLayoutHandler[]>",
    "breakingChanges": [
      {
        "change": "VARIABLE_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Variable",
        "changeLabel": "changed",
        "changeElementName": "PAGE_LAYOUT_HANDLER",
        "changeDesc": true,
        "oldType": "InjectionToken<PageLayoutHandler[]>",
        "newType": "InjectionToken<PageLayoutHandler>",
        "previousStateDoc": "PAGE_LAYOUT_HANDLER: InjectionToken<PageLayoutHandler[]>",
        "currentStateDoc": "PAGE_LAYOUT_HANDLER: InjectionToken<PageLayoutHandler>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageLayoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cms",
            "type": "CmsService",
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "LayoutConfig",
            "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
            "shortType": "LayoutConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "handlers",
            "type": "PageLayoutHandler[]",
            "canonicalReference": "@spartacus/storefront!PageLayoutHandler:interface",
            "shortType": "PageLayoutHandler",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getPageFoldSlot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageTemplate",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getResponsiveSlotConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "layoutSlotConfig",
            "type": "LayoutSlotConfig",
            "canonicalReference": "@spartacus/storefront!LayoutSlotConfig:type",
            "shortType": "LayoutSlotConfig",
            "importPath": ""
          },
          {
            "name": "configAttribute",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SlotConfig"
      },
      {
        "kind": "Method",
        "name": "getSlotConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateUid",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configAttribute",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SlotConfig"
      },
      {
        "kind": "Method",
        "name": "getSlotConfigForSection",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateUid",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configAttribute",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SlotConfig"
      },
      {
        "kind": "Method",
        "name": "getSlots",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "section",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string[]>"
      },
      { "kind": "Property", "name": "page$", "type": "Observable<Page>" },
      {
        "kind": "Property",
        "name": "templateName$",
        "type": "Observable<string>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cms: CmsService\n  config: LayoutConfig\n  breakpointService: BreakpointService\n  handlers: PageLayoutHandler[]\n)\n",
        "currentStateDoc": "\nconstructor(\n  cms: CmsService\n  config: LayoutConfig\n  breakpointService: BreakpointService\n  unifiedInjector: UnifiedInjector\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cms",
              "type": "CmsService",
              "canonicalReference": "@spartacus/storefront!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "config",
              "type": "LayoutConfig",
              "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
              "shortType": "LayoutConfig",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "canonicalReference": "@spartacus/storefront!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "handlers",
              "type": "PageLayoutHandler[]",
              "canonicalReference": "@spartacus/storefront!PageLayoutHandler:interface",
              "shortType": "PageLayoutHandler",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "cms",
              "type": "CmsService",
              "canonicalReference": "@spartacus/storefront!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "config",
              "type": "LayoutConfig",
              "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
              "shortType": "LayoutConfig",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "canonicalReference": "@spartacus/storefront!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "unifiedInjector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "handlers",
              "type": "PageLayoutHandler[]",
              "canonicalReference": "@spartacus/storefront!PageLayoutHandler:interface",
              "shortType": "PageLayoutHandler",
              "importPath": "@spartacus/storefront"
            }
          ],
          "addedParams": [
            {
              "name": "unifiedInjector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "ProductData",
    "members": ["{\n    productCode: string;\n    quantity: number;\n}"],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "TYPEALIAS_MOVED",
        "changeType": "MOVED",
        "changeKind": "TypeAlias",
        "changeLabel": "moved",
        "changeElementName": "ProductData",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProductImportInfo",
    "members": [
      { "kind": "PropertySignature", "name": "productCode", "type": "string" },
      { "kind": "PropertySignature", "name": "productName", "type": "string" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "quantityAdded",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "statusCode",
        "type": "ProductImportStatus"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ProductImportInfo",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ProductImportStatus",
    "members": [
      "LIMIT_EXCEEDED",
      "LOW_STOCK",
      "NO_STOCK",
      "SUCCESS",
      "UNKNOWN_ERROR",
      "UNKNOWN_IDENTIFIER"
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "ENUM_MOVED",
        "changeType": "MOVED",
        "changeKind": "Enum",
        "changeLabel": "moved",
        "changeElementName": "ProductImportStatus",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProductImportSummary",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartName",
        "type": "string | undefined"
      },
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "errorMessages",
        "type": "ProductImportInfo[]"
      },
      { "kind": "PropertySignature", "name": "loading", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "successesCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "total", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "warningMessages",
        "type": "ProductImportInfo[]"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/root",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "ProductImportSummary",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/base/root", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProgressButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "ariaLabel", "type": "string" },
      { "kind": "Property", "name": "class", "type": "string" },
      { "kind": "Property", "name": "clikEvent", "type": "EventEmitter<void>" },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      { "kind": "Property", "name": "loading", "type": "boolean" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "clikEvent",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "clikEvent",
          "type": "EventEmitter<void>"
        },
        "apiElementName": "ProgressButtonComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'clikEvent' was removed from Class 'ProgressButtonComponent'.",
        "migrationComment": "It is renamed to 'clickEvent' to fix a typo."
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrder$",
        "type": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderCancellationComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userReplenishmentOrderService: UserReplenishmentOrderService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "currentStateDoc": "\nconstructor(\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "UserReplenishmentOrderService"
        },
        "apiElementName": "ReplenishmentOrderCancellationComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderCancellationComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderCancellationDialogComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  userReplenishmentOrderService: UserReplenishmentOrderService\n  globalMessageService: GlobalMessageService\n  launchDialogService: LaunchDialogService\n  el: ElementRef\n)\n",
        "currentStateDoc": "\nconstructor(\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n  globalMessageService: GlobalMessageService\n  launchDialogService: LaunchDialogService\n  el: ElementRef\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ],
          "newParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "UserReplenishmentOrderService"
        },
        "apiElementName": "ReplenishmentOrderCancellationDialogComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderCancellationDialogComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderCancellationDialogModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderDetailsModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode$",
        "type": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderLoad$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderDetailsService",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routingService: RoutingService\n  userReplenishmentOrderService: UserReplenishmentOrderService\n)\n",
        "currentStateDoc": "\nconstructor(\n  routingService: RoutingService\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "routingService",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "UserReplenishmentOrderService"
        },
        "apiElementName": "ReplenishmentOrderDetailsService",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderDetailsService'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byReplenishmentNumber: string;\n        byNextOrderDate: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "ReplenishmentOrder",
            "canonicalReference": "@spartacus/storefront!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrders$",
        "type": "Observable<ReplenishmentOrderList>"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderHistoryComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  routing: RoutingService\n  userReplenishmentOrderService: UserReplenishmentOrderService\n  translation: TranslationService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "currentStateDoc": "\nconstructor(\n  routing: RoutingService\n  replenishmentOrderHistoryFacade: ReplenishmentOrderHistoryFacade\n  translation: TranslationService\n  vcr: ViewContainerRef\n  launchDialogService: LaunchDialogService\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/storefront!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "newParams": [
            {
              "name": "routing",
              "type": "RoutingService",
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "vcr",
              "type": "ViewContainerRef",
              "canonicalReference": "@angular/core!ViewContainerRef:class",
              "shortType": "ViewContainerRef",
              "importPath": "@angular/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ],
          "removedParams": [
            {
              "name": "userReplenishmentOrderService",
              "type": "UserReplenishmentOrderService",
              "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
              "shortType": "UserReplenishmentOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "replenishmentOrders$",
        "changeDesc": true,
        "oldType": "Observable<ReplenishmentOrderList>",
        "newType": "Observable<ReplenishmentOrderList | undefined>",
        "previousStateDoc": "replenishmentOrders$: Observable<ReplenishmentOrderList>",
        "currentStateDoc": "replenishmentOrders$: Observable<ReplenishmentOrderList | undefined>"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "userReplenishmentOrderService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "userReplenishmentOrderService",
          "type": "UserReplenishmentOrderService"
        },
        "apiElementName": "ReplenishmentOrderHistoryComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'userReplenishmentOrderService' was removed from Class 'ReplenishmentOrderHistoryComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReplenishmentOrderHistoryModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnOrderComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderConfirmationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnOrderConfirmationComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderConfirmationModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnOrderConfirmationModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnOrderModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestDetailModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestDetailModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "canonicalReference": "@spartacus/storefront!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestItemsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestListModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestListModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "canonicalReference": "@spartacus/storefront!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cancelReturn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isCancelling$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      },
      { "kind": "Property", "name": "rma", "type": "string" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestOverviewComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "canonicalReference": "@spartacus/storefront!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "ReturnRequestTotalsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "RoutingContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoutesService",
            "type": "ActivatedRoutesService",
            "canonicalReference": "@spartacus/storefront!ActivatedRoutesService:class",
            "shortType": "ActivatedRoutesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoutesService",
        "type": "ActivatedRoutesService"
      },
      {
        "kind": "Property",
        "name": "contextTokenMapping$",
        "type": "Observable<Record<ContextToken, any>>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "contextToken",
            "type": "ContextToken",
            "canonicalReference": "@spartacus/storefront!ContextToken:type",
            "shortType": "ContextToken",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T | undefined>"
      },
      {
        "kind": "Method",
        "name": "getRoutesContextTokenMapping",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routes",
            "type": "ActivatedRouteSnapshot[]",
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Record<ContextToken, any>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activatedRoutesService: ActivatedRoutesService\n  injector: Injector\n)\n",
        "currentStateDoc": "\nconstructor(\n  activatedRoutesService: ActivatedRoutesService\n  injector: UnifiedInjector\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activatedRoutesService",
              "type": "ActivatedRoutesService",
              "canonicalReference": "@spartacus/storefront!ActivatedRoutesService:class",
              "shortType": "ActivatedRoutesService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "injector",
              "type": "Injector",
              "canonicalReference": "@angular/core!Injector:class",
              "shortType": "Injector",
              "importPath": "@angular/core"
            }
          ],
          "newParams": [
            {
              "name": "activatedRoutesService",
              "type": "ActivatedRoutesService",
              "canonicalReference": "@spartacus/storefront!ActivatedRoutesService:class",
              "shortType": "ActivatedRoutesService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "injector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ],
          "removedParams": [
            {
              "name": "injector",
              "type": "Injector",
              "canonicalReference": "@angular/core!Injector:class",
              "shortType": "Injector",
              "importPath": "@angular/core"
            }
          ],
          "addedParams": [
            {
              "name": "injector",
              "type": "UnifiedInjector",
              "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
              "shortType": "UnifiedInjector",
              "importPath": "@spartacus/core"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "injector",
        "changeDesc": true,
        "oldType": "Injector",
        "newType": "UnifiedInjector",
        "previousStateDoc": "injector: Injector",
        "currentStateDoc": "injector: UnifiedInjector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SaveForLaterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartService",
            "type": "ActiveCartService",
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "CartLocation",
        "type": "typeof PromotionLocation"
      },
      {
        "kind": "Property",
        "name": "cartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Property",
        "name": "data$",
        "type": "Observable<CmsParagraphComponent>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "isCartEmpty$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "moveToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "saveForLater$",
        "type": "Observable<Cart>"
      },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "SaveForLaterComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  cmsService: CmsService\n  cartService: ActiveCartService\n  selectiveCartService: SelectiveCartService\n)\n",
        "currentStateDoc": "\nconstructor(\n  cmsService: CmsService\n  cartService: ActiveCartFacade\n  selectiveCartService: SelectiveCartFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "cmsService",
              "type": "CmsService",
              "canonicalReference": "@spartacus/storefront!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "cmsService",
              "type": "CmsService",
              "canonicalReference": "@spartacus/cart_base_components!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "removedParams": [
            {
              "name": "cartService",
              "type": "ActiveCartService",
              "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
              "shortType": "ActiveCartService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartService",
              "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
              "shortType": "SelectiveCartService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "cartService",
              "type": "ActiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "selectiveCartService",
              "type": "SelectiveCartFacade",
              "canonicalReference": "@spartacus/cart_base_components!SelectiveCartFacade:class",
              "shortType": "SelectiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "cartService",
        "changeDesc": true,
        "oldType": "ActiveCartService",
        "newType": "ActiveCartFacade",
        "previousStateDoc": "cartService: ActiveCartService",
        "currentStateDoc": "cartService: ActiveCartFacade"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "selectiveCartService",
        "changeDesc": true,
        "oldType": "SelectiveCartService",
        "newType": "SelectiveCartFacade",
        "previousStateDoc": "selectiveCartService: SelectiveCartService",
        "currentStateDoc": "selectiveCartService: SelectiveCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SaveForLaterModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/base/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "SaveForLaterModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/base/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TabParagraphContainerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CMSTabParagraphContainer>",
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsService",
            "type": "CmsService",
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "activeTabNum", "type": "number" },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "children",
        "type": "QueryList<ComponentWrapperDirective>"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CMSTabParagraphContainer>"
      },
      {
        "kind": "Property",
        "name": "components$",
        "type": "Observable<any[]>"
      },
      {
        "kind": "Method",
        "name": "ngAfterViewInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "select",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tabNum",
            "type": "number",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "event",
            "type": "MouseEvent",
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "tabCompLoaded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentRef",
            "type": "any",
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "tabTitleParams",
        "type": "(Observable<any> | null)[]"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnDestroy",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "apiElementName": "TabParagraphContainerComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Method 'ngOnDestroy' was removed from Class 'TabParagraphContainerComponent'.",
        "migrationComment": ""
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "subscription",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "subscription",
          "type": "Subscription"
        },
        "apiElementName": "TabParagraphContainerComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'subscription' was removed from Class 'TabParagraphContainerComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TrackingEventsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeModal",
            "type": "NgbActiveModal",
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
            "shortType": "NgbActiveModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "activeModal", "type": "NgbActiveModal" },
      { "kind": "Property", "name": "consignmentCode", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "shipDate", "type": "Date" },
      {
        "kind": "Property",
        "name": "tracking$",
        "type": "Observable<ConsignmentTracking>"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/order/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "TrackingEventsComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/order/components", "namespace": "" }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  activeModal: NgbActiveModal\n  userOrderService: UserOrderService\n)\n",
        "currentStateDoc": "\nconstructor(\n  activeModal: NgbActiveModal\n  orderHistoryFacade: OrderHistoryFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "activeModal",
              "type": "NgbActiveModal",
              "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
              "shortType": "NgbActiveModal",
              "importPath": "@ng-bootstrap/ng-bootstrap"
            },
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "activeModal",
              "type": "NgbActiveModal",
              "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
              "shortType": "NgbActiveModal",
              "importPath": "@ng-bootstrap/ng-bootstrap"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ],
          "removedParams": [
            {
              "name": "userOrderService",
              "type": "UserOrderService",
              "canonicalReference": "@spartacus/storefront!UserOrderService:class",
              "shortType": "UserOrderService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "WishListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "wishListService",
            "type": "WishListService",
            "canonicalReference": "@spartacus/storefront!WishListService:class",
            "shortType": "WishListService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "wishList$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "wishListService",
        "type": "WishListService"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "WishListComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/components",
          "namespace": ""
        }
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeDesc": true,
        "previousStateDoc": "\nconstructor(\n  wishListService: WishListService\n)\n",
        "currentStateDoc": "\nconstructor(\n  wishListFacade: WishListFacade\n)\n",
        "details": {
          "kind": "Constructor",
          "name": "constructor",
          "oldParams": [
            {
              "name": "wishListService",
              "type": "WishListService",
              "canonicalReference": "@spartacus/storefront!WishListService:class",
              "shortType": "WishListService",
              "importPath": "@spartacus/core"
            }
          ],
          "newParams": [
            {
              "name": "wishListFacade",
              "type": "WishListFacade",
              "canonicalReference": "@spartacus/cart_wish-list_components!WishListFacade:class",
              "shortType": "WishListFacade",
              "importPath": "@spartacus/cart/wish-list/root"
            }
          ],
          "removedParams": [
            {
              "name": "wishListService",
              "type": "WishListService",
              "canonicalReference": "@spartacus/storefront!WishListService:class",
              "shortType": "WishListService",
              "importPath": "@spartacus/core"
            }
          ],
          "addedParams": [
            {
              "name": "wishListFacade",
              "type": "WishListFacade",
              "canonicalReference": "@spartacus/cart_wish-list_components!WishListFacade:class",
              "shortType": "WishListFacade",
              "importPath": "@spartacus/cart/wish-list/root"
            }
          ]
        }
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "wishListService",
        "changeDesc": true,
        "isDeletedMember": true,
        "deletedMember": {
          "kind": "Property",
          "name": "wishListService",
          "type": "WishListService"
        },
        "apiElementName": "WishListComponent",
        "apiElementKind": "Class",
        "entryPoint": "@spartacus/storefront",
        "deletedComment": "// TODO:Spartacus - Property 'wishListService' was removed from Class 'WishListComponent'.",
        "migrationComment": ""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "WishListItemComponent",
    "members": [
      { "kind": "Property", "name": "cartEntry", "type": "OrderEntry" },
      { "kind": "Property", "name": "isLoading", "type": "boolean" },
      {
        "kind": "Property",
        "name": "remove",
        "type": "EventEmitter<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list/components",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "WishListItemComponent",
        "changeDesc": true,
        "target": "toplevel",
        "to": {
          "entryPoint": "@spartacus/cart/wish-list/components",
          "namespace": ""
        }
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "WishListModule",
    "members": [],
    "isMoved": true,
    "newName": "",
    "newEntryPoint": "@spartacus/cart/wish-list",
    "newNamespace": "",
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "WishListModule",
        "changeDesc": true,
        "target": "toplevel",
        "to": { "entryPoint": "@spartacus/cart/wish-list", "namespace": "" }
      }
    ]
  }
]
